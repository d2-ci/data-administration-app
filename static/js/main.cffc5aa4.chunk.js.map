{"version":3,"sources":["locales/index.js","i18n.js","configI18n.js","pages/home/grid-section/GridSection.js","pages/data-integrity/data.integrity.conf.js","pages/Page.js","pages/data-integrity/data-integrity-card/DataIntegrityCard.js","helpers/docs.js","components/page-helper/PageHelper.js","pages/data-integrity/DataIntegrity.js","pages/maintenance/maintenance.conf.js","pages/maintenance/Maintenance.js","components/notifications-table/notifications-table.conf.js","components/notifications-table/NotificationsTable.js","pages/resource-tables/resource-tables.conf.js","pages/resource-tables/ResourceTables.js","components/formatters/FormattedNumber.js","pages/data-statistics/DataStatisticsTable.js","pages/data-statistics/DataStatistics.js","pages/lock-exception/AddLockExceptionForm.js","helpers/pagination.js","pages/lock-exception/LockException.js","pages/min-max-value-generation/MinMaxValueGeneration.js","pages/analytics/analytics.conf.js","pages/analytics/Analytics.js","pages/sections.conf.js","pages/home/Home.js","components/app-router/NoMatch.js","components/app-router/AppRouter.js","App.js","theme.js","registerServiceWorker.js","index.js"],"names":["namespace","moment","locale","i18n","addResources","arTranslations","enTranslations","esTranslations","frTranslations","prsTranslations","psTranslations","ptTranslations","ruTranslations","tgTranslations","ukTranslations","viTranslations","setDefaultNamespace","changeLanguage","i18nKeys","dataIntegrity","title","label","description","actionText","performing","unexpectedError","actionButton","dataElementsWithoutDataSet","dataElementsWithoutGroups","dataElementsViolatingExclusiveGroupSets","dataElementsAssignedToDataSetsWithDifferentPeriodTypes","dataSetsNotAssignedToOrganisationUnits","indicatorsWithIdenticalFormulas","indicatorsWithoutGroups","invalidIndicatorNumerators","invalidIndicatorDenominators","indicatorsViolatingExclusiveGroupSets","organisationUnitsWithCyclicReferences","orphanedOrganisationUnits","organisationUnitsWithoutGroups","organisationUnitsViolatingExclusiveGroupSets","organisationUnitGroupsWithoutGroupSets","validationRulesWithoutGroups","invalidValidationRuleLeftSideExpressions","invalidValidationRuleRightSideExpressions","invalidProgramIndicatorExpressions","invalidProgramIndicatorFilters","dataElementsInDataSetNotInForm","invalidCategoryCombos","duplicatePeriods","programRulesWithNoCondition","programRulesWithNoAction","programRulesWithNoPriority","programRuleVariablesWithNoDataElement","programRuleVariablesWithNoAttribute","programRuleActionsWithNoDataObject","programRuleActionsWithNoNotification","programRuleActionsWithNoSectionId","programRuleActionsWithNoStageId","maintenance","actionPerformed","analyticsTableClear","analyticsTableAnalyze","zeroDataValueRemoval","softDeletedDataValueRemoval","softDeletedEventRemoval","softDeletedEnrollmentRemoval","softDeletedTrackedEntityInstanceRemoval","periodPruning","expiredInvitationsClear","sqlViewsDrop","sqlViewsCreate","categoryOptionComboUpdate","ouPathsUpdate","cacheClear","appReload","resourceTables","organisationUnitStructure","organistionUnitCategoryOptionCombo","categoryOptionGroupSetStructure","dataElementGroupSetStructure","indicatorGroupSetStructure","organisationUnitGroupSetStructure","categoryStructure","dataElementCategoryOptionComboName","dataElementStructure","periodStructure","dataPeriodStructure","dataElementCategoryOptionCombinations","dataStatistics","loadingMessage","errorMessage","noDataMessage","objectType","lastHour","today","last","days","usersLoggedIn","userAccountInvitations","pedingInvitations","expiredInvitations","dataValues","events","objects","indicator","period","programStageInstance","organisationUnit","validationRule","dataValue","program","dataElement","organisationUnitGroup","reportTable","indicatorType","dataSet","userGroup","user","map","indicatorGroup","chart","dataElementGroup","dashboard","lockException","batchDeletionHeader","batchDeletionSubHeader","addLockExceptionFormTitle","cancelButton","addButton","addingMessage","removedMessage","addedMessage","confirmDeleteMessage","confirmButton","selectADataSet","updatingTree","organisationUnitsWithin","organisationUnitLevel","select","deselect","selectAll","deselectAll","name","show","remove","actions","ofPage","week","month","year","biMonth","day","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","janFeb","marApr","mayJun","julAug","sepOct","novDec","quarter","Q1","Q2","Q3","Q4","sixMonth","janJun","julDec","aprSep","octMar","selectOrganisationUnits","minMaxValueGeneration","notPossibleToLoadMessage","warningMessage","performingMessage","removingMessage","minMaxGenerationDone","minMaxRemovalDone","loadingDataSetsMessage","organisationUnitSelect","removeButton","analytics","skipAggregate","skipResourceTables","skipEvents","skipEnrollment","analyticsTablesUpdateHeader","lastYearsLabel","allLastYears","messages","d2UiComponents","settings","app_search_placeholder","profile","account","help","log_out","about_dhis2","manage_my_apps","no_results_found","interpretations","configI18n","userSettings","lang","keyUiLocale","code","langs","prefixed","c","concat","includes","filter","startsWith","length","isLangRTL","document","body","setAttribute","injectTranslationsToD2","d2","translations","translationKeys","Object","keys","i","key","t","assign","GridSection","react_default","a","createElement","Link","to","this","props","section","path","GridList","className","classNames","styles","gridElement","gridTitleBar","gridTitleDescription","info","FontIcon_default","gridIcon","icon","gridDescription","gridActionText","PureComponent","PAGE_TITLE","dataIntegrityControls","text","Page","pageMounted","context","currentSection","sectionKey","updateAppState","Component","contextTypes","PropTypes","object","loading","bool","string","func","jsStyles","errorColor","noErrorColor","titleStyle","fontSize","fontWeight","iconStyle","color","cursor","noPaddingTop","paddingTop","DataIntegrityCard","_this","expandable","titleColor","closeIcon","openIcon","cardText","Array","isArray","content","Card","style","id","element","join","closeFontIcon","index_es","openFontIcon","cardId","card","actAsExpander","showExpandableButton","defaultProps","getDocsVersion","_ref","major","minor","snapshot","PageHelper","_this$props","lng","sectionDocsKey","href","system","version","target","rel","tooltip","tooltipPosition","iconClassName","DataIntegrity","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","cards","intervalId","loaded","initDataIntegrityCheck","bind","assertThisInitialized","nextProps","nextState","forEach","property","hasOwnProperty","STATE_PROPERTIES","setState","get","prototype","cancelPullingRequests","clearInterval","showSnackbar","snackbarConf","type","LOADING","message","pageState","error","messageError","ERROR","_this2","api","Api","getApi","setLoadingPageState","post","then","response","isPageMounted","jobId","setInterval","requestTaskSummary","catch","e","setLoadedPageWithErrorState","_this3","url","_this4","runButton","onClick","primary","disabled","cardsToShow","errorElementskeys","data_integrity_data_integrity_card_DataIntegrityCard","conf","find","control","noErrors","indexOf","resultNoErrorElement","push","header","page_helper_PageHelper","getDocsKeyForSection","maintenanceCheckboxes","Maintenance","checkboxes","checked","performMaintenance","selectedCheckboxes","checkboxKeys","formData","FormData","append","buildFormData","SUCCESS","gridElements","checkbox","checkboxState","formControl","Checkbox_default","onCheck","labelStyle","fill","areActionsDisabled","gridContainer","RaisedButton_default","selectedCheckboxesCount","notificationsTableStyles","rowStyle","height","evenRowStyle","backgroundColor","timeColumnStyle","width","messageColumnStyle","successStyle","iconColor","errorStyle","infoStyle","notificationStyles","row","notificationStylesInfo","NotificationsTable","notifications","selectable","displayRowCheckbox","notification","index","displayBorder","level","dateFromServer","time","slice","notificationIconInfo","completed","renderNotificationIcon","PULL_INTERVAL","ResourceTable","isAnalyzingTables","startsPooling","isJobInProgress","jobNotifications","every","updateStateForInProgressJobAccordingTaskSummaryResponse","taskSummaryResponse","cancelPoollingRequests","verifyInProgressJobsForTaskSummaryResponseAndUpdateState","jobIds","initResourceTablesGeneration","lastId","uid","pageStyles","cardContainer","tableName","notifications_table_NotificationsTable","FormattedNumber","Intl","NumberFormat","sessionStorage","getItem","format","value","DataStatisticsTable","rows","elements","Table","formatters_FormattedNumber","count","statisticsTable","displaySelectAll","adjustForCheckbox","enableSelectAll","stripedRows","TableCard","data_statistics_DataStatisticsTable","DataStatistics","hasTables","tables","constructor","objectCountsTableObjectToShowFromServerResponse","activeUsersTableObjectToShowFromServerResponse","userInvitationsTableObjectToShowFromServerResponse","dataValueCountsTableObjectToShowFromServerResponse","eventCountsTableObjectToShowFromServerResponse","noContent","display","DataStatistics_TableCard","objectCountsResponse","objectCountsKeys","objectCountsTable","translatedTimeLabelFromIntProperty","intProperty","lastLabel","daysLabel","activeUsersResponse","activeUsersKeys","activeUsersTable","parseInt","userInvitationsResponse","userInvitationsTable","dataValueCountsResponse","dataValueCountsKeys","dataValueCountsTable","eventCountsResponse","eventCountsKeys","eventCountsTable","d2UiSelectStyleOverride","minWidth","marginRight","AddLockExceptionForm","selected","orgUnitPaths","onDataSetChange","onPeriodChange","handleSelectionUpdate","handleOrgUnitClick","changeRoot","dataSetId","updateSeletedDataSetId","rootWithMembers","Promise","all","models","organisationUnits","list","paging","fields","memberCollection","memberObject","dataSets","_ref2","slicedToArray","rootWithDataSetMembers","dataSetMembers","toArray","ou","objectSpread","periodId","updateSelectedPeriodId","newSelection","updateSelectedOrgUnits","event","orgUnit","splice","currentRoot","dataSetItems","displayName","periodType","dataSetSelectLabel","dataSetSelectValue","selectsContainer","SelectField","items","onChange","PeriodPicker_component","onPickPeriod","Card_Card_default","organisationUnitTreeCard","CardText_default","organisationUnitTreeContainer","left","OrgUnitTree_component","root","initiallyExpanded","onSelectClick","onChangeCurrentRoot","orgUnitsPathsToInclude","right","ouLabel","OrgUnitSelectByLevel_component","levels","onUpdateSelection","OrgUnitSelectByGroup_component","groups","OrgUnitSelectAll_component","calculatePageValue","pager","pageSize","total","pageCount","pageCalculationValue","page","endItem","dialog","maxWidth","position","bottom","LockException","lockExceptions","showAddDialogOpen","selectedLockException","selectedOrgUnits","selectedDataSetId","selectedPeriodId","initialPager","atBatchDeletionPage","removeLockException","showLockExceptionFormDialog","closeLockExceptionFormDialog","addLockException","backToLockExceptions","goToBatchDeletionPage","onNextPageClick","onPreviousPageClick","data_set","organisation_unit","organisation_unit_group","organisation_unit_level","select_all","deselect_all","of_page","jan-feb","mar-apr","may-jun","jul-aug","sep-oct","nov-dec","jan-jun","jul-dec","apr-sep","oct-mar","lockExceptionResponse","le","organisationUnitId","headerContainer","IconButton_default","backArrowIcon","headerDivider","subHeader","loadLockExceptionsForPager","userAction","deleteInProgress","addInProgress","loadedState","prepareLockExceptionsResponseToDataTable","loadLockExceptionCombinations","_this5","ACTION_MESSAGE","action","onActionClick","deleteUrl","delete","newPageState","existingLockException","_this6","order","_this7","addLockExceptionEnabled","orgUnitIds","orgUnitPath","orgUnitPathSplitted","split","_this8","currentlyShown","paginationProps","hasNextPage","hasPreviousPage","FlatButton_default","Boolean","lockExceptionsTable","pagination","Pagination_component","DataTable_component","columns","dataTableColumns","contextMenuActions","contextMenuIcons","marginForAddButton","Dialog_default","modal","open","contentStyle","onRequestClose","pages_lock_exception_AddLockExceptionForm","FloatingActionButton_default","add_default","MinMaxValueGeneration","rootWithMember","dataSetsSelectedCount","dataSetsSelectRef","dataSetsSelectClick","generateMinMaxValueClick","removeMinMaxValueClick","loadData","organisationUnitsResponse","dataSetsResponse","ref","dataSetsSelect","selectedOptions","selectedOrganisationUnitSplitted","selectedOrganisationUnit","dataSetIds","WARNING","selectedOrgnisationUnit","container","multiple","isUserInteractionDisabled","item","options","tree","hideMemberCount","isDataSetSelected","secondary","DEFAULT_LAST_YEARS","lastYearValues","lastYearElements","analyticsCheckboxes","Analytics","toggleCheckbox","initialCheckboxes","renderCheckbox","lastYears","initAnalyticsTablesGeneration","onChangeLastYears","uppercase","floatingLabelText","fullWidth","primaryText","sections","component","docs","ResourceTables","Home","home_grid_section_GridSection","NoMatch","location","pathname","AppRouter","routes","Route","exact","render","pages_home_Home","Switch","App","appState","undefined","translatedSections","containerElement","feedbackElement","showLoadingProgress","centered","CircularProgress","FeedbackSnackbar_component","build_es","Sidebar_component","onChangeSection","contentWrapper","contentArea","app_router_AppRouter","childContextTypes","shape","duration","number","theme","spacing","Spacing","fontFamily","palette","primary1Color","primary2Color","blue700","primary3Color","blue100","accent1Color","orange500","accent2Color","grey100","accent3Color","orangeA200","textColor","darkBlack","alternateTextColor","white","canvasColor","borderColor","grey400","disabledColor","fade","muiTheme","getMuiTheme","isLocalhost","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","AppComponent","withRouter","setLevel","INFO","getManifest","manifest","process","REACT_APP_DHIS2_API_VERSION","baseUrl","getBaseUrl","dhis2","apiVersion","ReactDOM","D2UIApp","appTheme","initConfig","schemas","HashRouter","getElementById","getUserSettings","uiLocale","setItem","URL","origin","addEventListener","fetch","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cffc5aa4.chunk.js","sourcesContent":["//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/vi';\n\nimport arTranslations from './ar/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport viTranslations from './vi/translations.json';\n\nconst namespace = 'data-admin-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('vi', namespace, viTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","export const i18nKeys = {\n    dataIntegrity: {\n        title: 'Data Integrity',\n        label: 'Data Integrity',\n        description: 'Run data integrity checks and unveil anomalies and problems in the meta data setup.',\n        actionText: 'Check Data Integrity',\n        performing: 'Performing data integrity checks...',\n        unexpectedError: 'An unexpected error happened during data integrity checks',\n        actionButton: 'RUN INTEGRITY CHECKS',\n        dataElementsWithoutDataSet: {\n            label: 'Data elements without data set',\n        },\n        dataElementsWithoutGroups: {\n            label: 'Data elements without groups',\n        },\n        dataElementsViolatingExclusiveGroupSets: {\n            label: 'Data elements violating exclusive group sets',\n        },\n        dataElementsAssignedToDataSetsWithDifferentPeriodTypes: {\n            label: 'Data elements assigned to data sets with different period types',\n        },\n        dataSetsNotAssignedToOrganisationUnits: {\n            label: 'Data sets not assigned to organisation units',\n        },\n        indicatorsWithIdenticalFormulas: {\n            label: 'Indicators with identical formulas',\n        },\n        indicatorsWithoutGroups: {\n            label: 'Indicators without groups',\n        },\n        invalidIndicatorNumerators: {\n            label: 'Invalid indicator numerators',\n        },\n        invalidIndicatorDenominators: {\n            label: 'Invalid indicator denominators',\n        },\n        indicatorsViolatingExclusiveGroupSets: {\n            label: 'Indicators violating exclusive group sets',\n        },\n        organisationUnitsWithCyclicReferences: {\n            label: 'Organisation units with cyclic references',\n        },\n        orphanedOrganisationUnits: {\n            label: 'Orphaned organisation units',\n        },\n        organisationUnitsWithoutGroups: {\n            label: 'Organisation units without groups',\n        },\n        organisationUnitsViolatingExclusiveGroupSets: {\n            label: 'Organisation units violating exclusive group sets',\n        },\n        organisationUnitGroupsWithoutGroupSets: {\n            label: 'Organisation unit groups without group sets',\n        },\n        validationRulesWithoutGroups: {\n            label: 'Validation rules without groups',\n        },\n        invalidValidationRuleLeftSideExpressions: {\n            label: 'Invalid validation rule left side expressions',\n        },\n        invalidValidationRuleRightSideExpressions: {\n            label: 'Invalid validation rule right side expressions',\n        },\n        invalidProgramIndicatorExpressions: {\n            label: 'Invalid program indicator expressions',\n        },\n        invalidProgramIndicatorFilters: {\n            label: 'Invalid program indicator filters',\n        },\n        dataElementsInDataSetNotInForm: {\n            label: 'There are data elements in the form, but not in the form or sections',\n        },\n        invalidCategoryCombos: {\n            label: 'Invalid category combinations',\n        },\n        duplicatePeriods: {\n            label: 'Duplicate periods',\n        },\n        programRulesWithNoCondition: {\n            label: 'Program rules with no condition',\n        },\n        programRulesWithNoAction: {\n            label: 'Program rules with no action',\n        },\n        programRulesWithNoPriority: {\n            label: 'Program rules with no priority',\n        },\n        programRuleVariablesWithNoDataElement: {\n            label: 'Program rule variables with no data element',\n        },\n        programRuleVariablesWithNoAttribute: {\n            label: 'Program rule variables with no attribute',\n        },\n        programRuleActionsWithNoDataObject: {\n            label: 'Program rule actions with no data object',\n        },\n        programRuleActionsWithNoNotification: {\n            label: 'Program rule actions with no notification',\n        },\n        programRuleActionsWithNoSectionId: {\n            label: 'Program rule actions with no section id',\n        },\n        programRuleActionsWithNoStageId: {\n            label: 'Program rule actions with no stage id',\n        },\n    },\n    maintenance: {\n        title: 'Maintenance',\n        label: 'Maintenance',\n        description: 'Perform maintenance tasks and generate resource database tables for the organisation unit' +\n        ' hierarchy and group set structure.',\n        actionText: 'Perform Maintenance',\n        actionButton: 'PERFORM MAINTENANCE',\n        performing: 'Performing Maintenance...',\n        actionPerformed: 'Maintenance done',\n        unexpectedError: 'An unexpected error happened during maintenance',\n        analyticsTableClear: 'Clear analytics tables',\n        analyticsTableAnalyze: 'Analyze analytics tables',\n        zeroDataValueRemoval: 'Remove zero data values',\n        softDeletedDataValueRemoval: 'Permanently remove soft deleted data values',\n        softDeletedEventRemoval: 'Permanently remove soft deleted events',\n        softDeletedEnrollmentRemoval: 'Permanently remove soft deleted enrollments',\n        softDeletedTrackedEntityInstanceRemoval: 'Permanently remove soft deleted tracked entity instances',\n        periodPruning: 'Prune periods',\n        expiredInvitationsClear: 'Remove expired invitations',\n        sqlViewsDrop: 'Drop SQL views',\n        sqlViewsCreate: 'Create SQL views',\n        categoryOptionComboUpdate: 'Update category option combinations',\n        ouPathsUpdate: 'Update organisation unit paths',\n        cacheClear: 'Clear application cache',\n        appReload: 'Reload apps',\n    },\n    resourceTables: {\n        title: 'Resource Tables',\n        label: 'Resource Tables',\n        description: 'Generate resource database tables for the organisation unit hierarchy and group ' +\n        'set structure among others.',\n        actionText: 'Generate Resource Tables',\n        actionButton: 'GENERATE TABLES',\n        actionPerformed: 'Resource Tables generated',\n        unexpectedError: 'An unexpected error happened during operation',\n        organisationUnitStructure: 'Organisation unit structure',\n        organistionUnitCategoryOptionCombo: 'Organisation unit category option combo',\n        categoryOptionGroupSetStructure: 'Category option group set structure',\n        dataElementGroupSetStructure: 'Data element group set structure',\n        indicatorGroupSetStructure: 'Indicator group set structure',\n        organisationUnitGroupSetStructure: 'Organisation unit group set structure',\n        categoryStructure: 'Category structure',\n        dataElementCategoryOptionComboName: 'Data element category option combo name',\n        dataElementStructure: 'Data element structure',\n        periodStructure: 'Period structure',\n        dataPeriodStructure: 'Date period structure',\n        dataElementCategoryOptionCombinations: 'Data element category option combinations',\n    },\n    dataStatistics: {\n        title: 'Data Statistics',\n        label: 'Data Statistics',\n        description: 'Browse the number of objects in the database, like data elements, indicators,' +\n        ' data sets and data values.',\n        actionText: 'Overview Data Statistics',\n        loadingMessage: 'Loading Data Statistics...',\n        errorMessage: 'It was not possible to load Data Statistics',\n        noDataMessage: 'No data to show.',\n        objectType: 'Object type',\n        lastHour: 'Last hour',\n        today: 'Today',\n        last: 'Last',\n        days: 'days',\n        usersLoggedIn: 'Users logged in',\n        userAccountInvitations: 'User account invitations',\n        pedingInvitations: 'Pending invitations',\n        expiredInvitations: 'Expired invitations',\n        dataValues: 'Data values',\n        events: 'Events',\n        objects: {\n            indicator: 'Indicators',\n            period: 'Periods',\n            programStageInstance: 'Events',\n            organisationUnit: 'Organisation units',\n            validationRule: 'Validation rules',\n            dataValue: 'Data values',\n            program: 'Programs',\n            dataElement: 'Data elements',\n            organisationUnitGroup: 'Organisation unit groups',\n            reportTable: 'Pivot tables',\n            indicatorType: 'Indicator types',\n            dataSet: 'Data sets',\n            userGroup: 'User groups',\n            user: 'Users',\n            map: 'Maps',\n            indicatorGroup: 'Indicator groups',\n            chart: 'Charts',\n            dataElementGroup: 'Data element groups',\n            dashboard: 'Dashboards',\n        },\n    },\n    lockException: {\n        title: 'Lock Exception Management',\n        batchDeletionHeader: 'Lock Exception',\n        batchDeletionSubHeader: 'Batch Deletion',\n        addLockExceptionFormTitle: 'Add new lock exception',\n        label: 'Lock Exception',\n        description: 'Add or remove exceptions to the the standard rules for locking of data entry forms.',\n        actionText: 'Lock Exception Management',\n        actionButton: 'BATCH DELETION',\n        cancelButton: 'CANCEL',\n        addButton: 'ADD',\n        noDataMessage: 'No data to show.',\n        loadingMessage: 'Loading Lock Exceptions...',\n        addingMessage: 'Adding Lock Exception...',\n        removedMessage: 'Lock Exception removed',\n        addedMessage: 'Lock Exception Added',\n        confirmDeleteMessage: 'Are you sure?',\n        confirmButton: 'CONFIRM',\n        selectADataSet: 'Select a Data Set',\n        updatingTree: 'Updating Organisation Units Tree...',\n        organisationUnitsWithin: 'For organisation units within',\n        period: 'Period',\n        dataSet: 'Data Set',\n        organisationUnit: 'Organisation Unit',\n        organisationUnitGroup: 'Organisation Unit Group',\n        organisationUnitLevel: 'Organisation Unit Level',\n        select: 'Select',\n        deselect: 'Deselect',\n        selectAll: 'Select All Org Units',\n        deselectAll: 'Deselect All Org Units',\n        name: 'Name',\n        show: 'Show Details',\n        remove: 'Remove',\n        actions: 'Actions',\n        ofPage: 'of',\n        week: 'week',\n        month: 'month',\n        year: 'year',\n        biMonth: 'bi monthly',\n        day: 'day',\n        jan: 'jan',\n        feb: 'feb',\n        mar: 'mar',\n        apr: 'apr',\n        may: 'may',\n        jun: 'jun',\n        jul: 'jul',\n        aug: 'aug',\n        sep: 'sep',\n        oct: 'oct',\n        nov: 'nov',\n        dec: 'dec',\n        janFeb: 'jan-feb',\n        marApr: 'mar-apr',\n        mayJun: 'may-jun',\n        julAug: 'jul-aug',\n        sepOct: 'sep-oct',\n        novDec: 'nov-dec',\n        quarter: 'quarter',\n        Q1: 'Q1',\n        Q2: 'Q2',\n        Q3: 'Q3',\n        Q4: 'Q4',\n        sixMonth: 'six monthly',\n        janJun: 'jan-jun',\n        julDec: 'jul-dec',\n        aprSep: 'apr-sep',\n        octMar: 'oct-mar',\n        selectOrganisationUnits: 'For all organisation units:',\n    },\n    minMaxValueGeneration: {\n        title: 'Min-Max Value Generation',\n        label: 'Min-Max Value Generation',\n        description: 'Generate min-max values which can be used for data validation during data entry and ' +\n        'validation processes.',\n        actionText: 'Generate Min-Max Value',\n        notPossibleToLoadMessage: 'It was not possible to load data',\n        warningMessage: 'Select Data set and Organisation Unit',\n        performingMessage: 'Doing Min Max generation...',\n        removingMessage: 'Removing Min Max generation...',\n        minMaxGenerationDone: 'Min Max generation done',\n        minMaxRemovalDone: 'Min Max removal done',\n        dataSet: 'Data Set',\n        loadingDataSetsMessage: 'Loading data sets',\n        organisationUnitSelect: 'Organisation Unit Selection',\n        updatingTree: 'Updating Organisation Units Tree...',\n        actionButton: 'GENERATE',\n        removeButton: 'REMOVE',\n    },\n    analytics: {\n        title: 'Analytics tables management',\n        label: 'Analytics Tables',\n        description: 'The data mart is a set of tables in the DHIS database which is used by all reporting and ' +\n        'analysis tools to retrieve data from. ',\n        actionText: 'Analytics tables update',\n        actionButton: 'START EXPORT',\n        skipAggregate: 'Skip generation of aggregate data and completeness data',\n        skipResourceTables: 'Skip generation of resource tables',\n        skipEvents: 'Skip generation of event data',\n        skipEnrollment: 'Skip generation of enrollment data',\n        analyticsTablesUpdateHeader: 'Analytics Tables Update',\n        lastYearsLabel: 'Number of last years of data to include',\n        allLastYears: '[ All ]',\n        unexpectedError: 'An unexpected error happened during maintenance',\n    },\n    messages: {\n        unexpectedError: 'An unexpected error happened during operation',\n    },\n    d2UiComponents: {\n        settings: 'Settings',\n        app_search_placeholder: 'Search apps',\n        profile: 'Profile',\n        account: 'Account',\n        help: 'Help',\n        log_out: 'Log out',\n        about_dhis2: 'About DHIS 2',\n        manage_my_apps: 'Manage my apps',\n        no_results_found: 'No results found',\n        interpretations: 'Interpretations',\n        messages: 'Messages',\n    },\n};\n\nexport default i18nKeys;\n","import i18n from './locales';\nimport { i18nKeys } from './i18n';\n\nconst isLangRTL = (code) => {\n    const langs = ['ar', 'fa', 'ur'];\n    const prefixed = langs.map(c => `${c}-`);\n    return langs.includes(code) || prefixed.filter(c => code.startsWith(c)).length > 0;\n};\n\nexport const configI18n = (userSettings) => {\n    const lang = userSettings.keyUiLocale;\n    if (isLangRTL(lang)) {\n        document.body.setAttribute('dir', 'rtl');\n    }\n\n    i18n.changeLanguage(lang);\n};\n\nexport const injectTranslationsToD2 = (d2) => {\n    if (d2) {\n        const translations = {};\n        const translationKeys = Object.keys(i18nKeys.d2UiComponents);\n        for (let i = 0; i < translationKeys.length; i++) {\n            const key = translationKeys[i];\n            translations[key] = i18n.t(i18nKeys.d2UiComponents[key]);\n        }\n        Object.assign(d2.i18n.translations, translations);\n    }\n};\n\nexport default configI18n;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n// Material UI\nimport { GridTile } from 'material-ui/GridList';\nimport FontIcon from 'material-ui/FontIcon';\n\nimport classNames from 'classnames';\n\n/* i18n */\nimport i18n from '../../../locales';\n\nimport styles from './GridSection.css';\n\nclass GridSection extends PureComponent {\n    static propTypes = {\n        section: PropTypes.shape({\n            key: PropTypes.string,\n            path: PropTypes.string,\n            info: PropTypes.shape({\n                label: PropTypes.string,\n                description: PropTypes.string,\n                icon: PropTypes.string,\n                actionText: PropTypes.string,\n            }),\n        }).isRequired,\n    }\n\n    render() {\n        return (\n            <Link to={this.props.section.path}>\n                <GridTile key={this.props.section.key} className={classNames('section', styles.gridElement)}>\n                    <div className={classNames('row', styles.gridTitleBar)}>\n                        <span className={classNames('section-title', styles.gridTitleDescription)}>\n                            {this.props.section.info.label}\n                        </span>\n                        <FontIcon\n                            className={classNames('material-icons', 'icon', styles.gridIcon)}\n                        >\n                            {this.props.section.info.icon}\n                        </FontIcon>\n                    </div>\n                    <span className={classNames('section-description', 'row', styles.gridDescription)}>\n                        {i18n.t(this.props.section.info.description)}\n                    </span>\n                    <span className={classNames('section-action-text', 'row', styles.gridActionText)}>\n                        {i18n.t(this.props.section.info.actionText)}\n                    </span>\n                </GridTile>\n            </Link>\n        );\n    }\n}\n\nexport default GridSection;\n","// i18n\nimport { i18nKeys } from '../../i18n';\n\nexport const INIT_ENDPOINT = 'dataIntegrity';\nexport const PULL_INTERVAL = 5000;\nexport const DATA_ENDPOINT = 'system/taskSummaries/DATA_INTEGRITY';\n\nexport const PAGE_TITLE = i18nKeys.dataIntegrity.title;\n\nexport const dataIntegrityControls = [\n    {\n        key: 'dataElementsWithoutDataSet',\n        label: i18nKeys.dataIntegrity.dataElementsWithoutDataSet.label,\n        text: i18nKeys.dataIntegrity.dataElementsWithoutDataSet.text,\n    },\n    {\n        key: 'dataElementsWithoutGroups',\n        label: i18nKeys.dataIntegrity.dataElementsWithoutGroups.label,\n        text: i18nKeys.dataIntegrity.dataElementsWithoutGroups.text,\n    },\n    {\n        key: 'dataElementsViolatingExclusiveGroupSets',\n        label: i18nKeys.dataIntegrity.dataElementsViolatingExclusiveGroupSets.label,\n        text: i18nKeys.dataIntegrity.dataElementsViolatingExclusiveGroupSets.label,\n    },\n    {\n        key: 'dataElementsAssignedToDataSetsWithDifferentPeriodTypes',\n        label: i18nKeys.dataIntegrity.dataElementsAssignedToDataSetsWithDifferentPeriodTypes.label,\n        text: i18nKeys.dataIntegrity.dataElementsAssignedToDataSetsWithDifferentPeriodTypes.text,\n    },\n    {\n        key: 'dataSetsNotAssignedToOrganisationUnits',\n        label: i18nKeys.dataIntegrity.dataSetsNotAssignedToOrganisationUnits.label,\n        text: i18nKeys.dataIntegrity.dataSetsNotAssignedToOrganisationUnits.text,\n    },\n    {\n        key: 'indicatorsWithIdenticalFormulas',\n        label: i18nKeys.dataIntegrity.indicatorsWithIdenticalFormulas.label,\n        text: i18nKeys.dataIntegrity.indicatorsWithIdenticalFormulas.text,\n    },\n    {\n        key: 'indicatorsWithoutGroups',\n        label: i18nKeys.dataIntegrity.indicatorsWithoutGroups.label,\n        text: i18nKeys.dataIntegrity.indicatorsWithoutGroups.text,\n    },\n    {\n        key: 'invalidIndicatorNumerators',\n        label: i18nKeys.dataIntegrity.invalidIndicatorNumerators.label,\n        text: i18nKeys.dataIntegrity.invalidIndicatorNumerators.text,\n    },\n    {\n        key: 'invalidIndicatorDenominators',\n        label: i18nKeys.dataIntegrity.invalidIndicatorDenominators.label,\n        text: i18nKeys.dataIntegrity.invalidIndicatorDenominators.text,\n    },\n    {\n        key: 'indicatorsViolatingExclusiveGroupSets',\n        label: i18nKeys.dataIntegrity.indicatorsViolatingExclusiveGroupSets.label,\n        text: i18nKeys.dataIntegrity.indicatorsViolatingExclusiveGroupSets.text,\n    },\n    {\n        key: 'organisationUnitsWithCyclicReferences',\n        label: i18nKeys.dataIntegrity.organisationUnitsWithCyclicReferences.label,\n        text: i18nKeys.dataIntegrity.organisationUnitsWithCyclicReferences.text,\n    },\n    {\n        key: 'orphanedOrganisationUnits',\n        label: i18nKeys.dataIntegrity.orphanedOrganisationUnits.label,\n        text: i18nKeys.dataIntegrity.orphanedOrganisationUnits.text,\n    },\n    {\n        key: 'organisationUnitsWithoutGroups',\n        label: i18nKeys.dataIntegrity.organisationUnitsWithoutGroups.label,\n        text: i18nKeys.dataIntegrity.organisationUnitsWithoutGroups.text,\n    },\n    {\n        key: 'organisationUnitsViolatingExclusiveGroupSets',\n        label: i18nKeys.dataIntegrity.organisationUnitsViolatingExclusiveGroupSets.label,\n        text: i18nKeys.dataIntegrity.organisationUnitsViolatingExclusiveGroupSets.text,\n    },\n    {\n        key: 'organisationUnitGroupsWithoutGroupSets',\n        label: i18nKeys.dataIntegrity.organisationUnitGroupsWithoutGroupSets.label,\n        text: i18nKeys.dataIntegrity.organisationUnitGroupsWithoutGroupSets.text,\n    },\n    {\n        key: 'validationRulesWithoutGroups',\n        label: i18nKeys.dataIntegrity.validationRulesWithoutGroups.label,\n        text: i18nKeys.dataIntegrity.validationRulesWithoutGroups.text,\n    },\n    {\n        key: 'invalidValidationRuleLeftSideExpressions',\n        label: i18nKeys.dataIntegrity.invalidValidationRuleLeftSideExpressions.label,\n        text: i18nKeys.dataIntegrity.invalidValidationRuleLeftSideExpressions.text,\n    },\n    {\n        key: 'invalidValidationRuleRightSideExpressions',\n        label: i18nKeys.dataIntegrity.invalidValidationRuleRightSideExpressions.label,\n        text: i18nKeys.dataIntegrity.invalidValidationRuleRightSideExpressions.text,\n    },\n    {\n        key: 'invalidProgramIndicatorExpressions',\n        label: i18nKeys.dataIntegrity.invalidProgramIndicatorExpressions.label,\n    },\n    {\n        key: 'invalidProgramIndicatorFilters',\n        label: i18nKeys.dataIntegrity.invalidProgramIndicatorFilters.label,\n    },\n    {\n        key: 'dataElementsInDataSetNotInForm',\n        label: i18nKeys.dataIntegrity.dataElementsInDataSetNotInForm.label,\n    },\n    {\n        key: 'invalidCategoryCombos',\n        label: i18nKeys.dataIntegrity.invalidCategoryCombos.label,\n    },\n    {\n        key: 'duplicatePeriods',\n        label: i18nKeys.dataIntegrity.duplicatePeriods.label,\n    },\n    {\n        key: 'programRulesWithNoCondition',\n        label: i18nKeys.dataIntegrity.programRulesWithNoCondition.label,\n    },\n    {\n        key: 'programRulesWithNoAction',\n        label: i18nKeys.dataIntegrity.programRulesWithNoAction.label,\n    },\n    {\n        key: 'programRulesWithNoPriority',\n        label: i18nKeys.dataIntegrity.programRulesWithNoPriority.label,\n    },\n    {\n        key: 'programRuleVariablesWithNoDataElement',\n        label: i18nKeys.dataIntegrity.programRuleVariablesWithNoDataElement.label,\n    },\n    {\n        key: 'programRuleVariablesWithNoAttribute',\n        label: i18nKeys.dataIntegrity.programRuleVariablesWithNoAttribute.label,\n    },\n    {\n        key: 'programRuleActionsWithNoDataObject',\n        label: i18nKeys.dataIntegrity.programRuleActionsWithNoDataObject.label,\n    },\n    {\n        key: 'programRuleActionsWithNoNotification',\n        label: i18nKeys.dataIntegrity.programRuleActionsWithNoNotification.label,\n    },\n    {\n        key: 'programRuleActionsWithNoSectionId',\n        label: i18nKeys.dataIntegrity.programRuleActionsWithNoSectionId.label,\n    },\n    {\n        key: 'programRuleActionsWithNoStageId',\n        label: i18nKeys.dataIntegrity.programRuleActionsWithNoStageId.label,\n    },\n];\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Page extends Component {\n    static propTypes = {\n        sectionKey: PropTypes.string.isRequired,\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n        loading: PropTypes.bool,\n        currentSection: PropTypes.string,\n        updateAppState: PropTypes.func,\n    }\n\n    componentWillMount() {\n        this.pageMounted = true;\n\n        // update section on side bar\n        if (this.context.currentSection !== this.props.sectionKey) {\n            this.context.updateAppState({\n                currentSection: this.props.sectionKey,\n            });\n        }\n    }\n\n    componentWillUnmount() {\n        this.pageMounted = false;\n    }\n\n    isPageMounted() {\n        return this.pageMounted;\n    }\n}\n\nexport default Page;\n\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Card, CardText, CardHeader } from 'material-ui/Card';\nimport { FontIcon } from 'material-ui';\n\n// i18n\nimport i18n from '../../../locales';\n\nimport styles from './DataIntegrityCard.css';\n\nconst jsStyles = {\n    errorColor: '#ff5722',\n    noErrorColor: '#1c9d17',\n    titleStyle: {\n        fontSize: 14,\n        fontWeight: 'normal',\n    },\n    iconStyle: {\n        color: '#1c9d17',\n        cursor: 'auto',\n    },\n    noPaddingTop: {\n        paddingTop: 0,\n    },\n};\n\nclass DataIntegrityCard extends PureComponent {\n    static propTypes = {\n        cardId: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        content: PropTypes.oneOfType([\n            PropTypes.array,\n            PropTypes.object,\n        ]),\n    }\n\n    static defaultProps = {\n        content: [],\n    }\n\n    render() {\n        const showIcon = true;\n        let expandable = true;\n        let titleColor = jsStyles.errorColor;\n        let closeIcon = 'keyboard_arrow_down';\n        let openIcon = 'keyboard_arrow_up';\n        let cardText = null;\n\n        if (!Array.isArray(this.props.content)) {\n            cardText = (\n                <CardText style={jsStyles.noPaddingTop} expandable={expandable}>\n                    <div id={'elementDescription'}>\n                        {\n                            Object.keys(this.props.content).map(element => (\n                                <span key={element}>\n                                    <h4>{element}</h4>\n                                    <p>\n                                        {\n                                            Array.isArray(this.props.content[element]) ?\n                                                this.props.content[element].join(', ') :\n                                                this.props.content[element]\n                                        }\n                                    </p>\n                                </span>\n                            ))\n                        }\n                    </div>\n                </CardText>\n            );\n        } else if (this.props.content.length) {\n            cardText = (\n                <CardText style={jsStyles.noPaddingTop} expandable={expandable}>\n                    <div id={'elementDescription'}>\n                        {\n                            this.props.content.map(element => (\n                                <p key={element}>\n                                    {\n                                        Array.isArray(element) ?\n                                            element.join(', ') :\n                                            element\n                                    }\n                                </p>\n                            ))\n                        }\n                    </div>\n                </CardText>\n            );\n        } else {\n            expandable = false;\n            titleColor = jsStyles.noErrorColor;\n            closeIcon = 'done';\n            openIcon = 'done';\n        }\n\n        const closeFontIcon = (\n            <FontIcon className={'material-icons'}>\n                {closeIcon}\n            </FontIcon>\n        );\n        const openFontIcon = (\n            <FontIcon className={'material-icons'}>\n                {openIcon}\n            </FontIcon>\n        );\n\n        return (\n            <Card id={this.props.cardId} className={styles.card}>\n                <CardHeader\n                    title={i18n.t(this.props.title)}\n                    titleColor={titleColor}\n                    titleStyle={jsStyles.titleStyle}\n                    actAsExpander={expandable}\n                    showExpandableButton={showIcon}\n                    closeIcon={closeFontIcon}\n                    openIcon={openFontIcon}\n                    iconStyle={!expandable ? jsStyles.iconStyle : {}}\n                />\n                {cardText}\n            </Card>\n        );\n    }\n}\n\nexport default DataIntegrityCard;\n","export const DOCS_LINK = 'https://ci.dhis2.org/docs';\nexport const DOCS_TOOLTIP_LABEL = 'Open user guide';\n\n/**\n * Returns the \"version\" of the documentation that corresponds with the current dhis2 version.\n *\n * @param {Object} version - The version definition as provided by d2.system.version.\n * @param {number} version.minor - The minor dhis2 version. e.g. The 25 in 2.25.\n * @param {boolean} version.snapshot - True when the current version is the snapshot(master/development) branch.\n *\n * @returns {string} `master` for a snapshot branch. `25` for 2.25 etc.\n */\nexport const getDocsVersion = ({ major, minor, snapshot }) => {\n    if (snapshot) {\n        return 'master';\n    }\n    return `${major}.${minor}`;\n};\n\nexport default getDocsVersion;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { IconButton } from 'material-ui';\n\n// i18n\nimport i18n from '../../locales';\n\nimport { getDocsVersion, DOCS_LINK, DOCS_TOOLTIP_LABEL } from '../../helpers/docs';\n\nclass PageHelper extends PureComponent {\n    static propTypes = {\n        lng: PropTypes.string,\n        sectionDocsKey: PropTypes.string.isRequired,\n    };\n\n    static defaultProps = {\n        lng: 'en',\n    };\n\n    static contextTypes = {\n        d2: PropTypes.object,\n    };\n\n    render() {\n        const { d2 } = this.context;\n        const { lng, sectionDocsKey } = this.props;\n        return (\n            <IconButton\n                className=\"helper-icon\"\n                iconStyle={{ color: '#276696' }}\n                href={`${DOCS_LINK}/${getDocsVersion(d2.system.version)}/${lng}/user/html/${sectionDocsKey}.html`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                tooltip={i18n.t(DOCS_TOOLTIP_LABEL)}\n                tooltipPosition=\"bottom-center\"\n                iconClassName=\"material-icons\"\n            >\n                help\n            </IconButton>\n        );\n    }\n}\n\nexport default PageHelper;\n","import React from 'react';\n\nimport { RaisedButton } from 'material-ui';\n\nimport { ERROR, LOADING } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes';\n\nimport { getDocsKeyForSection } from '../sections.conf';\nimport * as conf from './data.integrity.conf';\n\n// i18n\nimport { i18nKeys } from '../../i18n';\nimport i18n from '../../locales';\n\nimport Page from '../Page';\nimport DataIntegrityCard from './data-integrity-card/DataIntegrityCard';\nimport PageHelper from '../../components/page-helper/PageHelper';\n\nimport styles from './DataIntegrity.css';\n\nclass DataIntegrity extends Page {\n    static STATE_PROPERTIES = [\n        'cards',\n        'loaded',\n        'loading',\n    ];\n\n    constructor() {\n        super();\n\n        this.state = {\n            cards: null,\n            intervalId: null,\n            loaded: false,\n            loading: false,\n        };\n\n        this.initDataIntegrityCheck = this.initDataIntegrityCheck.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {};\n\n        Object.keys(nextProps).forEach((property) => {\n            if (nextProps.hasOwnProperty(property) && DataIntegrity.STATE_PROPERTIES.includes(property)) {\n                nextState[property] = nextProps[property];\n            }\n        });\n\n        if (nextState !== {}) {\n            this.setState(nextState);\n        }\n    }\n\n    componentWillUnmount() {\n        super.componentWillUnmount();\n        this.cancelPullingRequests();\n    }\n\n    cancelPullingRequests() {\n        clearInterval(this.state.intervalId);\n    }\n\n    setLoadingPageState() {\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: LOADING,\n                message: i18n.t(i18nKeys.dataIntegrity.performing),\n            },\n            currentSection: this.props.sectionKey,\n            pageState: {\n                loaded: false,\n                loading: true,\n            },\n        });\n    }\n\n    setLoadedPageWithErrorState(error) {\n        const messageError = error && error.message ?\n            error.message :\n            i18n.t(i18nKeys.dataIntegrity.unexpectedError);\n        this.cancelPullingRequests();\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: ERROR,\n                message: messageError,\n            },\n            currentSection: this.props.sectionKey,\n            pageState: {\n                loaded: true,\n                loading: false,\n            },\n        });\n    }\n\n    initDataIntegrityCheck() {\n        const api = this.context.d2.Api.getApi();\n        this.setLoadingPageState();\n        api.post(conf.INIT_ENDPOINT).then((response) => {\n            if (this.isPageMounted() && response) {\n                this.state.jobId = response.response.id;\n                this.state.intervalId = setInterval(() => {\n                    this.requestTaskSummary();\n                }, conf.PULL_INTERVAL);\n            }\n        }).catch((e) => {\n            if (this.isPageMounted()) {\n                this.setLoadedPageWithErrorState(e);\n            }\n        });\n    }\n\n    requestTaskSummary() {\n        const api = this.context.d2.Api.getApi();\n        const url = `${conf.DATA_ENDPOINT}/${this.state.jobId}`;\n        api.get(url).then((response) => {\n            if (this.isPageMounted()) {\n                if (response) {\n                    this.cancelPullingRequests();\n                    this.context.updateAppState({\n                        showSnackbar: false,\n                        currentSection: this.props.sectionKey,\n                        pageState: {\n                            loaded: true,\n                            cards: response,\n                            loading: false,\n                        },\n                    });\n                }\n            }\n        }).catch((e) => {\n            if (this.isPageMounted()) {\n                this.setLoadedPageWithErrorState(e);\n            }\n        });\n    }\n\n    render() {\n        const runButton = (\n            <RaisedButton\n                id={'runDataIntegrityChecksBtnId'}\n                label={i18n.t(i18nKeys.dataIntegrity.actionButton)}\n                onClick={this.initDataIntegrityCheck}\n                primary\n                disabled={this.state.loading}\n            />\n        );\n        let cardsToShow = [];\n        if (this.state.cards) {\n            const errorElementskeys = Object.keys(this.state.cards);\n            cardsToShow = errorElementskeys.map(element => (\n                <DataIntegrityCard\n                    cardId={`errorElement-${element}`}\n                    key={element}\n                    title={\n                        conf.dataIntegrityControls.find(\n                            control => control.key === element).label\n                    }\n                    content={this.state.cards[element]}\n                />\n            ));\n            if (this.state.loaded) {\n                const noErrors = conf.dataIntegrityControls\n                    .filter(\n                        element => errorElementskeys.indexOf(element.key) < 0,\n                    ).map(\n                        resultNoErrorElement => (\n                            <DataIntegrityCard\n                                cardId={`noErrorElement-${resultNoErrorElement.key}`}\n                                key={resultNoErrorElement.key}\n                                title={resultNoErrorElement.label}\n                                content={[]}\n                            />\n                        ),\n                    );\n                cardsToShow.push(noErrors);\n            }\n        }\n        return (\n            <div>\n                <h1 className={styles.header}>\n                    { i18n.t(conf.PAGE_TITLE) }\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(this.props.sectionKey)}\n                    />\n                </h1>\n                {cardsToShow && cardsToShow.length > 0 ? cardsToShow : runButton}\n            </div>\n        );\n    }\n}\n\nexport default DataIntegrity;\n","// i18n\nimport { i18nKeys } from '../../i18n';\n\nexport const MAINTENANCE_ENDPOINT = 'maintenance';\nexport const PAGE_TITLE = i18nKeys.maintenance.title;\n\nexport const maintenanceCheckboxes = [\n    {\n        key: 'analyticsTableClear',\n        label: i18nKeys.maintenance.analyticsTableClear,\n    },\n    {\n        key: 'analyticsTableAnalyze',\n        label: i18nKeys.maintenance.analyticsTableAnalyze,\n    },\n    {\n        key: 'zeroDataValueRemoval',\n        label: i18nKeys.maintenance.zeroDataValueRemoval,\n    },\n    {\n        key: 'softDeletedDataValueRemoval',\n        label: i18nKeys.maintenance.softDeletedDataValueRemoval,\n    },\n    {\n        key: 'softDeletedEventRemoval',\n        label: i18nKeys.maintenance.softDeletedEventRemoval,\n    },\n    {\n        key: 'softDeletedEnrollmentRemoval',\n        label: i18nKeys.maintenance.softDeletedEnrollmentRemoval,\n    },\n    {\n        key: 'softDeletedTrackedEntityInstanceRemoval',\n        label: i18nKeys.maintenance.softDeletedTrackedEntityInstanceRemoval,\n    },\n    {\n        key: 'periodPruning',\n        label: i18nKeys.maintenance.periodPruning,\n    },\n    {\n        key: 'expiredInvitationsClear',\n        label: i18nKeys.maintenance.expiredInvitationsClear,\n    },\n    {\n        key: 'sqlViewsDrop',\n        label: i18nKeys.maintenance.sqlViewsDrop,\n    },\n    {\n        key: 'sqlViewsCreate',\n        label: i18nKeys.maintenance.sqlViewsCreate,\n    },\n    {\n        key: 'categoryOptionComboUpdate',\n        label: i18nKeys.maintenance.categoryOptionComboUpdate,\n    },\n    {\n        key: 'ouPathsUpdate',\n        label: i18nKeys.maintenance.ouPathsUpdate,\n    },\n    {\n        key: 'cacheClear',\n        label: i18nKeys.maintenance.cacheClear,\n    },\n    {\n        key: 'appReload',\n        label: i18nKeys.maintenance.appReload,\n    },\n];\n","import React from 'react';\n\n// Material UI\nimport { GridTile } from 'material-ui/GridList';\nimport { Card, CardText } from 'material-ui/Card';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport Checkbox from 'material-ui/Checkbox';\nimport classNames from 'classnames';\n\nimport { LOADING, SUCCESS, ERROR } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes';\n\n// i18n\nimport i18n from '../../locales';\nimport { i18nKeys } from '../../i18n';\n\nimport Page from '../Page';\n\n// App configs\nimport {\n    maintenanceCheckboxes,\n    PAGE_TITLE,\n    MAINTENANCE_ENDPOINT,\n} from './maintenance.conf';\nimport { getDocsKeyForSection } from '../sections.conf';\n\nimport styles from '../Page.css';\nimport PageHelper from '../../components/page-helper/PageHelper';\n\nclass Maintenance extends Page {\n    static STATE_PROPERTIES = [\n        'checkboxes',\n        'loading',\n    ]\n\n    constructor() {\n        super();\n\n        const checkboxes = {};\n        for (let i = 0; i < maintenanceCheckboxes.length; i++) {\n            const checkbox = maintenanceCheckboxes[i];\n            checkboxes[checkbox.key] = { checked: false };\n        }\n\n        // state defaults\n        this.state = {\n            intervalId: null,\n            checkboxes,\n            loading: false,\n        };\n\n        // actions\n        this.performMaintenance = this.performMaintenance.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {};\n\n        Object.keys(nextProps).forEach((property) => {\n            if (nextProps.hasOwnProperty(property) && Maintenance.STATE_PROPERTIES.includes(property)) {\n                nextState[property] = nextProps[property];\n            }\n        });\n\n        if (nextState !== {}) {\n            this.setState(nextState);\n        }\n    }\n\n    setLoadingPageState() {\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: LOADING,\n                message: i18n.t(i18nKeys.maintenance.performing),\n            },\n            pageState: {\n                loading: true,\n            },\n        });\n    }\n\n    setLoadedPageWithErrorState(error) {\n        const messageError = error && error.message ?\n            error.message :\n            i18n.t(i18nKeys.maintenance.unexpectedError);\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: ERROR,\n                message: messageError,\n            },\n            pageState: {\n                loading: false,\n            },\n        });\n    }\n\n    selectedCheckboxesCount() {\n        let selectedCheckboxes = 0;\n        const checkboxKeys = Object.keys(this.state.checkboxes);\n        for (let i = 0; i < checkboxKeys.length; i++) {\n            const key = checkboxKeys[i];\n            const checked = this.state.checkboxes[key].checked;\n            if (checked) {\n                selectedCheckboxes += 1;\n            }\n        }\n        return selectedCheckboxes;\n    }\n\n    areActionsDisabled() {\n        return this.state.loading;\n    }\n\n    buildFormData() {\n        let formData = null;\n        const checkboxKeys = Object.keys(this.state.checkboxes);\n        for (let i = 0; i < checkboxKeys.length; i++) {\n            const key = checkboxKeys[i];\n            const checked = this.state.checkboxes[key].checked;\n            formData = formData || new FormData();\n            formData.append(key, checked);\n        }\n\n        return formData;\n    }\n\n    performMaintenance() {\n        const api = this.context.d2.Api.getApi();\n        const formData = this.buildFormData();\n\n        if (formData) {\n            this.setLoadingPageState();\n            api.post(MAINTENANCE_ENDPOINT, formData).then(() => {\n                if (this.isPageMounted()) {\n                    this.context.updateAppState({\n                        showSnackbar: true,\n                        snackbarConf: {\n                            type: SUCCESS,\n                            message: i18n.t(i18nKeys.maintenance.actionPerformed),\n                        },\n                        pageState: {\n                            loading: false,\n                        },\n                    });\n                }\n            }).catch((error) => {\n                if (this.isPageMounted()) {\n                    this.setLoadedPageWithErrorState(error);\n                }\n            });\n        }\n    }\n\n    render() {\n        const checkboxes = Object.assign({}, this.state.checkboxes);\n        const gridElements = maintenanceCheckboxes.map((checkbox) => {\n            const checkboxState = checkboxes[checkbox.key].checked;\n            const toggleCheckbox = (() => {\n                checkboxes[checkbox.key].checked = !checkboxState;\n                this.setState({ checkboxes });\n            });\n            return (\n                <GridTile\n                    key={checkbox.key}\n                    className={classNames('col-xs-12 col-md-6 col-lg-4', styles.formControl)}\n                >\n                    <Checkbox\n                        label={i18n.t(checkbox.label)}\n                        checked={checkboxState}\n                        onCheck={toggleCheckbox}\n                        labelStyle={{ color: '#000000' }}\n                        iconStyle={{ fill: '#000000' }}\n                        disabled={this.areActionsDisabled()}\n                    />\n                </GridTile>\n            );\n        });\n\n        return (\n            <div>\n                <h1>\n                    {i18n.t(PAGE_TITLE)}\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(this.props.sectionKey)}\n                    />\n                </h1>\n                <Card id={'maintenanceContentContainerId'}>\n                    <CardText>\n                        <div className={classNames(styles.gridContainer, 'row')}>\n                            {gridElements}\n                        </div>\n                        <RaisedButton\n                            id={'performMaintenanceBtnId'}\n                            label={i18n.t(i18nKeys.maintenance.actionButton)}\n                            onClick={this.performMaintenance}\n                            primary\n                            disabled={this.areActionsDisabled() || this.selectedCheckboxesCount() === 0}\n                        />\n                    </CardText>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default Maintenance;\n","/* Notification Table Styles */\nexport const INFO_LEVEL = 'INFO';\nexport const ERROR_LEVEL = 'ERROR';\nexport const SUCCESS_LEVEL = 'SUCCESS';\n\nexport const SUCCESS_COLOR = '#8ac542';\nexport const INFO_COLOR = '#000000';\nexport const ERROR_COLOR = '#ff0000';\n\nexport const ERROR_NOTIFICATION_ICON = 'error';\nexport const SUCCESS_NOTIFICATION_ICON = 'check';\n\nconst FONT_SIZE = 14;\n\nexport const notificationsTableStyles = {\n    iconStyle: {\n        fontSize: FONT_SIZE,\n    },\n    rowStyle: {\n        fontSize: FONT_SIZE,\n        height: 48,\n    },\n    evenRowStyle: {\n        backgroundColor: '#fafafa',\n    },\n    timeColumnStyle: {\n        width: '20%',\n    },\n    messageColumnStyle: {\n        width: '80%',\n    },\n    successStyle: {\n        color: SUCCESS_COLOR,\n        iconColor: SUCCESS_COLOR,\n        fontWeight: 'bold',\n    },\n    errorStyle: {\n        color: ERROR_COLOR,\n        iconColor: ERROR_COLOR,\n        fontWeight: 'bold',\n    },\n    infoStyle: {\n        color: INFO_COLOR,\n        iconColor: SUCCESS_COLOR,\n    },\n};\n\nconst notificationStyles = {};\n\nnotificationStyles[SUCCESS_LEVEL] = {\n    color: SUCCESS_COLOR,\n    icon: SUCCESS_NOTIFICATION_ICON,\n    row: Object.assign({}, notificationsTableStyles.rowStyle, notificationsTableStyles.successStyle),\n};\n\nnotificationStyles[ERROR_LEVEL] = {\n    color: ERROR_COLOR,\n    icon: ERROR_NOTIFICATION_ICON,\n    row: Object.assign({}, notificationsTableStyles.rowStyle, notificationsTableStyles.errorStyle),\n};\n\nnotificationStyles[INFO_LEVEL] = {\n    color: INFO_COLOR,\n    icon: SUCCESS_NOTIFICATION_ICON,\n    iconColor: SUCCESS_COLOR,\n    row: Object.assign({}, notificationsTableStyles.rowStyle, notificationsTableStyles.infoStyle),\n};\n\nexport const notificationStylesInfo = notificationStyles;\n\n/* helper methods */\n\n/* FIXME think of using an third party library for that, converting for a standard time format defined by design team */\nexport const formatDateFromServer = (dateFromServer) => {\n    if (dateFromServer) {\n        return `${dateFromServer.slice(0, 10)} ${dateFromServer.slice(11, 19)}`;\n    }\n\n    return '';\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/* Material UI */\nimport {\n    Table,\n    TableBody,\n    TableRow,\n    TableRowColumn,\n    FontIcon,\n} from 'material-ui';\n\nimport {\n    notificationsTableStyles,\n    notificationStylesInfo,\n    formatDateFromServer,\n} from './notifications-table.conf';\n\nconst NotificationsTable = ({ notifications }) => {\n    const renderNotificationIcon = (notification) => {\n        const notificationIconInfo = notificationStylesInfo[notification.level];\n        if (notificationIconInfo && notificationIconInfo.icon && notification.completed) {\n            return (<FontIcon\n                className=\"material-icons\"\n                style={notificationsTableStyles.iconStyle}\n                color={notificationIconInfo.iconColor}\n            >\n                {notificationIconInfo.icon}</FontIcon>\n            );\n        }\n\n        return null;\n    };\n\n    const renderNotificationRow = (notification, index) => (\n        <TableRow\n            key={index}\n            displayBorder={false}\n            style={Object.assign(\n                {},\n                notificationStylesInfo[notification.level].row,\n                (index + 1) % 2 === 0 ? notificationsTableStyles.evenRowStyle : {})\n            }\n        >\n            <TableRowColumn style={notificationsTableStyles.timeColumnStyle}>\n                {formatDateFromServer(notification.time)}\n            </TableRowColumn>\n            <TableRowColumn style={notificationsTableStyles.messageColumnStyle}>\n                {notification.message} {renderNotificationIcon(notification)}\n            </TableRowColumn>\n        </TableRow>\n    );\n\n    if (notifications && notifications.length > 0) {\n        return (\n            <Table\n                selectable={false}\n            >\n                <TableBody\n                    displayRowCheckbox={false}\n                >\n                    {notifications.map(renderNotificationRow)}\n                </TableBody>\n            </Table>\n        );\n    }\n\n    return null;\n};\n\nNotificationsTable.propTypes = {\n    notifications: PropTypes.arrayOf(PropTypes.shape({\n        uid: PropTypes.string,\n        level: PropTypes.string,\n        time: PropTypes.string,\n        message: PropTypes.string,\n        completed: PropTypes.bool,\n    })).isRequired,\n};\n\nexport default NotificationsTable;\n","export const RESOURCE_TABLES_ENDPOINT = 'resourceTables';\nexport const PULL_INTERVAL = 5000;\nexport const RESOURCE_TABLES_TASK_SUMMARY_ENDPOINT = 'system/tasks/RESOURCE_TABLE';\n","import React from 'react';\n\n/* Material UI */\nimport { Card, CardText } from 'material-ui/Card';\nimport { RaisedButton } from 'material-ui';\n\n/* d2-ui */\nimport { ERROR, LOADING } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes';\n\n/* Components */\nimport Page from '../Page';\nimport NotificationsTable from '../../components/notifications-table/NotificationsTable';\nimport PageHelper from '../../components/page-helper/PageHelper';\n\n/* Helpers */\nimport { getDocsKeyForSection } from '../sections.conf';\nimport {\n    PULL_INTERVAL,\n    RESOURCE_TABLES_ENDPOINT,\n    RESOURCE_TABLES_TASK_SUMMARY_ENDPOINT,\n} from '../resource-tables/resource-tables.conf';\n\n// i18n\nimport i18n from '../../locales';\nimport { i18nKeys } from '../../i18n';\n\n/* styles */\nimport pageStyles from '../Page.css';\nimport styles from './ResourceTables.css';\n\nclass ResourceTable extends Page {\n    static STATE_PROPERTIES = [\n        'loading',\n        'notifications',\n        'jobId',\n        'intervalId',\n    ];\n\n    constructor() {\n        super();\n\n        this.state = {\n            loading: false,\n            notifications: [],\n            jobId: null,\n            intervalId: null,\n        };\n\n        this.initResourceTablesGeneration = this.initResourceTablesGeneration.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {};\n\n        Object.keys(nextProps).forEach((property) => {\n            if (nextProps.hasOwnProperty(property) && ResourceTable.STATE_PROPERTIES.includes(property)) {\n                nextState[property] = nextProps[property];\n            }\n        });\n\n        if (nextState !== {}) {\n            this.setState(nextState);\n        }\n    }\n\n    componentDidMount() {\n        this.requestTaskSummary();\n    }\n\n    componentWillUnmount() {\n        super.componentWillUnmount();\n\n        this.cancelPoollingRequests();\n    }\n\n    cancelPoollingRequests() {\n        clearInterval(this.state.intervalId);\n    }\n\n    setLoadingPageState() {\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: LOADING,\n            },\n            pageState: {\n                loading: true,\n                notifications: [],\n            },\n        });\n    }\n\n    setLoadedPageWithErrorState(error) {\n        const messageError = error && error.message ?\n            error.message :\n            i18n.t(i18nKeys.resourceTables.unexpectedError);\n        this.cancelPoollingRequests();\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: ERROR,\n                message: messageError,\n            },\n            pageState: {\n                loaded: true,\n                loading: false,\n            },\n        });\n    }\n\n    isAnalyzingTables = () => this.state.jobId && this.state.intervalId;\n\n    startsPooling = () => setInterval(() => {\n        this.requestTaskSummary();\n    }, PULL_INTERVAL);\n\n    isJobInProgress = jobNotifications => jobNotifications.every(notification => !notification.completed);\n\n    initResourceTablesGeneration() {\n        const api = this.context.d2.Api.getApi();\n        this.setLoadingPageState();\n        api.post(RESOURCE_TABLES_ENDPOINT).then((response) => {\n            if (this.isPageMounted() && response) {\n                const jobId = response.response.id;\n                const intervalId = setInterval(() => {\n                    this.requestTaskSummary();\n                }, PULL_INTERVAL);\n\n                this.setState({\n                    jobId,\n                    intervalId,\n                });\n            }\n        }).catch((e) => {\n            if (this.isPageMounted()) {\n                this.setLoadedPageWithErrorState(e);\n            }\n        });\n    }\n\n    updateStateForInProgressJobAccordingTaskSummaryResponse = (taskSummaryResponse) => {\n        const notifications = taskSummaryResponse[this.state.jobId] || [];\n        const completed = !this.isJobInProgress(notifications);\n\n        if (completed) {\n            this.cancelPoollingRequests();\n        }\n\n        this.context.updateAppState({\n            showSnackbar: !completed,\n            pageState: {\n                notifications,\n                loading: !completed,\n            },\n        });\n    };\n\n    verifyInProgressJobsForTaskSummaryResponseAndUpdateState = (taskSummaryResponse) => {\n        const jobIds = taskSummaryResponse ? Object.keys(taskSummaryResponse) : [];\n\n        // looking for the most recent in progress job\n        for (let i = jobIds.length - 1; i >= 0; i--) {\n            const jobId = jobIds[i];\n            const notifications = taskSummaryResponse[jobId] || [];\n\n            // found in progress job: show current notifications and starts pooling\n            if (this.isJobInProgress(notifications)) {\n                const intervalId = this.startsPooling();\n\n                this.context.updateAppState({\n                    showSnackbar: true,\n                    snackbarConf: {\n                        type: LOADING,\n                    },\n                    pageState: {\n                        notifications,\n                        loading: true,\n                        jobId,\n                        intervalId,\n                    },\n                });\n\n                break;\n            }\n        }\n    };\n\n    requestTaskSummary() {\n        const api = this.context.d2.Api.getApi();\n        const lastId = this.state.notifications && this.state.notifications.length > 0\n            ? this.state.notifications[0].uid : null;\n        const url = lastId ?\n            `${RESOURCE_TABLES_TASK_SUMMARY_ENDPOINT}?lastId=${lastId}` : `${RESOURCE_TABLES_TASK_SUMMARY_ENDPOINT}`;\n\n        api.get(url).then((taskSummaryResponse) => {\n            /* not mounted finishes */\n            if (!this.isPageMounted()) {\n                return;\n            }\n\n            // showing current job\n            if (this.isAnalyzingTables()) {\n                this.updateStateForInProgressJobAccordingTaskSummaryResponse(taskSummaryResponse);\n                // so far no jobs is being processed, lets check if server is has any in progress job\n            } else {\n                this.verifyInProgressJobsForTaskSummaryResponseAndUpdateState(taskSummaryResponse);\n            }\n        }).catch((e) => {\n            if (this.isPageMounted()) {\n                this.setLoadedPageWithErrorState(e);\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>\n                    { i18n.t(i18nKeys.resourceTables.title) }\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(this.props.sectionKey)}\n                    />\n                </h1>\n                <Card className={pageStyles.cardContainer}>\n                    <CardText>\n                        <div className={styles.description}>\n                            <div>\n                                {i18n.t(i18nKeys.resourceTables.organisationUnitStructure)} <span\n                                    className={styles.tableName}\n                                >\n                            (_orgunitstructure)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(i18nKeys.resourceTables.organistionUnitCategoryOptionCombo)} <span\n                                    className={styles.tableName}\n                                >\n                            (_orgunitstructure)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(i18nKeys.resourceTables.categoryOptionGroupSetStructure)} <span\n                                    className={styles.tableName}\n                                >\n                            (_categoryoptiongroupsetstructure)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(i18nKeys.resourceTables.dataElementGroupSetStructure)} <span\n                                    className={styles.tableName}\n                                >\n                            (_dataelementgroupsetstructure)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(i18nKeys.resourceTables.indicatorGroupSetStructure)} <span\n                                    className={styles.tableName}\n                                >\n                            (_indicatorgroupsetstructure)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(i18nKeys.resourceTables.organisationUnitGroupSetStructure)} <span\n                                    className={styles.tableName}\n                                >\n                            (_organisationunitgroupsetstructure)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(i18nKeys.resourceTables.categoryStructure)} <span\n                                    className={styles.tableName}\n                                >\n                            (_categorystructure)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(i18nKeys.resourceTables.dataElementCategoryOptionComboName)} <span\n                                    className={styles.tableName}\n                                >\n                            (_categoryoptioncomboname)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(i18nKeys.resourceTables.dataElementStructure)} <span\n                                    className={styles.tableName}\n                                >\n                            (_dataelementstructure)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(i18nKeys.resourceTables.periodStructure)} <span\n                                    className={styles.tableName}\n                                >\n                            (_periodstructure)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(i18nKeys.resourceTables.dataPeriodStructure)} <span\n                                    className={styles.tableName}\n                                >\n                            (_dateperiodstructure)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(i18nKeys.resourceTables.dataElementCategoryOptionCombinations)} <span\n                                    className={styles.tableName}\n                                >\n                            (_dataelementcategoryoptioncombo)\n                                </span>\n                            </div>\n                        </div>\n                        <RaisedButton\n                            id={'generateTablesBtnId'}\n                            primary\n                            label={i18n.t(i18nKeys.resourceTables.actionButton)}\n                            onClick={this.initResourceTablesGeneration}\n                            disabled={this.state.loading}\n                        />\n                    </CardText>\n                </Card>\n                {this.state.notifications.length > 0 &&\n                    <Card className={pageStyles.cardContainer}>\n                        <CardText>\n                            <NotificationsTable notifications={this.state.notifications} />\n                        </CardText>\n                    </Card>\n                }\n            </div>\n        );\n    }\n}\n\nexport default ResourceTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FormattedNumber = props =>\n    (\n        <span>\n            {new Intl.NumberFormat(sessionStorage.getItem('uiLocale')).format(props.value)}\n        </span>\n    );\n\nFormattedNumber.propTypes = {\n    value: PropTypes.number.isRequired,\n};\n\nexport default FormattedNumber;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\n// Material UI\nimport {\n    Table,\n    TableBody,\n    TableHeader,\n    TableHeaderColumn,\n    TableRow,\n    TableRowColumn,\n} from 'material-ui/Table';\n\nimport FormattedNumber from '../../components/formatters/FormattedNumber';\nimport styles from './DataStatistics.css';\n\nclass DataStatisticsTable extends PureComponent {\n    static propTypes = {\n        label: PropTypes.string.isRequired,\n        elements: PropTypes.array.isRequired,\n    }\n\n    render() {\n        const rows = this.props.elements.map(element => (\n            <TableRow key={element.label} className={'data-statistics-table-row'}>\n                <TableRowColumn>{element.label}</TableRowColumn>\n                <TableRowColumn>\n                    <FormattedNumber value={element.count} />\n                </TableRowColumn>\n            </TableRow>\n        ));\n        return (\n            <Table selectable={false} className={styles.statisticsTable}>\n                <TableHeader\n                    className={'data-statistics-table-header'}\n                    displaySelectAll={false}\n                    adjustForCheckbox={false}\n                    enableSelectAll={false}\n                >\n                    <TableRow>\n                        <TableHeaderColumn>{this.props.label}</TableHeaderColumn>\n                    </TableRow>\n                </TableHeader>\n                <TableBody\n                    displayRowCheckbox={false}\n                    stripedRows={false}\n                >\n                    {rows}\n                </TableBody>\n            </Table>\n        );\n    }\n}\n\nexport default DataStatisticsTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Material UI\nimport { Card, CardText } from 'material-ui/Card';\n\nimport { LOADING, ERROR } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes';\n\nimport classNames from 'classnames';\n\nimport Page from '../Page';\nimport DataStatisticsTable from './DataStatisticsTable';\n\n/* constants */\nimport PageHelper from '../../components/page-helper/PageHelper';\nimport { getDocsKeyForSection } from '../sections.conf';\n\n// i18n\nimport i18n from '../../locales';\nimport { i18nKeys } from '../../i18n';\n\n\nimport styles from './DataStatistics.css';\n\nexport const OBJECT_COUNTS_KEY = 'objectCounts';\nexport const ACTIVE_USERS_KEY = 'activeUsers';\nexport const USER_INVITATIONS_KEY = 'userInvitations';\nexport const DATA_VALUE_COUNT_KEY = 'dataValueCount';\nexport const EVENT_COUNT_KEY = 'eventCount';\n\nconst PENDING_INVITATION_ALL_KEY = 'all';\nconst EXPIRED_INVITATION_KEY = 'expired';\n\nexport const TableCard = ({ label, elements }) => (\n    <Card className={classNames(styles.card, 'data-statistics-table')}>\n        <DataStatisticsTable\n            label={label}\n            elements={elements}\n        />\n    </Card>\n);\n\nTableCard.propTypes = {\n    label: PropTypes.string.isRequired,\n    elements: PropTypes.array.isRequired,\n};\n\nclass DataStatistics extends Page {\n    static STATE_PROPERTIES = [\n        'tables',\n        'loaded',\n        'loading',\n    ];\n\n    constructor() {\n        super();\n\n        // state defaults\n        this.state = {\n            tables: {},\n            loaded: false,\n            loading: false,\n        };\n    }\n\n    // auxiliar functions\n    static objectCountsTableObjectToShowFromServerResponse = (objectCountsResponse) => {\n        if (objectCountsResponse) {\n            const objectCountsKeys = Object.keys(objectCountsResponse);\n            const objectCountsTable = {\n                label: i18n.t(i18nKeys.dataStatistics.objectType),\n                elements: [],\n            };\n\n            for (let i = 0; i < objectCountsKeys.length; i++) {\n                const key = objectCountsKeys[i];\n                objectCountsTable.elements.push({\n                    label: i18n.t(i18nKeys.dataStatistics.objects[key]),\n                    count: objectCountsResponse[key],\n                });\n            }\n\n            return objectCountsTable;\n        }\n\n        return {};\n    };\n\n    static translatedTimeLabelFromIntProperty = (intProperty) => {\n        let label = i18n.t(i18nKeys.dataStatistics.lastHour);\n        if (intProperty === 1) {\n            label = i18n.t(i18nKeys.dataStatistics.today);\n        } else if (intProperty > 0) {\n            const lastLabel = i18n.t(i18nKeys.dataStatistics.last);\n            const daysLabel = i18n.t(i18nKeys.dataStatistics.days);\n            label = `${lastLabel} ${intProperty} ${daysLabel}`;\n        }\n\n        return label;\n    };\n\n    static activeUsersTableObjectToShowFromServerResponse = (activeUsersResponse) => {\n        if (activeUsersResponse) {\n            const activeUsersKeys = Object.keys(activeUsersResponse);\n            const activeUsersTable = {\n                label: i18n.t(i18nKeys.dataStatistics.usersLoggedIn),\n                elements: [],\n            };\n\n            for (let i = 0; i < activeUsersKeys.length; i++) {\n                const key = activeUsersKeys[i];\n                activeUsersTable.elements.push({\n                    label: DataStatistics.translatedTimeLabelFromIntProperty(parseInt(key, 10)),\n                    count: activeUsersResponse[key],\n                });\n            }\n\n            return activeUsersTable;\n        }\n\n        return {};\n    };\n\n    static userInvitationsTableObjectToShowFromServerResponse = (userInvitationsResponse) => {\n        if (userInvitationsResponse) {\n            const userInvitationsTable = {\n                label: i18n.t(i18nKeys.dataStatistics.userAccountInvitations),\n                elements: [],\n            };\n\n            if (userInvitationsResponse.hasOwnProperty(PENDING_INVITATION_ALL_KEY)) {\n                userInvitationsTable.elements.push({\n                    label: i18n.t(i18nKeys.dataStatistics.pedingInvitations),\n                    count: userInvitationsResponse[PENDING_INVITATION_ALL_KEY],\n                });\n            }\n\n            if (userInvitationsResponse.hasOwnProperty(EXPIRED_INVITATION_KEY)) {\n                userInvitationsTable.elements.push({\n                    label: i18n.t(i18nKeys.dataStatistics.expiredInvitations),\n                    count: userInvitationsResponse[EXPIRED_INVITATION_KEY],\n                });\n            }\n\n            return userInvitationsTable;\n        }\n\n        return {};\n    };\n\n    static dataValueCountsTableObjectToShowFromServerResponse = (dataValueCountsResponse) => {\n        if (dataValueCountsResponse) {\n            const dataValueCountsKeys = Object.keys(dataValueCountsResponse);\n            const dataValueCountsTable = {\n                label: i18n.t(i18nKeys.dataStatistics.dataValues),\n                elements: [],\n            };\n\n            for (let i = 0; i < dataValueCountsKeys.length; i++) {\n                const key = dataValueCountsKeys[i];\n                dataValueCountsTable.elements.push({\n                    label: DataStatistics.translatedTimeLabelFromIntProperty(parseInt(key, 10)),\n                    count: dataValueCountsResponse[key],\n                });\n            }\n\n            return dataValueCountsTable;\n        }\n\n        return {};\n    };\n\n    static eventCountsTableObjectToShowFromServerResponse = (eventCountsResponse) => {\n        if (eventCountsResponse) {\n            const eventCountsKeys = Object.keys(eventCountsResponse);\n            const eventCountsTable = {\n                label: i18n.t(i18nKeys.dataStatistics.events),\n                elements: [],\n            };\n\n            for (let i = 0; i < eventCountsKeys.length; i++) {\n                const key = eventCountsKeys[i];\n                eventCountsTable.elements.push({\n                    label: DataStatistics.translatedTimeLabelFromIntProperty(parseInt(key, 10)),\n                    count: eventCountsResponse[key],\n                });\n            }\n\n            return eventCountsTable;\n        }\n\n        return {};\n    };\n\n    componentDidMount() {\n        const api = this.context.d2.Api.getApi();\n\n        // request to GET statistics\n        if (!this.state.loading && !this.state.loaded) {\n            this.context.updateAppState({\n                showSnackbar: true,\n                snackbarConf: {\n                    type: LOADING,\n                    message: i18n.t(i18nKeys.dataStatistics.loadingMessage),\n                },\n                pageState: {\n                    loaded: false,\n                    tables: {},\n                    loading: true,\n                },\n            });\n\n            if (api) {\n                api.get('dataSummary').then((response) => {\n                    if (this.isPageMounted()) {\n                        const tables = {};\n                        tables[OBJECT_COUNTS_KEY] = DataStatistics.objectCountsTableObjectToShowFromServerResponse(\n                            response[OBJECT_COUNTS_KEY]);\n                        tables[ACTIVE_USERS_KEY] = DataStatistics.activeUsersTableObjectToShowFromServerResponse(\n                            response[ACTIVE_USERS_KEY]);\n                        tables[USER_INVITATIONS_KEY] =\n                            DataStatistics.userInvitationsTableObjectToShowFromServerResponse(\n                                response[USER_INVITATIONS_KEY]);\n                        tables[DATA_VALUE_COUNT_KEY] =\n                            DataStatistics.dataValueCountsTableObjectToShowFromServerResponse(\n                                response[DATA_VALUE_COUNT_KEY]);\n                        tables[EVENT_COUNT_KEY] = DataStatistics.eventCountsTableObjectToShowFromServerResponse(\n                            response[EVENT_COUNT_KEY]);\n\n                        this.context.updateAppState({\n                            showSnackbar: false,\n                            pageState: {\n                                loaded: true,\n                                tables,\n                                loading: false,\n                            },\n                        });\n                    }\n                }).catch(() => {\n                    if (this.isPageMounted()) {\n                        this.context.updateAppState({\n                            showSnackbar: true,\n                            snackbarConf: {\n                                type: ERROR,\n                                message: i18n.t(i18nKeys.dataStatistics.errorMessage),\n                            },\n                            pageState: {\n                                loaded: true,\n                                tables: {},\n                                loading: false,\n                            },\n                        });\n                    }\n                });\n            }\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {};\n\n        Object.keys(nextProps).forEach((property) => {\n            if (nextProps.hasOwnProperty(property) && DataStatistics.STATE_PROPERTIES.includes(property)) {\n                nextState[property] = nextProps[property];\n            }\n        });\n\n        if (nextState !== {}) {\n            this.setState(nextState);\n        }\n    }\n\n    hasTables = () =>\n        this.state.tables && this.state.tables.constructor === Object && Object.keys(this.state.tables).length > 0;\n\n    render() {\n        const noContent = (\n            <Card style={{ display: !this.state.loading ? 'block' : 'none' }}>\n                <CardText>{i18n.t(i18nKeys.dataStatistics.noDataMessage)}</CardText>\n            </Card>\n        );\n\n        return (\n            <div>\n                <h1 className={styles.header}>\n                    {i18n.t(i18nKeys.dataStatistics.title)}\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(this.props.sectionKey)}\n                    />\n                </h1>\n                { this.hasTables() ?\n                    (\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                { this.state.tables[OBJECT_COUNTS_KEY] &&\n                                    <TableCard\n                                        label={this.state.tables[OBJECT_COUNTS_KEY].label}\n                                        elements={this.state.tables[OBJECT_COUNTS_KEY].elements}\n                                    />\n                                }\n                                {this.state.tables[ACTIVE_USERS_KEY] &&\n                                    <TableCard\n                                        label={this.state.tables[ACTIVE_USERS_KEY].label}\n                                        elements={this.state.tables[ACTIVE_USERS_KEY].elements}\n                                    />\n                                }\n                            </div>\n                            <div className=\"col-md-6\">\n                                {this.state.tables[USER_INVITATIONS_KEY] &&\n                                    <TableCard\n                                        label={this.state.tables[USER_INVITATIONS_KEY].label}\n                                        elements={this.state.tables[USER_INVITATIONS_KEY].elements}\n                                    />\n                                }\n                                {this.state.tables[DATA_VALUE_COUNT_KEY] &&\n                                    <TableCard\n                                        label={this.state.tables[DATA_VALUE_COUNT_KEY].label}\n                                        elements={this.state.tables[DATA_VALUE_COUNT_KEY].elements}\n                                    />\n                                }\n                                {this.state.tables[EVENT_COUNT_KEY] &&\n                                    <TableCard\n                                        label={this.state.tables[EVENT_COUNT_KEY].label}\n                                        elements={this.state.tables[EVENT_COUNT_KEY].elements}\n                                    />\n                                }\n                            </div>\n                        </div>\n                    ) : noContent\n                }\n            </div>\n        );\n    }\n}\n\nexport default DataStatistics;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n/* Material UI */\nimport Card from 'material-ui/Card/Card';\nimport CardText from 'material-ui/Card/CardText';\n\nimport OrgUnitTree from 'd2-ui/lib/org-unit-tree/OrgUnitTree.component';\nimport OrgUnitSelectByLevel from 'd2-ui/lib/org-unit-select/OrgUnitSelectByLevel.component';\nimport OrgUnitSelectByGroup from 'd2-ui/lib/org-unit-select/OrgUnitSelectByGroup.component';\nimport OrgUnitSelectAll from 'd2-ui/lib/org-unit-select/OrgUnitSelectAll.component';\nimport SelectField from 'd2-ui/lib/select-field/SelectField';\nimport PeriodPicker from 'd2-ui/lib/period-picker/PeriodPicker.component';\n\nimport { ERROR } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes';\n\n// i18n\nimport i18n from '../../locales';\nimport { i18nKeys } from '../../i18n';\n\nimport styles from './AddLockExceptionForm.css';\n\nconst d2UiSelectStyleOverride = {\n    minWidth: 360,\n    marginRight: 20,\n};\n\nclass AddLockExceptionForm extends Component {\n    static propTypes = {\n        levels: PropTypes.oneOfType([\n            PropTypes.object,\n            PropTypes.array,\n        ]).isRequired,\n        groups: PropTypes.oneOfType([\n            PropTypes.object,\n            PropTypes.array,\n        ]).isRequired,\n        dataSets: PropTypes.array.isRequired,\n        updateSelectedOrgUnits: PropTypes.func.isRequired,\n        updateSeletedDataSetId: PropTypes.func.isRequired,\n        updateSelectedPeriodId: PropTypes.func.isRequired,\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    constructor() {\n        super();\n\n        this.state = {\n            selected: [],\n            dataSet: null,\n            orgUnitPaths: null,\n        };\n\n        this.onDataSetChange = this.onDataSetChange.bind(this);\n\n        this.onPeriodChange = this.onPeriodChange.bind(this);\n\n        this.handleSelectionUpdate = this.handleSelectionUpdate.bind(this);\n        this.handleOrgUnitClick = this.handleOrgUnitClick.bind(this);\n        this.changeRoot = this.changeRoot.bind(this);\n    }\n\n    onDataSetChange(dataSet) {\n        const d2 = this.context.d2;\n        const dataSetId = dataSet.id;\n\n        if (this.state.dataSet === null || dataSetId !== this.state.dataSet.id) {\n            this.props.updateSeletedDataSetId(dataSetId);\n\n            this.setState({\n                rootWithMembers: null,\n                selected: [],\n                dataSet,\n            });\n\n            Promise.all([\n                d2.models.organisationUnits.list({\n                    paging: false,\n                    level: 1,\n                    fields: 'id,displayName,path,children::isNotEmpty,memberCount',\n                    memberCollection: 'dataSets',\n                    memberObject: dataSetId,\n                }),\n                d2.models.dataSets.get(dataSetId, {\n                    paging: false,\n                    fields: 'organisationUnits[id,path]',\n                }),\n            ]).then(([rootWithDataSetMembers, dataSetMembers]) => {\n                const rootWithMembers = rootWithDataSetMembers.toArray()[0];\n                this.setState({\n                    rootWithMembers,\n                    selected: [],\n                    orgUnitPaths: dataSetMembers.organisationUnits.toArray().map(ou => ou.path),\n                });\n            }).catch((error) => {\n                if (this.isPageMounted()) {\n                    const messageError = error && error.message ?\n                        error.message :\n                        i18n.t(i18nKeys.messages.unexpectedError);\n\n                    this.context.updateAppState({\n                        showSnackbar: true,\n                        loading: false,\n                        snackbarConf: {\n                            type: ERROR,\n                            message: messageError,\n                        },\n                        pageState: { ...this.state },\n                    });\n                }\n            });\n        }\n    }\n\n    onPeriodChange(periodId) {\n        this.props.updateSelectedPeriodId(periodId);\n    }\n\n    handleSelectionUpdate(newSelection) {\n        this.setState({ selected: newSelection });\n        this.props.updateSelectedOrgUnits(this.state.selected);\n    }\n\n    handleOrgUnitClick(event, orgUnit) {\n        if (this.state.selected.includes(orgUnit.path)) {\n            const selected = this.state.selected;\n            selected.splice(selected.indexOf(orgUnit.path), 1);\n            this.setState({ selected });\n        } else {\n            const selected = this.state.selected;\n            selected.push(orgUnit.path);\n            this.setState({ selected });\n        }\n        this.props.updateSelectedOrgUnits(this.state.selected);\n    }\n\n    changeRoot(currentRoot) {\n        this.setState({ currentRoot });\n    }\n\n    render() {\n        const dataSetItems = this.props.dataSets.map(dataSet => (\n            { id: dataSet.id, name: dataSet.displayName, periodType: dataSet.periodType }),\n        );\n\n        let dataSetSelectLabel = i18n.t(i18nKeys.lockException.selectADataSet);\n        let dataSetSelectValue = null;\n        if (this.state.dataSet) {\n            dataSetSelectLabel = i18n.t(i18nKeys.lockException.dataSet);\n            dataSetSelectValue = this.state.dataSet.id;\n        }\n\n        return (\n            <div id={'addLockExceptionFormId'}>\n                <div className={styles.selectsContainer}>\n                    <SelectField\n                        style={d2UiSelectStyleOverride}\n                        label={dataSetSelectLabel}\n                        items={dataSetItems}\n                        onChange={this.onDataSetChange}\n                        value={dataSetSelectValue}\n                    />\n                    {this.state.dataSet &&\n                        <span id={'idPeriodPicker'}>\n                            <PeriodPicker\n                                periodType={this.state.dataSet.periodType}\n                                onPickPeriod={this.onPeriodChange}\n                            />\n                        </span>\n                    }\n                </div>\n                {this.state.dataSet ? (\n                    <Card className={styles.organisationUnitTreeCard}>\n                        <CardText className={styles.organisationUnitTreeContainer}>\n                            <div className={styles.left}>\n                                {this.state.rootWithMembers ? (\n                                    <OrgUnitTree\n                                        root={this.state.rootWithMembers}\n                                        selected={this.state.selected}\n                                        currentRoot={this.state.currentRoot}\n                                        initiallyExpanded={[`/${this.state.rootWithMembers.id}`]}\n                                        memberCollection=\"dataSets\"\n                                        memberObject={this.state.dataSet.id}\n                                        onSelectClick={this.handleOrgUnitClick}\n                                        onChangeCurrentRoot={this.changeRoot}\n                                        orgUnitsPathsToInclude={this.state.orgUnitPaths}\n                                    />) :\n                                    (\n                                        <span>{i18n.t(i18nKeys.lockException.updatingTree)}</span>\n                                    )}\n                            </div>\n                            <div className={styles.right}>\n                                <div>\n                                    {this.state.currentRoot ? (<div>\n                                        {i18n.t(i18nKeys.lockException.organisationUnitsWithin)} <span\n                                            className={styles.ouLabel}\n                                        >{\n                                                this.state.currentRoot.displayName\n                                            }</span>:</div>\n                                    ) : <div>{i18n.t(i18nKeys.lockException.selectOrganisationUnits)}</div>}\n                                    <OrgUnitSelectByLevel\n                                        levels={this.props.levels}\n                                        selected={this.state.selected}\n                                        currentRoot={this.state.currentRoot}\n                                        onUpdateSelection={this.handleSelectionUpdate}\n                                    />\n                                    <OrgUnitSelectByGroup\n                                        groups={this.props.groups}\n                                        selected={this.state.selected}\n                                        currentRoot={this.state.currentRoot}\n                                        onUpdateSelection={this.handleSelectionUpdate}\n                                    />\n                                    <OrgUnitSelectAll\n                                        selected={this.state.selected}\n                                        currentRoot={this.state.currentRoot}\n                                        onUpdateSelection={this.handleSelectionUpdate}\n                                    />\n                                </div>\n                            </div>\n                        </CardText>\n                    </Card>) : null\n                }\n            </div>\n        );\n    }\n}\n\nexport default AddLockExceptionForm;\n","export const calculatePageValue = (pager) => {\n    const pageSize = pager.pageSize;\n    const { total, pageCount, page } = pager;\n    const pageCalculationValue = total - (total - ((pageCount - (pageCount - page)) * pageSize));\n    const startItem = (pageCalculationValue - pageSize) + 1;\n    const endItem = pageCalculationValue;\n\n    return `${startItem} - ${endItem > total ? total : endItem}`;\n};\n\nexport default calculatePageValue;\n","import React from 'react';\n\n/* Material UI */\nimport Dialog from 'material-ui/Dialog';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport FlatButton from 'material-ui/FlatButton';\nimport FontIcon from 'material-ui/FontIcon';\nimport IconButton from 'material-ui/IconButton';\nimport { Card, CardText } from 'material-ui/Card';\nimport FloatingActionButton from 'material-ui/FloatingActionButton';\nimport ContentAdd from 'material-ui/svg-icons/content/add';\n\nimport DataTable from 'd2-ui/lib/data-table/DataTable.component';\nimport Pagination from 'd2-ui/lib/pagination/Pagination.component';\n\nimport 'd2-ui/lib/css/DataTable.css';\nimport 'd2-ui/lib/css/Pagination.css';\nimport { LOADING, SUCCESS, ERROR, ACTION_MESSAGE } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes';\n\nimport classNames from 'classnames';\n\nimport Page from '../Page';\nimport AddLockExceptionForm from './AddLockExceptionForm';\n\nimport { calculatePageValue } from '../../helpers/pagination';\n\nimport { getDocsKeyForSection } from '../sections.conf';\nimport PageHelper from '../../components/page-helper/PageHelper';\n\n// i18n\nimport i18n from '../../locales';\nimport { i18nKeys } from '../../i18n';\n\nimport styles from './LockException.css';\nimport '../../custom-css/D2UIDataTableOverrides.css';\n\nconst jsStyles = {\n    dialog: {\n        maxWidth: '80%',\n    },\n    addButton: {\n        position: 'fixed',\n        bottom: '1.5rem',\n        right: '1.5rem',\n    },\n};\n\nclass LockException extends Page {\n    static STATE_PROPERTIES = [\n        'lockExceptions',\n        'showAddDialogOpen',\n        'selectedLockException',\n        'levels',\n        'groups',\n        'dataSets',\n        'selectedOrgUnits',\n        'selectedDataSetId',\n        'selectedPeriodId',\n        'pager',\n        'loading',\n        'atBatchDeletionPage',\n    ];\n\n    static initialPager = {\n        pageSize: 20,\n        page: 1,\n        total: 0,\n        pageCount: 1,\n    };\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            lockExceptions: [],\n            showAddDialogOpen: false,\n            selectedLockException: null,\n            levels: null,\n            groups: null,\n            dataSets: [],\n            selectedOrgUnits: [],\n            selectedDataSetId: null,\n            selectedPeriodId: null,\n            pager: LockException.initialPager,\n            loading: false,\n            loaded: false,\n            atBatchDeletionPage: false,\n        };\n\n        this.updateSelectedOrgUnits = this.updateSelectedOrgUnits.bind(this);\n        this.updateSeletedDataSetId = this.updateSeletedDataSetId.bind(this);\n        this.updateSelectedPeriodId = this.updateSelectedPeriodId.bind(this);\n\n        this.removeLockException = this.removeLockException.bind(this);\n\n        this.showLockExceptionFormDialog = this.showLockExceptionFormDialog.bind(this);\n        this.closeLockExceptionFormDialog = this.closeLockExceptionFormDialog.bind(this);\n\n        this.addLockException = this.addLockException.bind(this);\n\n        this.backToLockExceptions = this.backToLockExceptions.bind(this);\n        this.goToBatchDeletionPage = this.goToBatchDeletionPage.bind(this);\n\n        this.onNextPageClick = this.onNextPageClick.bind(this);\n        this.onPreviousPageClick = this.onPreviousPageClick.bind(this);\n\n        // FIXME Hack in some translations\n        const d2 = context.d2;\n        Object.assign(d2.i18n.translations, {\n            period: i18n.t(i18nKeys.lockException.period),\n            data_set: i18n.t(i18nKeys.lockException.dataSet),\n            organisation_unit: i18n.t(i18nKeys.lockException.organisationUnit),\n            organisation_unit_group: i18n.t(i18nKeys.lockException.organisationUnitGroup),\n            organisation_unit_level: i18n.t(i18nKeys.lockException.organisationUnitLevel),\n            select: i18n.t(i18nKeys.lockException.select),\n            deselect: i18n.t(i18nKeys.lockException.deselect),\n            select_all: i18n.t(i18nKeys.lockException.selectAll),\n            deselect_all: i18n.t(i18nKeys.lockException.deselectAll),\n            name: i18n.t(i18nKeys.lockException.name),\n            show: i18n.t(i18nKeys.lockException.show),\n            remove: i18n.t(i18nKeys.lockException.remove),\n            actions: i18n.t(i18nKeys.lockException.actions),\n            of_page: i18n.t(i18nKeys.lockException.ofPage),\n            week: i18n.t(i18nKeys.lockException.week),\n            month: i18n.t(i18nKeys.lockException.month),\n            year: i18n.t(i18nKeys.lockException.year),\n            biMonth: i18n.t(i18nKeys.lockException.biMonth),\n            day: i18n.t(i18nKeys.lockException.day),\n            jan: i18n.t(i18nKeys.lockException.jan),\n            feb: i18n.t(i18nKeys.lockException.feb),\n            mar: i18n.t(i18nKeys.lockException.mar),\n            apr: i18n.t(i18nKeys.lockException.apr),\n            may: i18n.t(i18nKeys.lockException.may),\n            jun: i18n.t(i18nKeys.lockException.jun),\n            jul: i18n.t(i18nKeys.lockException.jul),\n            aug: i18n.t(i18nKeys.lockException.aug),\n            sep: i18n.t(i18nKeys.lockException.sep),\n            oct: i18n.t(i18nKeys.lockException.oct),\n            nov: i18n.t(i18nKeys.lockException.nov),\n            dec: i18n.t(i18nKeys.lockException.dec),\n            'jan-feb': i18n.t(i18nKeys.lockException.janFeb),\n            'mar-apr': i18n.t(i18nKeys.lockException.marApr),\n            'may-jun': i18n.t(i18nKeys.lockException.mayJun),\n            'jul-aug': i18n.t(i18nKeys.lockException.julAug),\n            'sep-oct': i18n.t(i18nKeys.lockException.sepOct),\n            'nov-dec': i18n.t(i18nKeys.lockException.novDec),\n            quarter: i18n.t(i18nKeys.lockException.quarter),\n            Q1: i18n.t(i18nKeys.lockException.Q1),\n            Q2: i18n.t(i18nKeys.lockException.Q2),\n            Q3: i18n.t(i18nKeys.lockException.Q3),\n            Q4: i18n.t(i18nKeys.lockException.Q4),\n            sixMonth: i18n.t(i18nKeys.lockException.sixMonth),\n            'jan-jun': i18n.t(i18nKeys.lockException.janJun),\n            'jul-dec': i18n.t(i18nKeys.lockException.julDec),\n            'apr-sep': i18n.t(i18nKeys.lockException.aprSep),\n            'oct-mar': i18n.t(i18nKeys.lockException.octMar),\n        });\n    }\n\n    prepareLockExceptionsResponseToDataTable(lockExceptionResponse) {\n        return lockExceptionResponse.map((le) => {\n            const row = {};\n            if (!this.state.atBatchDeletionPage) {\n                row.organisationUnit = le.organisationUnit.displayName;\n                row.organisationUnitId = le.organisationUnit.id;\n            }\n            row.period = le.period.displayName;\n            row.periodId = le.period.id;\n            row.dataSet = le.dataSet.displayName;\n            row.dataSetId = le.dataSet.id;\n            return row;\n        });\n    }\n\n    dataTableColumns() {\n        if (this.state.atBatchDeletionPage) {\n            return ['dataSet', 'period'];\n        }\n        return ['organisationUnit', 'dataSet', 'period'];\n    }\n\n    header() {\n        if (this.state.atBatchDeletionPage) {\n            return (\n                <div className={styles.headerContainer}>\n                    <h1 className={styles.header}>\n                        <IconButton onClick={this.backToLockExceptions}>\n                            <FontIcon\n                                className={classNames('material-icons', styles.backArrowIcon)}\n                            >\n                                arrow_back\n                            </FontIcon>\n                        </IconButton>\n                        <span>{i18n.t(i18nKeys.lockException.batchDeletionHeader)}</span>\n                        <span className={styles.headerDivider}> | </span>\n                        <span\n                            className={styles.subHeader}\n                        >\n                            {i18n.t(i18nKeys.lockException.batchDeletionSubHeader)}\n                        </span>\n                    </h1>\n                </div>\n            );\n        }\n\n        return (\n            <div className={styles.headerContainer}>\n                <h1 className={styles.header}>\n                    {i18n.t(i18nKeys.lockException.title)}\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(this.props.sectionKey)}\n                    />\n                </h1>\n                <div>\n                    <RaisedButton\n                        className={styles.actionButton}\n                        label={i18n.t(i18nKeys.lockException.actionButton)}\n                        onClick={this.goToBatchDeletionPage}\n                        primary\n                        disabled={this.areActionsDisabled()}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    areActionsDisabled() {\n        return this.state.loading;\n    }\n\n    addLockExceptionEnabled() {\n        return this.state.selectedOrgUnits.length > 0 && this.state.selectedDataSetId && this.state.selectedPeriodId;\n    }\n\n    componentDidMount() {\n        this.loadLockExceptionsForPager(this.state.pager);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {};\n\n        Object.keys(nextProps).forEach((property) => {\n            if (nextProps.hasOwnProperty(property) && LockException.STATE_PROPERTIES.includes(property)) {\n                nextState[property] = nextProps[property];\n            }\n        });\n\n        if (nextState !== {}) {\n            this.setState(nextState);\n        }\n    }\n\n    loadLockExceptionsForPager(pager, userAction) {\n        const api = this.context.d2.Api.getApi();\n        const url = `lockExceptions?page=${pager.page}&pageSize=${pager.pageSize}` +\n            '&fields=name,' +\n            'period[id,displayName],' +\n            'organisationUnit[id,displayName],' +\n            'dataSet[id,displayName]' +\n            '&order=name:asc';\n\n        // request to GET lock exceptions\n        if (userAction || (!this.state.loading && !this.state.loaded)) {\n            // Keep the previous message visible (p.e. deleting lock exception || add lock exception)\n            this.context.updateAppState((this.state.deleteInProgress || this.state.addInProgress) ? {\n                atBatchDeletionPage: false,\n                loaded: false,\n                loading: true,\n            } : {\n                showSnackbar: true,\n                snackbarConf: {\n                    type: LOADING,\n                    message: i18n.t(i18nKeys.lockException.loading),\n                },\n                pageState: {\n                    atBatchDeletionPage: false,\n                    loaded: false,\n                    loading: true,\n                },\n            });\n\n            api.get(url)\n                .then((response) => {\n                    if (this.isPageMounted()) {\n                        let loadedState;\n\n                        // If deleting a lock exception, show a success message instead of hiding the loading\n                        if (this.state.deleteInProgress) {\n                            loadedState = {\n                                showSnackbar: true,\n                                snackbarConf: {\n                                    type: SUCCESS,\n                                    message: i18n.t(i18nKeys.lockException.removedMessage),\n                                },\n                            };\n                            this.state.deleteInProgress = false;\n                        // If adding a lock exception, show a success message instead of hiding the loading\n                        } else if (this.state.addInProgress) {\n                            loadedState = {\n                                showSnackbar: true,\n                                snackbarConf: {\n                                    type: SUCCESS,\n                                    message: i18n.t(i18nKeys.lockException.addedMessage),\n                                },\n                            };\n                            this.state.addInProgress = false;\n                        } else {\n                            loadedState = {\n                                showSnackbar: false,\n                            };\n                        }\n\n                        this.context.updateAppState({\n                            ...loadedState,\n                            pageState: {\n                                loaded: true,\n                                lockExceptions: this.prepareLockExceptionsResponseToDataTable(\n                                    response.lockExceptions,\n                                ),\n                                pager: response.pager,\n                                loading: false,\n                            },\n                        });\n                    }\n                }).catch((error) => {\n                    if (this.isPageMounted()) {\n                        const messageError = error && error.message ?\n                            error.message :\n                            i18n.t(i18nKeys.messages.unexpectedError);\n\n                        this.context.updateAppState({\n                            showSnackbar: true,\n                            snackbarConf: {\n                                type: ERROR,\n                                message: messageError,\n                            },\n                            pageState: {\n                                loaded: true,\n                                loading: false,\n                            },\n                        });\n                    }\n                });\n        }\n    }\n\n    // Get information for Batch Deletion Page\n    loadLockExceptionCombinations() {\n        const api = this.context.d2.Api.getApi();\n        const url = 'lockExceptions/combinations?fields=name, period[id,displayName], dataSet[id,displayName]';\n\n        // request to GET lock exception combinations\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: LOADING,\n                message: i18n.t(i18nKeys.lockException.loadingMessage),\n            },\n            pageState: {\n                atBatchDeletionPage: true,\n                loaded: false,\n                loading: true,\n            },\n        });\n\n        api.get(url)\n            .then((response) => {\n                if (this.isPageMounted()) {\n                    this.context.updateAppState({\n                        showSnackbar: false,\n                        pageState: {\n                            loaded: true,\n                            lockExceptions: this.prepareLockExceptionsResponseToDataTable(\n                                response.lockExceptions,\n                            ),\n                            loading: false,\n                        },\n                    });\n                }\n            }).catch((error) => {\n                if (this.isPageMounted()) {\n                    const messageError = error && error.message ?\n                        error.message :\n                        i18n.t(i18nKeys.messages.unexpectedError);\n\n                    this.context.updateAppState({\n                        showSnackbar: true,\n                        snackbarConf: {\n                            type: ERROR,\n                            message: messageError,\n                        },\n                        pageState: {\n                            loaded: true,\n                            loading: false,\n                        },\n                    });\n                }\n            });\n    }\n\n    updateSelectedOrgUnits(selectedOrgUnits) {\n        this.setState({ selectedOrgUnits });\n    }\n\n    updateSeletedDataSetId(selectedDataSetId) {\n        this.setState({ selectedDataSetId });\n    }\n\n    updateSelectedPeriodId(selectedPeriodId) {\n        this.setState({ selectedPeriodId });\n    }\n\n    onNextPageClick() {\n        const pager = Object.assign({}, this.state.pager);\n        pager.page += 1;\n        this.loadLockExceptionsForPager(pager, true);\n    }\n\n    onPreviousPageClick() {\n        const pager = Object.assign({}, this.state.pager);\n        pager.page -= 1;\n        this.loadLockExceptionsForPager(pager, true);\n    }\n\n    backToLockExceptions() {\n        this.loadLockExceptionsForPager(this.state.pager, true);\n    }\n\n    goToBatchDeletionPage() {\n        this.loadLockExceptionCombinations();\n    }\n\n    removeLockException(le) {\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: ACTION_MESSAGE,\n                message: i18n.t(i18nKeys.lockException.confirmDeleteMessage),\n                action: i18n.t(i18nKeys.lockException.confirmButton),\n                onActionClick: () => {\n                    const api = this.context.d2.Api.getApi();\n                    let deleteUrl = `lockExceptions?pe=${le.periodId}&ds=${le.dataSetId}`;\n\n                    if (le.organisationUnitId) {\n                        deleteUrl += `&ou=${le.organisationUnitId}`;\n                    }\n\n                    this.context.updateAppState({\n                        showSnackbar: true,\n                        snackbarConf: {\n                            type: LOADING,\n                            message: i18n.t(i18nKeys.lockException.loadingMessage),\n                        },\n                        pageState: {\n                            ...this.state,\n                            loading: true,\n                        },\n                    });\n\n                    api.delete(deleteUrl).then(() => {\n                        if (this.isPageMounted()) {\n                            const newPageState = {\n                                ...this.state,\n                                loading: false,\n                            };\n\n                            if (this.state.atBatchDeletionPage) {\n                                newPageState.lockExceptions = this.state.lockExceptions.filter(\n                                    existingLockException => existingLockException.periodId !== le.periodId\n                                        || existingLockException.dataSetId !== le.dataSetId);\n\n                                this.context.updateAppState({\n                                    showSnackbar: true,\n                                    snackbarConf: {\n                                        type: SUCCESS,\n                                        message: i18n.t(i18nKeys.lockException.removedMessage),\n                                    },\n                                    pageState: newPageState,\n                                });\n                            } else {\n                                this.state.deleteInProgress = true;\n                                this.context.updateAppState({\n                                    pageState: newPageState,\n                                });\n                                this.loadLockExceptionsForPager(LockException.initialPager, false);\n                            }\n                        }\n                    }).catch((error) => {\n                        if (this.isPageMounted()) {\n                            const messageError = error && error.message ?\n                                error.message :\n                                i18n.t(i18nKeys.messages.unexpectedError);\n\n                            this.context.updateAppState({\n                                showSnackbar: true,\n                                snackbarConf: {\n                                    type: ERROR,\n                                    message: messageError,\n                                },\n                                pageState: {\n                                    ...this.state,\n                                    loading: false,\n                                },\n                            });\n                        }\n                    });\n                },\n            },\n        });\n    }\n\n    showLockExceptionFormDialog() {\n        const d2 = this.context.d2;\n        if (this.state.levels &&\n            this.state.groups &&\n            this.state.dataSets.length > 0) {\n            this.setState({ showAddDialogOpen: true });\n        } else {\n            Promise.all([\n                d2.models.organisationUnitLevel.list({\n                    paging: false,\n                    fields: 'id,level,displayName',\n                    order: 'level:asc',\n                }),\n                d2.models.organisationUnitGroup.list({\n                    paging: false,\n                    fields: 'id,displayName',\n                }),\n                d2.models.dataSet.list({\n                    paging: false,\n                    fields: 'id,displayName,periodType',\n                }),\n            ]).then(([levels, groups, dataSets]) => {\n                if (this.isPageMounted()) {\n                    this.setState({\n                        showAddDialogOpen: true,\n                        levels,\n                        groups,\n                        dataSets: dataSets.toArray(),\n                    });\n                }\n            }).catch((error) => {\n                if (this.isPageMounted()) {\n                    const messageError = error && error.message ?\n                        error.message :\n                        i18n.t(i18nKeys.messages.unexpectedError);\n\n                    this.context.updateAppState({\n                        showSnackbar: true,\n                        snackbarConf: {\n                            type: ERROR,\n                            message: messageError,\n                        },\n                        pageState: {\n                            ...this.state,\n                            loading: false,\n                        },\n                    });\n                }\n            });\n        }\n    }\n\n    closeLockExceptionFormDialog() {\n        this.setState({\n            showAddDialogOpen: false,\n            selectedOrgUnits: [],\n            selectedDataSetId: null,\n            selectedPeriodId: null,\n        });\n    }\n\n    addLockException() {\n        if (this.addLockExceptionEnabled()) {\n            const api = this.context.d2.Api.getApi();\n            const orgUnitIds = this.state.selectedOrgUnits.map((orgUnitPath) => {\n                const orgUnitPathSplitted = orgUnitPath.split('/');\n                return orgUnitPathSplitted[orgUnitPathSplitted.length - 1];\n            });\n\n            const formData = new FormData();\n            formData.append('ou', `[${orgUnitIds.join(',')}]`);\n            formData.append('pe', this.state.selectedPeriodId);\n            formData.append('ds', this.state.selectedDataSetId);\n\n            this.context.updateAppState({\n                showSnackbar: true,\n                snackbarConf: {\n                    type: LOADING,\n                    message: i18n.t(i18nKeys.lockException.addingMessage),\n                },\n                pageState: {\n                    showAddDialogOpen: false,\n                    selectedOrgUnits: [],\n                    selectedDataSetId: null,\n                    selectedPeriodId: null,\n                    loading: true,\n                },\n            });\n\n            api.post('lockExceptions', formData).then(() => {\n                if (this.isPageMounted()) {\n                    this.context.updateAppState({\n                        pageState: {\n                            loaded: false,\n                            loading: false,\n                        },\n                    });\n                    this.state.addInProgress = true;\n                    this.loadLockExceptionsForPager(LockException.initialPager, false);\n                }\n            }).catch((error) => {\n                if (this.isPageMounted()) {\n                    const messageError = error && error.message ?\n                        error.message :\n                        i18n.t(i18nKeys.messages.unexpectedError);\n\n                    this.context.updateAppState({\n                        showSnackbar: true,\n                        snackbarConf: {\n                            type: ERROR,\n                            message: messageError,\n                        },\n                        pageState: {\n                            ...this.state,\n                            loading: false,\n                        },\n                    });\n                }\n            });\n        }\n    }\n\n    render() {\n        const currentlyShown = calculatePageValue(this.state.pager);\n        const paginationProps = {\n            hasNextPage: () => this.state.pager.page < this.state.pager.pageCount,\n            hasPreviousPage: () => this.state.pager.page > 1,\n            onNextPageClick: this.onNextPageClick,\n            onPreviousPageClick: this.onPreviousPageClick,\n            total: this.state.pager.total,\n            currentlyShown,\n        };\n\n        const addLockException = [\n            <FlatButton\n                className={styles.actionButton}\n                label={i18n.t(i18nKeys.lockException.cancelButton)}\n                onClick={this.closeLockExceptionFormDialog}\n            />,\n            <RaisedButton\n                className={styles.actionButton}\n                primary={Boolean(true)}\n                label={i18n.t(i18nKeys.lockException.addButton)}\n                onClick={this.addLockException}\n                disabled={!this.addLockExceptionEnabled()}\n            />,\n        ];\n\n        return (\n            <div className={styles.lockExceptionsTable}>\n                {this.header()}\n                {\n                    this.state.lockExceptions && this.state.lockExceptions.length ?\n                        (\n                            <div>\n                                {!this.areActionsDisabled() && !this.state.atBatchDeletionPage &&\n                                    <div className={styles.pagination}>\n                                        <Pagination {...paginationProps} />\n                                    </div>\n                                }\n                                <DataTable\n                                    columns={this.dataTableColumns()}\n                                    rows={this.state.lockExceptions}\n                                    contextMenuActions={{ remove: this.removeLockException }}\n                                    contextMenuIcons={{ remove: 'delete' }}\n                                />\n                                {!this.areActionsDisabled() && !this.state.atBatchDeletionPage &&\n                                    <div className={classNames(styles.pagination, styles.marginForAddButton)}>\n                                        <Pagination {...paginationProps} />\n                                    </div>\n                                }\n                            </div>\n                        ) : (\n                            <Card style={{ display: !this.state.loading ? 'block' : 'none' }}>\n                                <CardText>{i18n.t(i18nKeys.lockException.noDataMessage)}</CardText>\n                            </Card>\n                        )\n                }\n                {this.state.levels &&\n                this.state.groups &&\n                this.state.dataSets.length > 0 &&\n                <Dialog\n                    title={i18n.t(i18nKeys.lockException.addLockExceptionFormTitle)}\n                    actions={addLockException}\n                    modal={false}\n                    open={this.state.showAddDialogOpen}\n                    contentStyle={jsStyles.dialog}\n                    onRequestClose={this.closeLockExceptionFormDialog}\n                >\n\n                    <AddLockExceptionForm\n                        levels={this.state.levels}\n                        groups={this.state.groups}\n                        dataSets={this.state.dataSets}\n                        updateSelectedOrgUnits={this.updateSelectedOrgUnits}\n                        updateSeletedDataSetId={this.updateSeletedDataSetId}\n                        updateSelectedPeriodId={this.updateSelectedPeriodId}\n                    />\n                </Dialog>\n                }\n                {!this.state.atBatchDeletionPage && !this.areActionsDisabled() &&\n                    <FloatingActionButton\n                        id={'addExceptionButtonId'}\n                        style={jsStyles.addButton}\n                        onClick={this.showLockExceptionFormDialog}\n                    >\n                        <ContentAdd />\n                    </FloatingActionButton>\n                }\n            </div>\n        );\n    }\n}\n\nexport default LockException;\n","import React from 'react';\n\n// Material UI\nimport { Card, CardText } from 'material-ui/Card';\nimport FlatButton from 'material-ui/FlatButton';\nimport RaisedButton from 'material-ui/RaisedButton';\n\nimport { LOADING, SUCCESS, ERROR, WARNING } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes';\n\nimport OrgUnitTree from 'd2-ui/lib/org-unit-tree/OrgUnitTree.component';\n\nimport Page from '../Page';\n\nimport styles from './MinMaxValueGeneration.css';\n\nimport PageHelper from '../../components/page-helper/PageHelper';\nimport { getDocsKeyForSection } from '../sections.conf';\n\n// i18n\nimport i18n from '../../locales';\nimport { i18nKeys } from '../../i18n';\n\nconst MIX_MAX_VALUE_ENDPOINT = '/minMaxValues';\n\nclass MinMaxValueGeneration extends Page {\n    static STATE_PROPERTIES = [\n        'selected',\n        'dataSets',\n        'rootWithMember',\n        'loading',\n        'dataSetsSelectedCount',\n    ]\n\n    constructor() {\n        super();\n\n        this.state = {\n            selected: [],\n            dataSets: null,\n            rootWithMember: null,\n            loading: false,\n            dataSetsSelectedCount: 1,\n        };\n\n        this.handleOrgUnitClick = this.handleOrgUnitClick.bind(this);\n        this.dataSetsSelectRef = this.dataSetsSelectRef.bind(this);\n        this.dataSetsSelectClick = this.dataSetsSelectClick.bind(this);\n        this.generateMinMaxValueClick = this.generateMinMaxValueClick.bind(this);\n        this.removeMinMaxValueClick = this.removeMinMaxValueClick.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {};\n\n        Object.keys(nextProps).forEach((property) => {\n            if (nextProps.hasOwnProperty(property) && MinMaxValueGeneration.STATE_PROPERTIES.includes(property)) {\n                nextState[property] = nextProps[property];\n            }\n        });\n\n        if (nextState !== {}) {\n            this.setState(nextState);\n        }\n    }\n\n    isUserInteractionDisabled() {\n        return this.state.loading || this.state.dataSets == null || this.state.rootWithMembers === null;\n    }\n\n    isDataSetSelected() {\n        return this.state.dataSetsSelectedCount === 0;\n    }\n\n    loadData() {\n        const d2 = this.context.d2;\n        if (this.state.dataSets == null || this.state.rootWithMember == null) {\n            Promise.all([\n                d2.models.organisationUnits.list({\n                    paging: false,\n                    level: 1,\n                    fields: 'id,displayName,path,children::isNotEmpty,memberCount',\n                }),\n                d2.models.dataSet.list({\n                    paging: false,\n                    fields: 'id,displayName',\n                }),\n            ]).then(([organisationUnitsResponse, dataSetsResponse]) => {\n                if (this.isPageMounted()) {\n                    const organisationUnits = organisationUnitsResponse.toArray();\n                    const selected = organisationUnits.map(ou => ou.path);\n                    this.setState({\n                        rootWithMembers: organisationUnits[0],\n                        dataSets: dataSetsResponse.toArray(),\n                        selected,\n                    });\n                }\n            }).catch(() => {\n                if (this.isPageMounted()) {\n                    this.context.updateAppState({\n                        showSnackbar: true,\n                        snackbarConf: {\n                            type: ERROR,\n                            message: i18n.t(i18nKeys.minMaxValueGeneration.notPossibleToLoadMessage),\n                        },\n                        pageState: {\n                            ...this.state,\n                            loading: false,\n                        },\n                    });\n                }\n            });\n        }\n    }\n\n    dataSetsSelectRef(ref) {\n        this.dataSetsSelect = ref;\n    }\n\n    dataSetsSelectClick() {\n        this.setState({\n            dataSetsSelectedCount: this.dataSetsSelect.selectedOptions.length,\n        });\n    }\n\n    handleOrgUnitClick(event, orgUnit) {\n        if (!this.state.selected.includes(orgUnit.path)) {\n            this.setState({ selected: [orgUnit.path] });\n        }\n    }\n\n    generateMinMaxValueClick() {\n        if (this.dataSetsSelect.selectedOptions.length === 0 || this.state.selected.length === 0) {\n            this.context.updateAppState({\n                showSnackbar: true,\n                snackbarConf: {\n                    type: WARNING,\n                    message: i18n.t(i18nKeys.minMaxValueGeneration.warningMessage),\n                },\n                pageState: {\n                    ...this.state,\n                    loading: false,\n                },\n            });\n            return;\n        }\n\n        const api = this.context.d2.Api.getApi();\n        const selectedOrganisationUnitSplitted = this.state.selected[0].split('/');\n        const selectedOrganisationUnit = selectedOrganisationUnitSplitted[selectedOrganisationUnitSplitted.length - 1];\n        const dataSetIds = [];\n        for (let i = 0; i < this.dataSetsSelect.selectedOptions.length; i++) {\n            dataSetIds.push(this.dataSetsSelect.selectedOptions[i].value);\n        }\n\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: LOADING,\n                message: i18n.t(i18nKeys.minMaxValueGeneration.performingMessage),\n            },\n            pageState: {\n                ...this.state,\n                loading: true,\n            },\n        });\n\n        api.post(MIX_MAX_VALUE_ENDPOINT, {\n            organisationUnit: selectedOrganisationUnit,\n            dataSets: dataSetIds,\n        }).then(() => {\n            if (this.isPageMounted()) {\n                this.context.updateAppState({\n                    showSnackbar: true,\n                    snackbarConf: {\n                        type: SUCCESS,\n                        message: i18n.t(i18nKeys.minMaxValueGeneration.minMaxGenerationDone),\n                    },\n                    pageState: {\n                        ...this.state,\n                        loading: false,\n                    },\n                });\n            }\n        }).catch(() => {\n            if (this.isPageMounted()) {\n                this.context.updateAppState({\n                    showSnackbar: true,\n                    snackbarConf: {\n                        type: ERROR,\n                        message: i18n.t(i18nKeys.messages.unexpectedError),\n                    },\n                    pageState: {\n                        ...this.state,\n                        loading: false,\n                    },\n                });\n            }\n        });\n    }\n\n    removeMinMaxValueClick() {\n        if (this.dataSetsSelect.selectedOptions.length === 0 || this.state.selected.length === 0) {\n            this.context.updateAppState({\n                showSnackbar: true,\n                snackbarConf: {\n                    type: WARNING,\n                    message: i18n.t(i18nKeys.minMaxValueGeneration.warningMessage),\n                },\n                pageState: {\n                    ...this.state,\n                    loading: false,\n                },\n            });\n            return;\n        }\n\n        const api = this.context.d2.Api.getApi();\n        const selectedOrganisationUnitSplitted = this.state.selected[0].split('/');\n        const selectedOrgnisationUnit = selectedOrganisationUnitSplitted[selectedOrganisationUnitSplitted.length - 1];\n        const dataSetIds = [];\n        for (let i = 0; i < this.dataSetsSelect.selectedOptions.length; i++) {\n            dataSetIds.push(this.dataSetsSelect.selectedOptions[i].value);\n        }\n\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: LOADING,\n                message: i18n.t(i18nKeys.minMaxValueGeneration.removingMessage),\n            },\n            pageState: {\n                ...this.state,\n                loading: true,\n            },\n        });\n\n        api.delete(`${MIX_MAX_VALUE_ENDPOINT}/${selectedOrgnisationUnit}?ds=${dataSetIds}`).then(() => {\n            if (this.isPageMounted()) {\n                this.context.updateAppState({\n                    showSnackbar: true,\n                    snackbarConf: {\n                        type: SUCCESS,\n                        message: i18n.t(i18nKeys.minMaxValueGeneration.minMaxRemovalDone),\n                    },\n                    pageState: {\n                        ...this.state,\n                        loading: false,\n                    },\n                });\n            }\n        }).catch(() => {\n            if (this.isPageMounted()) {\n                this.context.updateAppState({\n                    showSnackbar: true,\n                    snackbarConf: {\n                        type: ERROR,\n                        message: i18n.t(i18nKeys.messages.unexpectedError),\n                    },\n                    pageState: {\n                        ...this.state,\n                        loading: false,\n                    },\n                });\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className={styles.header}>\n                    {i18n.t(i18nKeys.minMaxValueGeneration.title)}\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(this.props.sectionKey)}\n                    />\n                </h1>\n                <Card>\n                    <CardText>\n                        <div className={styles.container}>\n                            {this.state.dataSets ? (\n                                <div className={styles.left}>\n                                    <div className={styles.label}>\n                                        {i18n.t(i18nKeys.minMaxValueGeneration.dataSet)}\n                                    </div>\n                                    <select\n                                        multiple\n                                        onClick={this.dataSetsSelectClick}\n                                        disabled={this.isUserInteractionDisabled()}\n                                        className={styles.select}\n                                        ref={this.dataSetsSelectRef}\n                                    >\n                                        {this.state.dataSets.map(item => (\n                                            <option\n                                                key={item.id}\n                                                value={item.id}\n                                                className={styles.options}\n                                            >{item.displayName}</option>\n                                        ))}\n                                    </select>\n                                </div>) :\n                                (\n                                    <div className={styles.left}>\n                                        <span>{i18n.t(i18nKeys.minMaxValueGeneration.loadingDataSetsMessage)}</span>\n                                    </div>\n                                )\n                            }\n                            {this.state.rootWithMembers ? (\n                                <div className={styles.right}>\n                                    <div className={styles.label}>\n                                        {i18n.t(i18nKeys.minMaxValueGeneration.organisationUnitSelect)}\n                                    </div>\n                                    <div className={styles.tree}>\n                                        <OrgUnitTree\n                                            className={styles.tree}\n                                            hideMemberCount\n                                            root={this.state.rootWithMembers}\n                                            selected={this.state.selected}\n                                            initiallyExpanded={[`/${this.state.rootWithMembers.id}`]}\n                                            onSelectClick={this.handleOrgUnitClick}\n                                        />\n                                    </div>\n                                </div>) :\n                                (\n                                    <div className={styles.right}>\n                                        <span>{i18n.t(i18nKeys.minMaxValueGeneration.updatingTree)}</span>\n                                    </div>\n                                )}\n                        </div>\n                        <RaisedButton\n                            id={'generateMinMaxBtnId'}\n                            className={styles.actionButton}\n                            primary\n                            label={i18n.t(i18nKeys.minMaxValueGeneration.actionButton)}\n                            onClick={this.generateMinMaxValueClick}\n                            disabled={this.isUserInteractionDisabled() || this.isDataSetSelected()}\n                        />\n                        <FlatButton\n                            id={'removeMinMaxBtnId'}\n                            className={styles.actionButton}\n                            secondary\n                            label={i18n.t(i18nKeys.minMaxValueGeneration.removeButton)}\n                            onClick={this.removeMinMaxValueClick}\n                            disabled={this.isUserInteractionDisabled() || this.isDataSetSelected()}\n                        />\n                    </CardText>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default MinMaxValueGeneration;\n","import { i18nKeys } from '../../i18n';\n\n/* Constants */\nexport const ANALYTICS_TABLES_ENDPOINT = 'resourceTables/analytics';\nexport const PULL_INTERVAL = 5000;\nexport const ANALYTIC_TABLES_TASK_SUMMARY_ENDPOINT = 'system/tasks/ANALYTICS_TABLE';\n\nexport const DEFAULT_LAST_YEARS = -1;\nexport const LAST_YEARS_INPUT_KEY = 'lastYears';\n\nconst LAST_YEAR = 10;\nconst FIRST_YEAR = 1;\n\nconst lastYearValues = [{\n    key: DEFAULT_LAST_YEARS,\n    value: DEFAULT_LAST_YEARS,\n    displayName: i18nKeys.analytics.allLastYears,\n}];\n\n/* Last years dropdown options */\nfor (let i = FIRST_YEAR; i <= LAST_YEAR; i++) {\n    lastYearValues.push({\n        key: i,\n        value: i,\n        displayName: i,\n    });\n}\n\nexport const lastYearElements = lastYearValues;\n\n/* Form checkboxes */\nexport const analyticsCheckboxes = [\n    {\n        key: 'skipAggregate',\n        label: i18nKeys.analytics.skipAggregate,\n    },\n    {\n        key: 'skipResourceTables',\n        label: i18nKeys.analytics.skipResourceTables,\n    },\n    {\n        key: 'skipEvents',\n        label: i18nKeys.analytics.skipEvents,\n    },\n    {\n        key: 'skipEnrollment',\n        label: i18nKeys.analytics.skipEnrollment,\n    },\n];\n","import React from 'react';\n\n/* Material UI */\nimport {\n    Card,\n    CardText,\n    GridTile,\n    Checkbox,\n    SelectField,\n    MenuItem,\n    RaisedButton,\n} from 'material-ui';\nimport classNames from 'classnames';\n\n/* d2-ui */\nimport { ERROR, LOADING } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes';\n\n/* Components */\nimport Page from '../Page';\nimport NotificationsTable from '../../components/notifications-table/NotificationsTable';\nimport PageHelper from '../../components/page-helper/PageHelper';\n\n/* Helpers */\nimport { getDocsKeyForSection } from '../sections.conf';\nimport {\n    PULL_INTERVAL,\n    ANALYTICS_TABLES_ENDPOINT,\n    ANALYTIC_TABLES_TASK_SUMMARY_ENDPOINT,\n    DEFAULT_LAST_YEARS,\n    LAST_YEARS_INPUT_KEY,\n    analyticsCheckboxes,\n    lastYearElements,\n} from '../analytics/analytics.conf';\n\n// i18n\nimport i18n from '../../locales';\nimport { i18nKeys } from '../../i18n';\n\n/* styles */\nimport styles from '../Page.css';\n\nclass Analytics extends Page {\n    static STATE_PROPERTIES = [\n        'checkboxes',\n        'loading',\n        'lastYears',\n        'notifications',\n        'jobId',\n        'intervalId',\n    ];\n\n    constructor() {\n        super();\n\n        const checkboxes = {};\n        for (let i = 0; i < analyticsCheckboxes.length; i++) {\n            const checkbox = analyticsCheckboxes[i];\n            checkboxes[checkbox.key] = { checked: false };\n        }\n\n        this.state = {\n            checkboxes,\n            loading: false,\n            lastYears: DEFAULT_LAST_YEARS,\n            notifications: [],\n            jobId: null,\n            intervalId: null,\n        };\n\n        this.initAnalyticsTablesGeneration = this.initAnalyticsTablesGeneration.bind(this);\n        this.onChangeLastYears = this.onChangeLastYears.bind(this);\n    }\n\n    componentDidMount() {\n        this.requestTaskSummary();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {};\n\n        Object.keys(nextProps).forEach((property) => {\n            if (nextProps.hasOwnProperty(property) && Analytics.STATE_PROPERTIES.includes(property)) {\n                nextState[property] = nextProps[property];\n            }\n        });\n\n        if (nextState !== {}) {\n            this.setState(nextState);\n        }\n    }\n\n    componentWillUnmount() {\n        super.componentWillUnmount();\n\n        this.cancelPoollingRequests();\n    }\n\n    cancelPoollingRequests() {\n        clearInterval(this.state.intervalId);\n    }\n\n    setLoadingPageState() {\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: LOADING,\n            },\n            pageState: {\n                loading: true,\n                notifications: [],\n            },\n        });\n    }\n\n    setLoadedPageWithErrorState(error) {\n        const messageError = error && error.message ?\n            error.message :\n            i18n.t(i18nKeys.analytics.unexpectedError);\n        this.cancelPoollingRequests();\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: ERROR,\n                message: messageError,\n            },\n            pageState: {\n                loading: false,\n            },\n        });\n    }\n\n    areActionsDisabled() {\n        return this.state.loading;\n    }\n\n    buildFormData() {\n        let formData = null;\n        const checkboxKeys = Object.keys(this.state.checkboxes);\n        for (let i = 0; i < checkboxKeys.length; i++) {\n            const key = checkboxKeys[i];\n            const checked = this.state.checkboxes[key].checked;\n            formData = formData || new FormData();\n            formData.append(key, checked);\n        }\n\n        if (this.state.lastYears !== DEFAULT_LAST_YEARS) {\n            formData.append(LAST_YEARS_INPUT_KEY, this.state.lastYears);\n        }\n\n        return formData;\n    }\n\n    isAnalyzingTables = () => this.state.jobId && this.state.intervalId;\n\n    startsPooling = () => setInterval(() => {\n        this.requestTaskSummary();\n    }, PULL_INTERVAL);\n\n    isJobInProgress = jobNotifications => jobNotifications.every(notification => !notification.completed);\n\n    initAnalyticsTablesGeneration() {\n        const api = this.context.d2.Api.getApi();\n        const formData = this.buildFormData();\n\n        this.setLoadingPageState();\n        api.post(ANALYTICS_TABLES_ENDPOINT, formData).then((response) => {\n            if (this.isPageMounted() && response) {\n                const jobId = response.response.id;\n                const intervalId = this.startsPooling();\n\n                this.setState({\n                    jobId,\n                    intervalId,\n                });\n            }\n        }).catch((e) => {\n            if (this.isPageMounted()) {\n                this.setLoadedPageWithErrorState(e);\n            }\n        });\n    }\n\n    updateStateForInProgressJobAccordingTaskSummaryResponse = (taskSummaryResponse) => {\n        const notifications = taskSummaryResponse[this.state.jobId] || [];\n        const completed = !this.isJobInProgress(notifications);\n\n        if (completed) {\n            this.cancelPoollingRequests();\n        }\n\n        this.context.updateAppState({\n            showSnackbar: !completed,\n            pageState: {\n                notifications,\n                loading: !completed,\n            },\n        });\n    };\n\n    verifyInProgressJobsForTaskSummaryResponseAndUpdateState = (taskSummaryResponse) => {\n        const jobIds = taskSummaryResponse ? Object.keys(taskSummaryResponse) : [];\n\n        // looking for the most recent in progress job\n        for (let i = jobIds.length - 1; i >= 0; i--) {\n            const jobId = jobIds[i];\n            const notifications = taskSummaryResponse[jobId] || [];\n\n            // found in progress job: show current notifications and starts pooling\n            if (this.isJobInProgress(notifications)) {\n                const intervalId = this.startsPooling();\n\n                this.context.updateAppState({\n                    showSnackbar: true,\n                    snackbarConf: {\n                        type: LOADING,\n                    },\n                    pageState: {\n                        notifications,\n                        loading: true,\n                        jobId,\n                        intervalId,\n                    },\n                });\n\n                break;\n            }\n        }\n    };\n\n    requestTaskSummary() {\n        const api = this.context.d2.Api.getApi();\n        const lastId = this.state.notifications && this.state.notifications.length > 0\n            ? this.state.notifications[0].uid : null;\n        const url = lastId ?\n            `${ANALYTIC_TABLES_TASK_SUMMARY_ENDPOINT}?lastId=${lastId}` : `${ANALYTIC_TABLES_TASK_SUMMARY_ENDPOINT}`;\n        api.get(url).then((taskSummaryResponse) => {\n            /* not mounted finishes */\n            if (!this.isPageMounted()) {\n                return;\n            }\n\n            // showing current job\n            if (this.isAnalyzingTables()) {\n                this.updateStateForInProgressJobAccordingTaskSummaryResponse(taskSummaryResponse);\n            // so far no jobs is being processed, lets check if server is has any in progress job\n            } else {\n                this.verifyInProgressJobsForTaskSummaryResponseAndUpdateState(taskSummaryResponse);\n            }\n        }).catch((e) => {\n            if (this.isPageMounted()) {\n                this.setLoadedPageWithErrorState(e);\n            }\n        });\n    }\n\n    onChangeLastYears(event, index, value) {\n        this.setState({\n            lastYears: value,\n        });\n    }\n\n    toggleCheckbox = (initialCheckboxes, key) => () => {\n        const checkboxes = Object.assign({}, initialCheckboxes);\n        const checkboxState = checkboxes[key].checked;\n        checkboxes[key].checked = !checkboxState;\n        this.setState({ checkboxes });\n    }\n\n    renderCheckbox = checkbox => (\n        <GridTile\n            key={checkbox.key}\n            className={classNames('col-xs-12 col-md-6', styles.formControl)}\n        >\n            <Checkbox\n                label={i18n.t(checkbox.label)}\n                checked={this.state.checkboxes[checkbox.key].checked}\n                onCheck={this.toggleCheckbox(this.state.checkboxes, checkbox.key)}\n                labelStyle={{ color: '#000000' }}\n                iconStyle={{ fill: '#000000' }}\n                disabled={this.areActionsDisabled()}\n            />\n        </GridTile>\n    );\n\n    render() {\n        const gridElements = analyticsCheckboxes.map(this.renderCheckbox);\n        return (\n            <div>\n                <h1>\n                    { i18n.t(i18nKeys.analytics.title) }\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(this.props.sectionKey)}\n                    />\n                </h1>\n                <Card className={styles.cardContainer}>\n                    <CardText>\n                        <h4 className={styles.uppercase}>{i18nKeys.analytics.analyticsTablesUpdateHeader}</h4>\n                        <div className={classNames(styles.gridContainer, 'row')}>\n                            {gridElements}\n                            <SelectField\n                                disabled={this.areActionsDisabled()}\n                                className=\"col-xs-12 col-md-6\"\n                                floatingLabelText={\n                                    i18n.t(i18nKeys.analytics.lastYearsLabel)\n                                }\n                                onChange={this.onChangeLastYears}\n                                value={this.state.lastYears}\n                                fullWidth\n                            >\n                                {lastYearElements.map(item => (\n                                    <MenuItem\n                                        key={item.key}\n                                        value={item.value}\n                                        primaryText={i18n.t(item.displayName)}\n                                    />\n                                ))}\n                            </SelectField>\n                        </div>\n                        <RaisedButton\n                            id={'startExportBtnId'}\n                            primary\n                            label={i18n.t(i18nKeys.analytics.actionButton)}\n                            onClick={this.initAnalyticsTablesGeneration}\n                            disabled={this.areActionsDisabled()}\n                        />\n                    </CardText>\n                </Card>\n                {this.state.notifications.length > 0 &&\n                    <Card className={styles.cardContainer}>\n                        <CardText>\n                            <NotificationsTable notifications={this.state.notifications} />\n                        </CardText>\n                    </Card>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Analytics;\n","// Components\nimport DataIntegrity from './data-integrity/DataIntegrity';\nimport Maintenance from './maintenance/Maintenance';\nimport ResourceTables from './resource-tables/ResourceTables';\nimport DataStatistics from './data-statistics/DataStatistics';\nimport LockException from './lock-exception/LockException';\nimport MinMaxValueGeneration from './min-max-value-generation/MinMaxValueGeneration';\nimport Analytics from './analytics/Analytics';\n\n// i18n\nimport { i18nKeys } from '../i18n';\n\nexport const DATA_INTEGRITY_SECTION_KEY = 'dataIntegrity';\nexport const MAINTENANCE_SECTION_KEY = 'maintenance';\nexport const RESOURCE_TABLES_SECTION_KEY = 'resourceTables';\nexport const DATA_STATISTICS_SECTION_KEY = 'statistics';\nexport const LOCK_EXCEPTION_SECTION_KEY = 'lock';\nexport const MIN_MAX_VALUE_GENERATION_SECTION_KEY = 'minMax';\nexport const ANALYTICS_SECTION_KEY = 'analytics';\n\nexport const sections = [\n    {\n        key: DATA_INTEGRITY_SECTION_KEY,\n        path: '/data-integrity',\n        component: DataIntegrity,\n        info: {\n            label: i18nKeys.dataIntegrity.label,\n            icon: 'link',\n            description: i18nKeys.dataIntegrity.description,\n            actionText: i18nKeys.dataIntegrity.actionText,\n            docs: 'dataAdmin_dataIntegrity',\n        },\n    },\n    {\n        key: MAINTENANCE_SECTION_KEY,\n        path: '/maintenance',\n        component: Maintenance,\n        info: {\n            label: i18nKeys.maintenance.label,\n            icon: 'settings',\n            description: i18nKeys.maintenance.description,\n            actionText: i18nKeys.maintenance.actionText,\n            docs: 'data_admin_maintenance',\n        },\n    },\n    {\n        key: RESOURCE_TABLES_SECTION_KEY,\n        path: '/resourceTables',\n        component: ResourceTables,\n        info: {\n            label: i18nKeys.resourceTables.label,\n            icon: 'view_list',\n            description: i18nKeys.resourceTables.description,\n            actionText: i18nKeys.resourceTables.actionText,\n            docs: 'dataAdmin_resourceTables',\n        },\n    },\n    {\n        key: ANALYTICS_SECTION_KEY,\n        path: '/analytics',\n        component: Analytics,\n        info: {\n            label: i18nKeys.analytics.label,\n            icon: 'multiline_chart',\n            description: i18nKeys.analytics.description,\n            actionText: i18nKeys.analytics.actionText,\n            docs: 'generate_analytics_tables',\n        },\n    },\n    {\n        key: DATA_STATISTICS_SECTION_KEY,\n        path: '/data-statistics',\n        component: DataStatistics,\n        info: {\n            label: i18nKeys.dataStatistics.label,\n            icon: 'timeline',\n            description: i18nKeys.dataStatistics.description,\n            actionText: i18nKeys.dataStatistics.actionText,\n            docs: 'dataAdmin_dataStatistics',\n        },\n    },\n    {\n        key: LOCK_EXCEPTION_SECTION_KEY,\n        path: '/lock-exception',\n        component: LockException,\n        info: {\n            label: i18nKeys.lockException.label,\n            icon: 'lock',\n            description: i18nKeys.lockException.description,\n            actionText: i18nKeys.lockException.actionText,\n            docs: 'dataAdmin_lockException',\n        },\n    },\n    {\n        key: MIN_MAX_VALUE_GENERATION_SECTION_KEY,\n        path: '/min-max-value-generation',\n        component: MinMaxValueGeneration,\n        info: {\n            label: i18nKeys.minMaxValueGeneration.label,\n            icon: 'compare_arrows',\n            description: i18nKeys.minMaxValueGeneration.description,\n            actionText: i18nKeys.minMaxValueGeneration.actionText,\n            docs: 'dataAdmin_minMaxValueGeneration',\n        },\n    },\n];\n\nexport const getDocsKeyForSection = (sectionKey) => {\n    for (let i = 0; i < sections.length; i++) {\n        const section = sections[i];\n        if (section.key === sectionKey) {\n            return section.info.docs;\n        }\n    }\n\n    return '';\n};\n","import React from 'react';\n\nimport classNames from 'classnames';\n\n// Components\nimport GridSection from './grid-section/GridSection';\n\nimport styles from './Home.css';\n\n// App configs\nimport { sections } from '../sections.conf';\n\nconst Home = () => {\n    const gridElements = sections.map(section => (\n        <div key={section.key} className={classNames('col-sm-12 col-md-6 col-lg-4', styles.gridContainer)}>\n            <GridSection key={section.key} section={section} />\n        </div>\n    ));\n\n    return (\n        <div id=\"grid-list-id\" className=\"row\">\n            {gridElements}\n        </div>\n    );\n};\n\nexport default Home;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass NoMatch extends PureComponent {\n  static propTypes = {\n      location: PropTypes.object.isRequired,\n  }\n\n  render() {\n      return (\n          <div>\n              <h3>No match for <code>{this.props.location.pathname}</code></h3>\n          </div>\n      );\n  }\n}\n\nexport default NoMatch;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Switch } from 'react-router-dom';\n\nimport Home from '../../pages/home/Home';\nimport NoMatch from './NoMatch';\n\n// App configs\nimport { sections } from '../../pages/sections.conf';\n\nconst AppRouter = ({ pageState }) => {\n    const routes = sections.map((section) => {\n        const routeRender = () => {\n            const Page = section.component;\n            return (\n                <Page\n                    sectionKey={section.key}\n                    {...pageState}\n                />\n            );\n        };\n        return (\n            <Route\n                key={section.key}\n                exact\n                path={section.path}\n                render={routeRender}\n            />\n        );\n    });\n\n    /* Home route */\n    const homeRouteRender = () => (\n        <Home sectionKey=\"home\" />\n    );\n\n    routes.push(<Route key=\"home\" exact path=\"/\" render={homeRouteRender} />);\n\n    /* No Match Route */\n    routes.push(<Route key=\"no-match-route\" component={NoMatch} />);\n\n    return (\n        <main>\n            <Switch>\n                {routes}\n            </Switch>\n        </main>\n    );\n};\n\nAppRouter.propTypes = {\n    pageState: PropTypes.object,\n};\n\nAppRouter.defaultProps = {\n    pageState: {},\n};\n\nexport default AppRouter;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport HeaderBar from '@dhis2/d2-ui-header-bar';\nimport Sidebar from 'd2-ui/lib/sidebar/Sidebar.component';\nimport FeedbackSnackbar from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbar.component';\nimport { LOADING } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes';\nimport CircularProgress from 'd2-ui/lib/circular-progress/CircularProgress';\n\n/* i18n */\nimport i18n from './locales';\nimport { injectTranslationsToD2 } from './configI18n';\n\nimport './custom-css/D2UISidebarOverrides.css';\n\nimport AppRouter from './components/app-router/AppRouter';\n\nimport styles from './App.css';\n\n// App configs\nimport { sections } from './pages/sections.conf';\n\nclass App extends PureComponent {\n    static childContextTypes = {\n        showSnackbar: PropTypes.bool,\n        snackbarConf: PropTypes.shape({\n            type: PropTypes.string,\n            message: PropTypes.string,\n            duration: PropTypes.number,\n        }),\n        currentSection: PropTypes.string,\n        updateAppState: PropTypes.func,\n    };\n\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    constructor(props, context) {\n        super(props);\n\n        injectTranslationsToD2(context.d2);\n\n        this.state = {\n            currentSection: '',\n            showSnackbar: false,\n            snackbarConf: {\n                type: '',\n                message: '',\n            },\n        };\n\n        this.updateAppState = this.updateAppState.bind(this);\n    }\n\n    getChildContext() {\n        return {\n            showSnackbar: this.state.showSnackbar,\n            snackbarConf: this.state.snackbarConf,\n            currentSection: this.state.currentSection,\n            updateAppState: this.updateAppState,\n        };\n    }\n\n    updateAppState(appState) {\n        if (appState.currentSection\n            && !appState.pageState\n            && this.state.currentSection !== appState.currentSection) {\n            // clear page state because we are updating page\n            this.setState({ ...appState, pageState: undefined, showSnackbar: false });\n        } else {\n            this.setState(appState);\n        }\n    }\n\n    showLoadingProgress() {\n        // FIXME: remove loading snackbar info and replace with loading state\n        return this.state.snackbarConf.type === LOADING && this.state.showSnackbar;\n    }\n\n    render() {\n        const nonOnChangeSection = () => null;\n        const translatedSections = sections.map(section => Object.assign(\n            section,\n            {\n                icon: section.info.icon,\n                label: i18n.t(section.info.label),\n                containerElement: <Link to={section.path} />,\n            },\n        ));\n\n        const feedbackElement = this.showLoadingProgress() ?\n            (\n                <div id={'circularLoadingId'} className={styles.centered}>\n                    <CircularProgress />\n                </div>\n            ) : (\n                <span id={'feedbackSnackbarId'}>\n                    <FeedbackSnackbar\n                        show={this.state.showSnackbar}\n                        conf={this.state.snackbarConf}\n                    />\n                </span>\n            );\n\n        return (\n            <div>\n                <HeaderBar d2={this.context.d2} />\n                <Sidebar\n                    sections={translatedSections}\n                    currentSection={this.state.currentSection}\n                    onChangeSection={nonOnChangeSection}\n                />\n                <div className={styles.contentWrapper}>\n                    <div className={styles.contentArea}>\n                        <AppRouter\n                            pageState={this.state.pageState}\n                        />\n                    </div>\n                </div>\n                {feedbackElement}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import Spacing from 'material-ui/styles/spacing';\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\n\nimport {\n    blue100,\n    blue700,\n    grey100,\n    grey400,\n    orange500,\n    orangeA200,\n    darkBlack,\n    white,\n} from 'material-ui/styles/colors';\nimport { fade } from 'material-ui/utils/colorManipulator';\n\nconst theme = {\n    spacing: Spacing,\n    fontFamily: 'Roboto, sans-serif',\n    palette: {\n        primary1Color: '#004ba0',\n        primary2Color: blue700,\n        primary3Color: blue100,\n        accent1Color: orange500,\n        accent2Color: grey100,\n        accent3Color: orangeA200,\n        textColor: darkBlack,\n        alternateTextColor: white,\n        canvasColor: white,\n        borderColor: grey400,\n        disabledColor: fade(darkBlack, 0.3),\n    },\n};\n\nconst muiTheme = getMuiTheme(theme);\n\nexport default muiTheme;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\n/* eslint-disable */\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl);\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the old content will have been purged and\n                            // the fresh content will have been added to the cache.\n                            // It's the perfect time to display a \"New content is\n                            // available; please refresh.\" message in your web app.\n                            console.log('New content is available; please refresh.');\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.',\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","// React\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, withRouter } from 'react-router-dom';\n\n// D2\nimport { getManifest, getUserSettings } from 'd2/lib/d2';\nimport D2UIApp from 'd2-ui/lib/app/D2UIApp';\n\n// logging\nimport log from 'loglevel';\n\n/* i18n */\nimport { configI18n } from './configI18n';\n\nimport './index.css';\nimport App from './App';\nimport appTheme from './theme';\n\nimport registerServiceWorker from './registerServiceWorker';\n\nconst AppComponent = withRouter(App);\n\nlog.setLevel(process.env.NODE_ENV === 'production' ? log.levels.INFO : log.levels.DEBUG);\n\nconst configurations = (userSettings) => {\n    const uiLocale = userSettings.keyUiLocale;\n    sessionStorage.setItem('uiLocale', uiLocale || 'en');\n\n    configI18n(userSettings);\n};\n\n// init d2\ngetManifest('manifest.webapp').then((manifest) => {\n    const api = process.env.REACT_APP_DHIS2_API_VERSION ? `/${process.env.REACT_APP_DHIS2_API_VERSION}` : '/';\n    const baseUrl =\n        process.env.NODE_ENV === 'production'\n            ? `${manifest.getBaseUrl()}/api/${manifest.dhis2.apiVersion}`\n            : `${process.env.REACT_APP_DHIS2_BASE_URL}/api${api}`;\n\n    ReactDOM.render(\n        <D2UIApp\n            muiTheme={appTheme}\n            initConfig={{\n                baseUrl,\n                schemas: [\n                    'organisationUnitLevel',\n                    'organisationUnitGroup',\n                    'organisationUnit',\n                    'dataSet',\n                ],\n            }}\n        >\n            <HashRouter>\n                <AppComponent />\n            </HashRouter>\n        </D2UIApp>,\n        document.getElementById('app'),\n    );\n}).then(getUserSettings).then(configurations);\n\nregisterServiceWorker();\n"],"sourceRoot":""}