{"version":3,"sources":["pages/home/grid-section/GridSection.module.css","pages/lock-exception/AddLockExceptionForm.module.css","locales/index.js","i18n.js","configI18n.js","pages/home/grid-section/GridSection.js","pages/data-integrity/data.integrity.conf.js","pages/Page.js","pages/data-integrity/data-integrity-card/DataIntegrityCard.js","helpers/docs.js","components/page-helper/PageHelper.js","pages/data-integrity/DataIntegrity.js","pages/maintenance/maintenance.conf.js","pages/maintenance/Maintenance.js","components/notifications-table/notifications-table.conf.js","components/notifications-table/NotificationsTable.js","pages/resource-tables/resource-tables.conf.js","pages/resource-tables/ResourceTables.js","components/formatters/FormattedNumber.js","pages/data-statistics/DataStatisticsTable.js","pages/data-statistics/DataStatistics.js","pages/lock-exception/AddLockExceptionForm.js","helpers/pagination.js","pages/lock-exception/LockException.js","pages/min-max-value-generation/MinMaxValueGeneration.js","pages/analytics/analytics.conf.js","pages/analytics/Analytics.js","pages/sections.conf.js","pages/home/Home.js","components/app-router/NoMatch.js","components/app-router/AppRouter.js","App.js","theme.js","serviceWorker.js","index.js","pages/data-statistics/DataStatistics.module.css","App.module.css","pages/lock-exception/LockException.module.css","pages/min-max-value-generation/MinMaxValueGeneration.module.css","pages/resource-tables/ResourceTables.module.css","pages/data-integrity/data-integrity-card/DataIntegrityCard.module.css","pages/data-integrity/DataIntegrity.module.css","pages/home/Home.module.css","pages/Page.module.css"],"names":["module","exports","gridElement","gridTitleBar","gridTitleDescription","gridIcon","gridDescription","gridActionText","selectsContainer","organisationUnitTreeContainer","left","right","ouLabel","organisationUnitTreeCard","namespace","moment","locale","i18n","addResources","arTranslations","enTranslations","esTranslations","frTranslations","prsTranslations","psTranslations","ptTranslations","ruTranslations","tgTranslations","ukTranslations","viTranslations","setDefaultNamespace","changeLanguage","i18nKeys","dataIntegrity","title","label","description","actionText","performing","unexpectedError","actionButton","dataElementsWithoutDataSet","dataElementsWithoutGroups","dataElementsViolatingExclusiveGroupSets","dataElementsAssignedToDataSetsWithDifferentPeriodTypes","dataSetsNotAssignedToOrganisationUnits","indicatorsWithIdenticalFormulas","indicatorsWithoutGroups","invalidIndicatorNumerators","invalidIndicatorDenominators","indicatorsViolatingExclusiveGroupSets","organisationUnitsWithCyclicReferences","orphanedOrganisationUnits","organisationUnitsWithoutGroups","organisationUnitsViolatingExclusiveGroupSets","organisationUnitGroupsWithoutGroupSets","validationRulesWithoutGroups","invalidValidationRuleLeftSideExpressions","invalidValidationRuleRightSideExpressions","invalidProgramIndicatorExpressions","invalidProgramIndicatorFilters","dataElementsInDataSetNotInForm","invalidCategoryCombos","duplicatePeriods","programRulesWithNoCondition","programRulesWithNoAction","programRulesWithNoPriority","programRuleVariablesWithNoDataElement","programRuleVariablesWithNoAttribute","programRuleActionsWithNoDataObject","programRuleActionsWithNoNotification","programRuleActionsWithNoSectionId","programRuleActionsWithNoStageId","maintenance","actionPerformed","analyticsTableClear","analyticsTableAnalyze","zeroDataValueRemoval","softDeletedDataValueRemoval","softDeletedEventRemoval","softDeletedEnrollmentRemoval","softDeletedTrackedEntityInstanceRemoval","periodPruning","expiredInvitationsClear","sqlViewsDrop","sqlViewsCreate","categoryOptionComboUpdate","ouPathsUpdate","cacheClear","appReload","resourceTables","organisationUnitStructure","organistionUnitCategoryOptionCombo","categoryOptionGroupSetStructure","dataElementGroupSetStructure","indicatorGroupSetStructure","organisationUnitGroupSetStructure","categoryStructure","dataElementCategoryOptionComboName","dataElementStructure","periodStructure","dataPeriodStructure","dataElementCategoryOptionCombinations","dataStatistics","loadingMessage","errorMessage","noDataMessage","objectType","lastHour","today","last","days","usersLoggedIn","userAccountInvitations","pedingInvitations","expiredInvitations","dataValues","events","objects","indicator","period","programStageInstance","organisationUnit","validationRule","dataValue","program","dataElement","organisationUnitGroup","reportTable","indicatorType","dataSet","userGroup","user","map","indicatorGroup","chart","dataElementGroup","dashboard","lockException","batchDeletionHeader","batchDeletionSubHeader","addLockExceptionFormTitle","cancelButton","addButton","addingMessage","removedMessage","addedMessage","confirmDeleteMessage","confirmButton","selectADataSet","updatingTree","organisationUnitsWithin","organisationUnitLevel","select","deselect","selectAll","deselectAll","name","show","remove","actions","ofPage","week","month","year","biMonth","day","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","janFeb","marApr","mayJun","julAug","sepOct","novDec","quarter","Q1","Q2","Q3","Q4","sixMonth","janJun","julDec","aprSep","octMar","selectOrganisationUnits","minMaxValueGeneration","notPossibleToLoadMessage","warningMessage","performingMessage","removingMessage","minMaxGenerationDone","minMaxRemovalDone","loadingDataSetsMessage","organisationUnitSelect","removeButton","analytics","skipAggregate","skipResourceTables","skipEvents","skipEnrollment","analyticsTablesUpdateHeader","lastYearsLabel","allLastYears","messages","d2UiComponents","settings","app_search_placeholder","profile","account","help","log_out","about_dhis2","manage_my_apps","no_results_found","interpretations","configI18n","userSettings","lang","keyUiLocale","code","langs","prefixed","c","concat","includes","filter","startsWith","length","isLangRTL","document","body","setAttribute","injectTranslationsToD2","d2","translations","translationKeys","Object","keys","i","key","t","assign","GridSection","react_default","a","createElement","react_router_dom","to","this","props","section","path","GridList","className","classNames","styles","info","FontIcon_default","icon","PureComponent","PAGE_TITLE","dataIntegrityControls","text","Page","pageMounted","context","currentSection","sectionKey","updateAppState","Component","contextTypes","PropTypes","object","loading","bool","string","func","jsStyles","errorColor","noErrorColor","titleStyle","fontSize","fontWeight","iconStyle","color","cursor","noPaddingTop","paddingTop","DataIntegrityCard","_this","expandable","titleColor","closeIcon","openIcon","cardText","Array","isArray","content","Card","style","id","element","join","closeFontIcon","index_es","openFontIcon","cardId","card","actAsExpander","showExpandableButton","defaultProps","getDocsVersion","_ref","major","minor","snapshot","PageHelper","_this$props","lng","sectionDocsKey","href","system","version","target","rel","tooltip","tooltipPosition","iconClassName","DataIntegrity","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","cards","intervalId","loaded","initDataIntegrityCheck","bind","assertThisInitialized","nextProps","nextState","forEach","property","hasOwnProperty","STATE_PROPERTIES","setState","get","prototype","cancelPullingRequests","clearInterval","showSnackbar","snackbarConf","type","LOADING","message","pageState","error","messageError","ERROR","_this2","api","Api","getApi","setLoadingPageState","post","then","response","isPageMounted","jobId","setInterval","requestTaskSummary","catch","e","setLoadedPageWithErrorState","_this3","url","_this4","runButton","onClick","primary","disabled","cardsToShow","errorElementskeys","data_integrity_card_DataIntegrityCard","conf","find","control","noErrors","indexOf","resultNoErrorElement","push","header","page_helper_PageHelper","getDocsKeyForSection","maintenanceCheckboxes","Maintenance","checkboxes","checked","performMaintenance","selectedCheckboxes","checkboxKeys","formData","FormData","append","buildFormData","SUCCESS","gridElements","checkbox","checkboxState","formControl","Checkbox_default","onCheck","labelStyle","fill","areActionsDisabled","gridContainer","RaisedButton_default","selectedCheckboxesCount","notificationsTableStyles","rowStyle","height","evenRowStyle","backgroundColor","timeColumnStyle","width","messageColumnStyle","successStyle","iconColor","errorStyle","infoStyle","notificationStyles","row","notificationStylesInfo","NotificationsTable","notifications","selectable","displayRowCheckbox","notification","index","displayBorder","level","dateFromServer","time","slice","notificationIconInfo","completed","renderNotificationIcon","PULL_INTERVAL","ResourceTable","isAnalyzingTables","startsPooling","isJobInProgress","jobNotifications","every","updateStateForInProgressJobAccordingTaskSummaryResponse","taskSummaryResponse","cancelPoollingRequests","verifyInProgressJobsForTaskSummaryResponseAndUpdateState","jobIds","initResourceTablesGeneration","lastId","uid","pageStyles","cardContainer","tableName","notifications_table_NotificationsTable","FormattedNumber","Intl","NumberFormat","sessionStorage","getItem","format","value","DataStatisticsTable","rows","elements","Table","formatters_FormattedNumber","count","statisticsTable","displaySelectAll","adjustForCheckbox","enableSelectAll","stripedRows","TableCard","data_statistics_DataStatisticsTable","DataStatistics","hasTables","tables","constructor","objectCountsTableObjectToShowFromServerResponse","activeUsersTableObjectToShowFromServerResponse","userInvitationsTableObjectToShowFromServerResponse","dataValueCountsTableObjectToShowFromServerResponse","eventCountsTableObjectToShowFromServerResponse","noContent","display","DataStatistics_TableCard","objectCountsResponse","objectCountsKeys","objectCountsTable","translatedTimeLabelFromIntProperty","intProperty","lastLabel","daysLabel","activeUsersResponse","activeUsersKeys","activeUsersTable","parseInt","userInvitationsResponse","userInvitationsTable","dataValueCountsResponse","dataValueCountsKeys","dataValueCountsTable","eventCountsResponse","eventCountsKeys","eventCountsTable","d2UiSelectStyleOverride","minWidth","marginRight","AddLockExceptionForm","selected","orgUnitPaths","onDataSetChange","onPeriodChange","handleSelectionUpdate","handleOrgUnitClick","changeRoot","dataSetId","updateSeletedDataSetId","rootWithMembers","Promise","all","models","organisationUnits","list","paging","fields","memberCollection","memberObject","dataSets","_ref2","slicedToArray","rootWithDataSetMembers","dataSetMembers","toArray","ou","objectSpread","periodId","updateSelectedPeriodId","newSelection","updateSelectedOrgUnits","event","orgUnit","splice","currentRoot","dataSetItems","displayName","periodType","dataSetSelectLabel","dataSetSelectValue","SelectField","items","onChange","PeriodPicker_component","onPickPeriod","Card_Card_default","CardText_default","OrgUnitTree_component","root","initiallyExpanded","onSelectClick","onChangeCurrentRoot","orgUnitsPathsToInclude","OrgUnitSelectByLevel_component","levels","onUpdateSelection","OrgUnitSelectByGroup_component","groups","OrgUnitSelectAll_component","calculatePageValue","pager","pageSize","total","pageCount","pageCalculationValue","page","endItem","dialog","maxWidth","position","bottom","LockException","lockExceptions","showAddDialogOpen","selectedLockException","selectedOrgUnits","selectedDataSetId","selectedPeriodId","initialPager","atBatchDeletionPage","removeLockException","showLockExceptionFormDialog","closeLockExceptionFormDialog","addLockException","backToLockExceptions","goToBatchDeletionPage","onNextPageClick","onPreviousPageClick","data_set","organisation_unit","organisation_unit_group","organisation_unit_level","select_all","deselect_all","of_page","jan-feb","mar-apr","may-jun","jul-aug","sep-oct","nov-dec","jan-jun","jul-dec","apr-sep","oct-mar","lockExceptionResponse","le","organisationUnitId","headerContainer","IconButton_default","backArrowIcon","headerDivider","subHeader","loadLockExceptionsForPager","userAction","deleteInProgress","addInProgress","loadedState","prepareLockExceptionsResponseToDataTable","loadLockExceptionCombinations","_this5","ACTION_MESSAGE","action","onActionClick","deleteUrl","delete","newPageState","existingLockException","_this6","order","_this7","addLockExceptionEnabled","orgUnitIds","orgUnitPath","orgUnitPathSplitted","split","_this8","currentlyShown","paginationProps","hasNextPage","hasPreviousPage","FlatButton_default","Boolean","lockExceptionsTable","pagination","Pagination_component","DataTable_component","columns","dataTableColumns","contextMenuActions","contextMenuIcons","marginForAddButton","Dialog_default","modal","open","contentStyle","onRequestClose","lock_exception_AddLockExceptionForm","FloatingActionButton_default","add_default","MinMaxValueGeneration","rootWithMember","dataSetsSelectedCount","dataSetsSelectRef","dataSetsSelectClick","generateMinMaxValueClick","removeMinMaxValueClick","loadData","organisationUnitsResponse","dataSetsResponse","ref","dataSetsSelect","selectedOptions","selectedOrganisationUnitSplitted","selectedOrganisationUnit","dataSetIds","WARNING","selectedOrgnisationUnit","container","multiple","isUserInteractionDisabled","item","options","tree","hideMemberCount","isDataSetSelected","secondary","DEFAULT_LAST_YEARS","lastYearValues","lastYearElements","analyticsCheckboxes","Analytics","toggleCheckbox","initialCheckboxes","renderCheckbox","lastYears","initAnalyticsTablesGeneration","onChangeLastYears","uppercase","floatingLabelText","fullWidth","primaryText","sections","component","docs","ResourceTables","Home","grid_section_GridSection","NoMatch","location","pathname","AppRouter","routes","react_router","exact","render","home_Home","DumbApp","_PureComponent","inherits","createClass","appState","undefined","translatedSections","containerElement","feedbackElement","showLoadingProgress","centered","CircularProgress","FeedbackSnackbar_component","build_es","Sidebar_component","onChangeSection","contentWrapper","contentArea","app_router_AppRouter","childContextTypes","shape","duration","number","withRouter","theme","spacing","Spacing","fontFamily","palette","primary1Color","primary2Color","blue700","primary3Color","blue100","accent1Color","orange500","accent2Color","grey100","accent3Color","orangeA200","textColor","darkBlack","alternateTextColor","white","canvasColor","borderColor","grey400","disabledColor","fade","muiTheme","getMuiTheme","isLocalhost","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","process","NODE_ENV","REACT_APP_DHIS2_BASE_URL","isProduction","setLevel","INFO","DEBUG","ReactDOM","D2UIApp","appTheme","initConfig","baseUrl","schemas","App","getElementById","getUserSettings","setItem","URL","origin","addEventListener","fetch","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker","maxWith","leftBar","lockExceptionsTableHeader","lockExceptionDialog"],"mappings":"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","file":"static/js/main.f4054478.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridElement\":\"GridSection_gridElement__3DOqL\",\"gridTitleBar\":\"GridSection_gridTitleBar__2-OEV\",\"gridTitleDescription\":\"GridSection_gridTitleDescription__1jy96\",\"gridIcon\":\"GridSection_gridIcon__1INTx\",\"gridDescription\":\"GridSection_gridDescription__1NNso\",\"gridActionText\":\"GridSection_gridActionText__1S-Gc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectsContainer\":\"AddLockExceptionForm_selectsContainer__oGoGJ\",\"organisationUnitTreeContainer\":\"AddLockExceptionForm_organisationUnitTreeContainer__1ihnJ\",\"left\":\"AddLockExceptionForm_left__Bdizi\",\"right\":\"AddLockExceptionForm_right__1Fbau\",\"ouLabel\":\"AddLockExceptionForm_ouLabel__85FLn\",\"organisationUnitTreeCard\":\"AddLockExceptionForm_organisationUnitTreeCard__2UJ2-\"};","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/vi';\n\nimport arTranslations from './ar/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport viTranslations from './vi/translations.json';\n\nconst namespace = 'data-admin-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('vi', namespace, viTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","export const i18nKeys = {\n    dataIntegrity: {\n        title: 'Data Integrity',\n        label: 'Data Integrity',\n        description:\n            'Run data integrity checks and unveil anomalies and problems in the meta data setup.',\n        actionText: 'Check Data Integrity',\n        performing: 'Performing data integrity checks...',\n        unexpectedError:\n            'An unexpected error happened during data integrity checks',\n        actionButton: 'RUN INTEGRITY CHECKS',\n        dataElementsWithoutDataSet: {\n            label: 'Data elements without data set',\n        },\n        dataElementsWithoutGroups: {\n            label: 'Data elements without groups',\n        },\n        dataElementsViolatingExclusiveGroupSets: {\n            label: 'Data elements violating exclusive group sets',\n        },\n        dataElementsAssignedToDataSetsWithDifferentPeriodTypes: {\n            label:\n                'Data elements assigned to data sets with different period types',\n        },\n        dataSetsNotAssignedToOrganisationUnits: {\n            label: 'Data sets not assigned to organisation units',\n        },\n        indicatorsWithIdenticalFormulas: {\n            label: 'Indicators with identical formulas',\n        },\n        indicatorsWithoutGroups: {\n            label: 'Indicators without groups',\n        },\n        invalidIndicatorNumerators: {\n            label: 'Invalid indicator numerators',\n        },\n        invalidIndicatorDenominators: {\n            label: 'Invalid indicator denominators',\n        },\n        indicatorsViolatingExclusiveGroupSets: {\n            label: 'Indicators violating exclusive group sets',\n        },\n        organisationUnitsWithCyclicReferences: {\n            label: 'Organisation units with cyclic references',\n        },\n        orphanedOrganisationUnits: {\n            label: 'Orphaned organisation units',\n        },\n        organisationUnitsWithoutGroups: {\n            label: 'Organisation units without groups',\n        },\n        organisationUnitsViolatingExclusiveGroupSets: {\n            label: 'Organisation units violating exclusive group sets',\n        },\n        organisationUnitGroupsWithoutGroupSets: {\n            label: 'Organisation unit groups without group sets',\n        },\n        validationRulesWithoutGroups: {\n            label: 'Validation rules without groups',\n        },\n        invalidValidationRuleLeftSideExpressions: {\n            label: 'Invalid validation rule left side expressions',\n        },\n        invalidValidationRuleRightSideExpressions: {\n            label: 'Invalid validation rule right side expressions',\n        },\n        invalidProgramIndicatorExpressions: {\n            label: 'Invalid program indicator expressions',\n        },\n        invalidProgramIndicatorFilters: {\n            label: 'Invalid program indicator filters',\n        },\n        dataElementsInDataSetNotInForm: {\n            label:\n                'There are data elements in the form, but not in the form or sections',\n        },\n        invalidCategoryCombos: {\n            label: 'Invalid category combinations',\n        },\n        duplicatePeriods: {\n            label: 'Duplicate periods',\n        },\n        programRulesWithNoCondition: {\n            label: 'Program rules with no condition',\n        },\n        programRulesWithNoAction: {\n            label: 'Program rules with no action',\n        },\n        programRulesWithNoPriority: {\n            label: 'Program rules with no priority',\n        },\n        programRuleVariablesWithNoDataElement: {\n            label: 'Program rule variables with no data element',\n        },\n        programRuleVariablesWithNoAttribute: {\n            label: 'Program rule variables with no attribute',\n        },\n        programRuleActionsWithNoDataObject: {\n            label: 'Program rule actions with no data object',\n        },\n        programRuleActionsWithNoNotification: {\n            label: 'Program rule actions with no notification',\n        },\n        programRuleActionsWithNoSectionId: {\n            label: 'Program rule actions with no section id',\n        },\n        programRuleActionsWithNoStageId: {\n            label: 'Program rule actions with no stage id',\n        },\n    },\n    maintenance: {\n        title: 'Maintenance',\n        label: 'Maintenance',\n        description:\n            'Perform maintenance tasks and generate resource database tables for the organisation unit' +\n            ' hierarchy and group set structure.',\n        actionText: 'Perform Maintenance',\n        actionButton: 'PERFORM MAINTENANCE',\n        performing: 'Performing Maintenance...',\n        actionPerformed: 'Maintenance done',\n        unexpectedError: 'An unexpected error happened during maintenance',\n        analyticsTableClear: 'Clear analytics tables',\n        analyticsTableAnalyze: 'Analyze analytics tables',\n        zeroDataValueRemoval: 'Remove zero data values',\n        softDeletedDataValueRemoval:\n            'Permanently remove soft deleted data values',\n        softDeletedEventRemoval: 'Permanently remove soft deleted events',\n        softDeletedEnrollmentRemoval:\n            'Permanently remove soft deleted enrollments',\n        softDeletedTrackedEntityInstanceRemoval:\n            'Permanently remove soft deleted tracked entity instances',\n        periodPruning: 'Prune periods',\n        expiredInvitationsClear: 'Remove expired invitations',\n        sqlViewsDrop: 'Drop SQL views',\n        sqlViewsCreate: 'Create SQL views',\n        categoryOptionComboUpdate: 'Update category option combinations',\n        ouPathsUpdate: 'Update organisation unit paths',\n        cacheClear: 'Clear application cache',\n        appReload: 'Reload apps',\n    },\n    resourceTables: {\n        title: 'Resource Tables',\n        label: 'Resource Tables',\n        description:\n            'Generate resource database tables for the organisation unit hierarchy and group ' +\n            'set structure among others.',\n        actionText: 'Generate Resource Tables',\n        actionButton: 'GENERATE TABLES',\n        actionPerformed: 'Resource Tables generated',\n        unexpectedError: 'An unexpected error happened during operation',\n        organisationUnitStructure: 'Organisation unit structure',\n        organistionUnitCategoryOptionCombo:\n            'Organisation unit category option combo',\n        categoryOptionGroupSetStructure: 'Category option group set structure',\n        dataElementGroupSetStructure: 'Data element group set structure',\n        indicatorGroupSetStructure: 'Indicator group set structure',\n        organisationUnitGroupSetStructure:\n            'Organisation unit group set structure',\n        categoryStructure: 'Category structure',\n        dataElementCategoryOptionComboName:\n            'Data element category option combo name',\n        dataElementStructure: 'Data element structure',\n        periodStructure: 'Period structure',\n        dataPeriodStructure: 'Date period structure',\n        dataElementCategoryOptionCombinations:\n            'Data element category option combinations',\n    },\n    dataStatistics: {\n        title: 'Data Statistics',\n        label: 'Data Statistics',\n        description:\n            'Browse the number of objects in the database, like data elements, indicators,' +\n            ' data sets and data values.',\n        actionText: 'Overview Data Statistics',\n        loadingMessage: 'Loading Data Statistics...',\n        errorMessage: 'It was not possible to load Data Statistics',\n        noDataMessage: 'No data to show.',\n        objectType: 'Object type',\n        lastHour: 'Last hour',\n        today: 'Today',\n        last: 'Last',\n        days: 'days',\n        usersLoggedIn: 'Users logged in',\n        userAccountInvitations: 'User account invitations',\n        pedingInvitations: 'Pending invitations',\n        expiredInvitations: 'Expired invitations',\n        dataValues: 'Data values',\n        events: 'Events',\n        objects: {\n            indicator: 'Indicators',\n            period: 'Periods',\n            programStageInstance: 'Events',\n            organisationUnit: 'Organisation units',\n            validationRule: 'Validation rules',\n            dataValue: 'Data values',\n            program: 'Programs',\n            dataElement: 'Data elements',\n            organisationUnitGroup: 'Organisation unit groups',\n            reportTable: 'Pivot tables',\n            indicatorType: 'Indicator types',\n            dataSet: 'Data sets',\n            userGroup: 'User groups',\n            user: 'Users',\n            map: 'Maps',\n            indicatorGroup: 'Indicator groups',\n            chart: 'Charts',\n            dataElementGroup: 'Data element groups',\n            dashboard: 'Dashboards',\n        },\n    },\n    lockException: {\n        title: 'Lock Exception Management',\n        batchDeletionHeader: 'Lock Exception',\n        batchDeletionSubHeader: 'Batch Deletion',\n        addLockExceptionFormTitle: 'Add new lock exception',\n        label: 'Lock Exception',\n        description:\n            'Add or remove exceptions to the the standard rules for locking of data entry forms.',\n        actionText: 'Lock Exception Management',\n        actionButton: 'BATCH DELETION',\n        cancelButton: 'CANCEL',\n        addButton: 'ADD',\n        noDataMessage: 'No data to show.',\n        loadingMessage: 'Loading Lock Exceptions...',\n        addingMessage: 'Adding Lock Exception...',\n        removedMessage: 'Lock Exception removed',\n        addedMessage: 'Lock Exception Added',\n        confirmDeleteMessage: 'Are you sure?',\n        confirmButton: 'CONFIRM',\n        selectADataSet: 'Select a Data Set',\n        updatingTree: 'Updating Organisation Units Tree...',\n        organisationUnitsWithin: 'For organisation units within',\n        period: 'Period',\n        dataSet: 'Data Set',\n        organisationUnit: 'Organisation Unit',\n        organisationUnitGroup: 'Organisation Unit Group',\n        organisationUnitLevel: 'Organisation Unit Level',\n        select: 'Select',\n        deselect: 'Deselect',\n        selectAll: 'Select All Org Units',\n        deselectAll: 'Deselect All Org Units',\n        name: 'Name',\n        show: 'Show Details',\n        remove: 'Remove',\n        actions: 'Actions',\n        ofPage: 'of',\n        week: 'week',\n        month: 'month',\n        year: 'year',\n        biMonth: 'bi monthly',\n        day: 'day',\n        jan: 'jan',\n        feb: 'feb',\n        mar: 'mar',\n        apr: 'apr',\n        may: 'may',\n        jun: 'jun',\n        jul: 'jul',\n        aug: 'aug',\n        sep: 'sep',\n        oct: 'oct',\n        nov: 'nov',\n        dec: 'dec',\n        janFeb: 'jan-feb',\n        marApr: 'mar-apr',\n        mayJun: 'may-jun',\n        julAug: 'jul-aug',\n        sepOct: 'sep-oct',\n        novDec: 'nov-dec',\n        quarter: 'quarter',\n        Q1: 'Q1',\n        Q2: 'Q2',\n        Q3: 'Q3',\n        Q4: 'Q4',\n        sixMonth: 'six monthly',\n        janJun: 'jan-jun',\n        julDec: 'jul-dec',\n        aprSep: 'apr-sep',\n        octMar: 'oct-mar',\n        selectOrganisationUnits: 'For all organisation units:',\n    },\n    minMaxValueGeneration: {\n        title: 'Min-Max Value Generation',\n        label: 'Min-Max Value Generation',\n        description:\n            'Generate min-max values which can be used for data validation during data entry and ' +\n            'validation processes.',\n        actionText: 'Generate Min-Max Value',\n        notPossibleToLoadMessage: 'It was not possible to load data',\n        warningMessage: 'Select Data set and Organisation Unit',\n        performingMessage: 'Doing Min Max generation...',\n        removingMessage: 'Removing Min Max generation...',\n        minMaxGenerationDone: 'Min Max generation done',\n        minMaxRemovalDone: 'Min Max removal done',\n        dataSet: 'Data Set',\n        loadingDataSetsMessage: 'Loading data sets',\n        organisationUnitSelect: 'Organisation Unit Selection',\n        updatingTree: 'Updating Organisation Units Tree...',\n        actionButton: 'GENERATE',\n        removeButton: 'REMOVE',\n    },\n    analytics: {\n        title: 'Analytics tables management',\n        label: 'Analytics Tables',\n        description:\n            'The data mart is a set of tables in the DHIS database which is used by all reporting and ' +\n            'analysis tools to retrieve data from. ',\n        actionText: 'Analytics tables update',\n        actionButton: 'START EXPORT',\n        skipAggregate:\n            'Skip generation of aggregate data and completeness data',\n        skipResourceTables: 'Skip generation of resource tables',\n        skipEvents: 'Skip generation of event data',\n        skipEnrollment: 'Skip generation of enrollment data',\n        analyticsTablesUpdateHeader: 'Analytics Tables Update',\n        lastYearsLabel: 'Number of last years of data to include',\n        allLastYears: '[ All ]',\n        unexpectedError: 'An unexpected error happened during maintenance',\n    },\n    messages: {\n        unexpectedError: 'An unexpected error happened during operation',\n    },\n    d2UiComponents: {\n        settings: 'Settings',\n        app_search_placeholder: 'Search apps',\n        profile: 'Profile',\n        account: 'Account',\n        help: 'Help',\n        log_out: 'Log out',\n        about_dhis2: 'About DHIS 2',\n        manage_my_apps: 'Manage my apps',\n        no_results_found: 'No results found',\n        interpretations: 'Interpretations',\n        messages: 'Messages',\n    },\n}\n\nexport default i18nKeys\n","import i18n from './locales'\nimport { i18nKeys } from './i18n'\n\nconst isLangRTL = code => {\n    const langs = ['ar', 'fa', 'ur']\n    const prefixed = langs.map(c => `${c}-`)\n    return (\n        langs.includes(code) ||\n        prefixed.filter(c => code.startsWith(c)).length > 0\n    )\n}\n\nexport const configI18n = userSettings => {\n    const lang = userSettings.keyUiLocale\n    if (isLangRTL(lang)) {\n        document.body.setAttribute('dir', 'rtl')\n    }\n\n    i18n.changeLanguage(lang)\n}\n\nexport const injectTranslationsToD2 = d2 => {\n    if (d2) {\n        const translations = {}\n        const translationKeys = Object.keys(i18nKeys.d2UiComponents)\n        for (let i = 0; i < translationKeys.length; i++) {\n            const key = translationKeys[i]\n            translations[key] = i18n.t(i18nKeys.d2UiComponents[key])\n        }\n        Object.assign(d2.i18n.translations, translations)\n    }\n}\n\nexport default configI18n\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { GridTile } from 'material-ui/GridList'\nimport FontIcon from 'material-ui/FontIcon'\nimport classNames from 'classnames'\nimport i18n from '../../../locales'\nimport styles from './GridSection.module.css'\n\nclass GridSection extends PureComponent {\n    static propTypes = {\n        section: PropTypes.shape({\n            key: PropTypes.string,\n            path: PropTypes.string,\n            info: PropTypes.shape({\n                label: PropTypes.string,\n                description: PropTypes.string,\n                icon: PropTypes.string,\n                actionText: PropTypes.string,\n            }),\n        }).isRequired,\n    }\n\n    render() {\n        return (\n            <Link to={this.props.section.path}>\n                <GridTile\n                    key={this.props.section.key}\n                    className={classNames('section', styles.gridElement)}\n                >\n                    <div className={classNames('row', styles.gridTitleBar)}>\n                        <span\n                            className={classNames(\n                                'section-title',\n                                styles.gridTitleDescription\n                            )}\n                        >\n                            {this.props.section.info.label}\n                        </span>\n                        <FontIcon\n                            className={classNames(\n                                'material-icons',\n                                'icon',\n                                styles.gridIcon\n                            )}\n                        >\n                            {this.props.section.info.icon}\n                        </FontIcon>\n                    </div>\n                    <span\n                        className={classNames(\n                            'section-description',\n                            'row',\n                            styles.gridDescription\n                        )}\n                    >\n                        {i18n.t(this.props.section.info.description)}\n                    </span>\n                    <span\n                        className={classNames(\n                            'section-action-text',\n                            'row',\n                            styles.gridActionText\n                        )}\n                    >\n                        {i18n.t(this.props.section.info.actionText)}\n                    </span>\n                </GridTile>\n            </Link>\n        )\n    }\n}\n\nexport default GridSection\n","import { i18nKeys } from '../../i18n'\n\nexport const INIT_ENDPOINT = 'dataIntegrity'\nexport const PULL_INTERVAL = 5000\nexport const DATA_ENDPOINT = 'system/taskSummaries/DATA_INTEGRITY'\nexport const PAGE_TITLE = i18nKeys.dataIntegrity.title\n\nexport const dataIntegrityControls = [\n    {\n        key: 'dataElementsWithoutDataSet',\n        label: i18nKeys.dataIntegrity.dataElementsWithoutDataSet.label,\n        text: i18nKeys.dataIntegrity.dataElementsWithoutDataSet.text,\n    },\n    {\n        key: 'dataElementsWithoutGroups',\n        label: i18nKeys.dataIntegrity.dataElementsWithoutGroups.label,\n        text: i18nKeys.dataIntegrity.dataElementsWithoutGroups.text,\n    },\n    {\n        key: 'dataElementsViolatingExclusiveGroupSets',\n        label:\n            i18nKeys.dataIntegrity.dataElementsViolatingExclusiveGroupSets\n                .label,\n        text:\n            i18nKeys.dataIntegrity.dataElementsViolatingExclusiveGroupSets\n                .label,\n    },\n    {\n        key: 'dataElementsAssignedToDataSetsWithDifferentPeriodTypes',\n        label:\n            i18nKeys.dataIntegrity\n                .dataElementsAssignedToDataSetsWithDifferentPeriodTypes.label,\n        text:\n            i18nKeys.dataIntegrity\n                .dataElementsAssignedToDataSetsWithDifferentPeriodTypes.text,\n    },\n    {\n        key: 'dataSetsNotAssignedToOrganisationUnits',\n        label:\n            i18nKeys.dataIntegrity.dataSetsNotAssignedToOrganisationUnits.label,\n        text:\n            i18nKeys.dataIntegrity.dataSetsNotAssignedToOrganisationUnits.text,\n    },\n    {\n        key: 'indicatorsWithIdenticalFormulas',\n        label: i18nKeys.dataIntegrity.indicatorsWithIdenticalFormulas.label,\n        text: i18nKeys.dataIntegrity.indicatorsWithIdenticalFormulas.text,\n    },\n    {\n        key: 'indicatorsWithoutGroups',\n        label: i18nKeys.dataIntegrity.indicatorsWithoutGroups.label,\n        text: i18nKeys.dataIntegrity.indicatorsWithoutGroups.text,\n    },\n    {\n        key: 'invalidIndicatorNumerators',\n        label: i18nKeys.dataIntegrity.invalidIndicatorNumerators.label,\n        text: i18nKeys.dataIntegrity.invalidIndicatorNumerators.text,\n    },\n    {\n        key: 'invalidIndicatorDenominators',\n        label: i18nKeys.dataIntegrity.invalidIndicatorDenominators.label,\n        text: i18nKeys.dataIntegrity.invalidIndicatorDenominators.text,\n    },\n    {\n        key: 'indicatorsViolatingExclusiveGroupSets',\n        label:\n            i18nKeys.dataIntegrity.indicatorsViolatingExclusiveGroupSets.label,\n        text: i18nKeys.dataIntegrity.indicatorsViolatingExclusiveGroupSets.text,\n    },\n    {\n        key: 'organisationUnitsWithCyclicReferences',\n        label:\n            i18nKeys.dataIntegrity.organisationUnitsWithCyclicReferences.label,\n        text: i18nKeys.dataIntegrity.organisationUnitsWithCyclicReferences.text,\n    },\n    {\n        key: 'orphanedOrganisationUnits',\n        label: i18nKeys.dataIntegrity.orphanedOrganisationUnits.label,\n        text: i18nKeys.dataIntegrity.orphanedOrganisationUnits.text,\n    },\n    {\n        key: 'organisationUnitsWithoutGroups',\n        label: i18nKeys.dataIntegrity.organisationUnitsWithoutGroups.label,\n        text: i18nKeys.dataIntegrity.organisationUnitsWithoutGroups.text,\n    },\n    {\n        key: 'organisationUnitsViolatingExclusiveGroupSets',\n        label:\n            i18nKeys.dataIntegrity.organisationUnitsViolatingExclusiveGroupSets\n                .label,\n        text:\n            i18nKeys.dataIntegrity.organisationUnitsViolatingExclusiveGroupSets\n                .text,\n    },\n    {\n        key: 'organisationUnitGroupsWithoutGroupSets',\n        label:\n            i18nKeys.dataIntegrity.organisationUnitGroupsWithoutGroupSets.label,\n        text:\n            i18nKeys.dataIntegrity.organisationUnitGroupsWithoutGroupSets.text,\n    },\n    {\n        key: 'validationRulesWithoutGroups',\n        label: i18nKeys.dataIntegrity.validationRulesWithoutGroups.label,\n        text: i18nKeys.dataIntegrity.validationRulesWithoutGroups.text,\n    },\n    {\n        key: 'invalidValidationRuleLeftSideExpressions',\n        label:\n            i18nKeys.dataIntegrity.invalidValidationRuleLeftSideExpressions\n                .label,\n        text:\n            i18nKeys.dataIntegrity.invalidValidationRuleLeftSideExpressions\n                .text,\n    },\n    {\n        key: 'invalidValidationRuleRightSideExpressions',\n        label:\n            i18nKeys.dataIntegrity.invalidValidationRuleRightSideExpressions\n                .label,\n        text:\n            i18nKeys.dataIntegrity.invalidValidationRuleRightSideExpressions\n                .text,\n    },\n    {\n        key: 'invalidProgramIndicatorExpressions',\n        label: i18nKeys.dataIntegrity.invalidProgramIndicatorExpressions.label,\n    },\n    {\n        key: 'invalidProgramIndicatorFilters',\n        label: i18nKeys.dataIntegrity.invalidProgramIndicatorFilters.label,\n    },\n    {\n        key: 'dataElementsInDataSetNotInForm',\n        label: i18nKeys.dataIntegrity.dataElementsInDataSetNotInForm.label,\n    },\n    {\n        key: 'invalidCategoryCombos',\n        label: i18nKeys.dataIntegrity.invalidCategoryCombos.label,\n    },\n    {\n        key: 'duplicatePeriods',\n        label: i18nKeys.dataIntegrity.duplicatePeriods.label,\n    },\n    {\n        key: 'programRulesWithNoCondition',\n        label: i18nKeys.dataIntegrity.programRulesWithNoCondition.label,\n    },\n    {\n        key: 'programRulesWithNoAction',\n        label: i18nKeys.dataIntegrity.programRulesWithNoAction.label,\n    },\n    {\n        key: 'programRulesWithNoPriority',\n        label: i18nKeys.dataIntegrity.programRulesWithNoPriority.label,\n    },\n    {\n        key: 'programRuleVariablesWithNoDataElement',\n        label:\n            i18nKeys.dataIntegrity.programRuleVariablesWithNoDataElement.label,\n    },\n    {\n        key: 'programRuleVariablesWithNoAttribute',\n        label: i18nKeys.dataIntegrity.programRuleVariablesWithNoAttribute.label,\n    },\n    {\n        key: 'programRuleActionsWithNoDataObject',\n        label: i18nKeys.dataIntegrity.programRuleActionsWithNoDataObject.label,\n    },\n    {\n        key: 'programRuleActionsWithNoNotification',\n        label:\n            i18nKeys.dataIntegrity.programRuleActionsWithNoNotification.label,\n    },\n    {\n        key: 'programRuleActionsWithNoSectionId',\n        label: i18nKeys.dataIntegrity.programRuleActionsWithNoSectionId.label,\n    },\n    {\n        key: 'programRuleActionsWithNoStageId',\n        label: i18nKeys.dataIntegrity.programRuleActionsWithNoStageId.label,\n    },\n]\n","import { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass Page extends Component {\n    static propTypes = {\n        sectionKey: PropTypes.string.isRequired,\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n        loading: PropTypes.bool,\n        currentSection: PropTypes.string,\n        updateAppState: PropTypes.func,\n    }\n\n    componentWillMount() {\n        this.pageMounted = true\n\n        // update section on side bar\n        if (this.context.currentSection !== this.props.sectionKey) {\n            this.context.updateAppState({\n                currentSection: this.props.sectionKey,\n            })\n        }\n    }\n\n    componentWillUnmount() {\n        this.pageMounted = false\n    }\n\n    isPageMounted() {\n        return this.pageMounted\n    }\n}\n\nexport default Page\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Card, CardText, CardHeader } from 'material-ui/Card'\nimport { FontIcon } from 'material-ui'\nimport i18n from '../../../locales'\nimport styles from './DataIntegrityCard.module.css'\n\nconst jsStyles = {\n    errorColor: '#ff5722',\n    noErrorColor: '#1c9d17',\n    titleStyle: {\n        fontSize: 14,\n        fontWeight: 'normal',\n    },\n    iconStyle: {\n        color: '#1c9d17',\n        cursor: 'auto',\n    },\n    noPaddingTop: {\n        paddingTop: 0,\n    },\n}\n\nclass DataIntegrityCard extends PureComponent {\n    static propTypes = {\n        cardId: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        content: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n    }\n\n    static defaultProps = {\n        content: [],\n    }\n\n    render() {\n        const showIcon = true\n        let expandable = true\n        let titleColor = jsStyles.errorColor\n        let closeIcon = 'keyboard_arrow_down'\n        let openIcon = 'keyboard_arrow_up'\n        let cardText = null\n\n        if (!Array.isArray(this.props.content)) {\n            cardText = (\n                <CardText style={jsStyles.noPaddingTop} expandable={expandable}>\n                    <div id={'elementDescription'}>\n                        {Object.keys(this.props.content).map(element => (\n                            <span key={element}>\n                                <h4>{element}</h4>\n                                <p>\n                                    {Array.isArray(this.props.content[element])\n                                        ? this.props.content[element].join(', ')\n                                        : this.props.content[element]}\n                                </p>\n                            </span>\n                        ))}\n                    </div>\n                </CardText>\n            )\n        } else if (this.props.content.length) {\n            cardText = (\n                <CardText style={jsStyles.noPaddingTop} expandable={expandable}>\n                    <div id={'elementDescription'}>\n                        {this.props.content.map(element => (\n                            <p key={element}>\n                                {Array.isArray(element)\n                                    ? element.join(', ')\n                                    : element}\n                            </p>\n                        ))}\n                    </div>\n                </CardText>\n            )\n        } else {\n            expandable = false\n            titleColor = jsStyles.noErrorColor\n            closeIcon = 'done'\n            openIcon = 'done'\n        }\n\n        const closeFontIcon = (\n            <FontIcon className={'material-icons'}>{closeIcon}</FontIcon>\n        )\n        const openFontIcon = (\n            <FontIcon className={'material-icons'}>{openIcon}</FontIcon>\n        )\n\n        return (\n            <Card id={this.props.cardId} className={styles.card}>\n                <CardHeader\n                    title={i18n.t(this.props.title)}\n                    titleColor={titleColor}\n                    titleStyle={jsStyles.titleStyle}\n                    actAsExpander={expandable}\n                    showExpandableButton={showIcon}\n                    closeIcon={closeFontIcon}\n                    openIcon={openFontIcon}\n                    iconStyle={!expandable ? jsStyles.iconStyle : {}}\n                />\n                {cardText}\n            </Card>\n        )\n    }\n}\n\nexport default DataIntegrityCard\n","export const DOCS_LINK = 'https://docs.dhis2.org'\nexport const DOCS_TOOLTIP_LABEL = 'Open user guide'\n\n/**\n * Returns the \"version\" of the documentation that corresponds with the current dhis2 version.\n *\n * @param {Object} version - The version definition as provided by d2.system.version.\n * @param {number} version.minor - The minor dhis2 version. e.g. The 25 in 2.25.\n * @param {boolean} version.snapshot - True when the current version is the snapshot(master/development) branch.\n *\n * @returns {string} `master` for a snapshot branch. `25` for 2.25 etc.\n */\nexport const getDocsVersion = ({ major, minor, snapshot }) => {\n    if (snapshot) {\n        return 'master'\n    }\n    return `${major}.${minor}`\n}\n\nexport default getDocsVersion\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { IconButton } from 'material-ui'\nimport i18n from '../../locales'\nimport {\n    getDocsVersion,\n    DOCS_LINK,\n    DOCS_TOOLTIP_LABEL,\n} from '../../helpers/docs'\n\nclass PageHelper extends PureComponent {\n    static propTypes = {\n        lng: PropTypes.string,\n        sectionDocsKey: PropTypes.string.isRequired,\n    }\n\n    static defaultProps = {\n        lng: 'en',\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    render() {\n        const { d2 } = this.context\n        const { lng, sectionDocsKey } = this.props\n        return (\n            <IconButton\n                className=\"helper-icon\"\n                iconStyle={{ color: '#276696' }}\n                href={`${DOCS_LINK}/${getDocsVersion(\n                    d2.system.version\n                )}/${lng}/user/html/${sectionDocsKey}.html`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                tooltip={i18n.t(DOCS_TOOLTIP_LABEL)}\n                tooltipPosition=\"bottom-center\"\n                iconClassName=\"material-icons\"\n            >\n                help\n            </IconButton>\n        )\n    }\n}\n\nexport default PageHelper\n","import React from 'react'\nimport { RaisedButton } from 'material-ui'\nimport {\n    ERROR,\n    LOADING,\n} from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport * as conf from './data.integrity.conf'\nimport { i18nKeys } from '../../i18n'\nimport i18n from '../../locales'\nimport Page from '../Page'\nimport DataIntegrityCard from './data-integrity-card/DataIntegrityCard'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport styles from './DataIntegrity.module.css'\n\nclass DataIntegrity extends Page {\n    static STATE_PROPERTIES = ['cards', 'loaded', 'loading']\n\n    constructor() {\n        super()\n\n        this.state = {\n            cards: null,\n            intervalId: null,\n            loaded: false,\n            loading: false,\n        }\n\n        this.initDataIntegrityCheck = this.initDataIntegrityCheck.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                DataIntegrity.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    componentWillUnmount() {\n        super.componentWillUnmount()\n        this.cancelPullingRequests()\n    }\n\n    cancelPullingRequests() {\n        clearInterval(this.state.intervalId)\n    }\n\n    setLoadingPageState() {\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: LOADING,\n                message: i18n.t(i18nKeys.dataIntegrity.performing),\n            },\n            currentSection: this.props.sectionKey,\n            pageState: {\n                loaded: false,\n                loading: true,\n            },\n        })\n    }\n\n    setLoadedPageWithErrorState(error) {\n        const messageError =\n            error && error.message\n                ? error.message\n                : i18n.t(i18nKeys.dataIntegrity.unexpectedError)\n        this.cancelPullingRequests()\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: ERROR,\n                message: messageError,\n            },\n            currentSection: this.props.sectionKey,\n            pageState: {\n                loaded: true,\n                loading: false,\n            },\n        })\n    }\n\n    initDataIntegrityCheck() {\n        const api = this.context.d2.Api.getApi()\n        this.setLoadingPageState()\n        api.post(conf.INIT_ENDPOINT)\n            .then(response => {\n                if (this.isPageMounted() && response) {\n                    this.state.jobId = response.response.id\n                    this.state.intervalId = setInterval(() => {\n                        this.requestTaskSummary()\n                    }, conf.PULL_INTERVAL)\n                }\n            })\n            .catch(e => {\n                if (this.isPageMounted()) {\n                    this.setLoadedPageWithErrorState(e)\n                }\n            })\n    }\n\n    requestTaskSummary() {\n        const api = this.context.d2.Api.getApi()\n        const url = `${conf.DATA_ENDPOINT}/${this.state.jobId}`\n        api.get(url)\n            .then(response => {\n                if (this.isPageMounted()) {\n                    if (response) {\n                        this.cancelPullingRequests()\n                        this.context.updateAppState({\n                            showSnackbar: false,\n                            currentSection: this.props.sectionKey,\n                            pageState: {\n                                loaded: true,\n                                cards: response,\n                                loading: false,\n                            },\n                        })\n                    }\n                }\n            })\n            .catch(e => {\n                if (this.isPageMounted()) {\n                    this.setLoadedPageWithErrorState(e)\n                }\n            })\n    }\n\n    render() {\n        const runButton = (\n            <RaisedButton\n                id={'runDataIntegrityChecksBtnId'}\n                label={i18n.t(i18nKeys.dataIntegrity.actionButton)}\n                onClick={this.initDataIntegrityCheck}\n                primary\n                disabled={this.state.loading}\n            />\n        )\n        let cardsToShow = []\n        if (this.state.cards) {\n            const errorElementskeys = Object.keys(this.state.cards)\n            cardsToShow = errorElementskeys.map(element => (\n                <DataIntegrityCard\n                    cardId={`errorElement-${element}`}\n                    key={element}\n                    title={\n                        conf.dataIntegrityControls.find(\n                            control => control.key === element\n                        ).label\n                    }\n                    content={this.state.cards[element]}\n                />\n            ))\n            if (this.state.loaded) {\n                const noErrors = conf.dataIntegrityControls\n                    .filter(\n                        element => errorElementskeys.indexOf(element.key) < 0\n                    )\n                    .map(resultNoErrorElement => (\n                        <DataIntegrityCard\n                            cardId={`noErrorElement-${\n                                resultNoErrorElement.key\n                            }`}\n                            key={resultNoErrorElement.key}\n                            title={resultNoErrorElement.label}\n                            content={[]}\n                        />\n                    ))\n                cardsToShow.push(noErrors)\n            }\n        }\n        return (\n            <div>\n                <h1 className={styles.header}>\n                    {i18n.t(conf.PAGE_TITLE)}\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                {cardsToShow && cardsToShow.length > 0\n                    ? cardsToShow\n                    : runButton}\n            </div>\n        )\n    }\n}\n\nexport default DataIntegrity\n","import { i18nKeys } from '../../i18n'\n\nexport const MAINTENANCE_ENDPOINT = 'maintenance'\nexport const PAGE_TITLE = i18nKeys.maintenance.title\n\nexport const maintenanceCheckboxes = [\n    {\n        key: 'analyticsTableClear',\n        label: i18nKeys.maintenance.analyticsTableClear,\n    },\n    {\n        key: 'analyticsTableAnalyze',\n        label: i18nKeys.maintenance.analyticsTableAnalyze,\n    },\n    {\n        key: 'zeroDataValueRemoval',\n        label: i18nKeys.maintenance.zeroDataValueRemoval,\n    },\n    {\n        key: 'softDeletedDataValueRemoval',\n        label: i18nKeys.maintenance.softDeletedDataValueRemoval,\n    },\n    {\n        key: 'softDeletedEventRemoval',\n        label: i18nKeys.maintenance.softDeletedEventRemoval,\n    },\n    {\n        key: 'softDeletedEnrollmentRemoval',\n        label: i18nKeys.maintenance.softDeletedEnrollmentRemoval,\n    },\n    {\n        key: 'softDeletedTrackedEntityInstanceRemoval',\n        label: i18nKeys.maintenance.softDeletedTrackedEntityInstanceRemoval,\n    },\n    {\n        key: 'periodPruning',\n        label: i18nKeys.maintenance.periodPruning,\n    },\n    {\n        key: 'expiredInvitationsClear',\n        label: i18nKeys.maintenance.expiredInvitationsClear,\n    },\n    {\n        key: 'sqlViewsDrop',\n        label: i18nKeys.maintenance.sqlViewsDrop,\n    },\n    {\n        key: 'sqlViewsCreate',\n        label: i18nKeys.maintenance.sqlViewsCreate,\n    },\n    {\n        key: 'categoryOptionComboUpdate',\n        label: i18nKeys.maintenance.categoryOptionComboUpdate,\n    },\n    {\n        key: 'ouPathsUpdate',\n        label: i18nKeys.maintenance.ouPathsUpdate,\n    },\n    {\n        key: 'cacheClear',\n        label: i18nKeys.maintenance.cacheClear,\n    },\n    {\n        key: 'appReload',\n        label: i18nKeys.maintenance.appReload,\n    },\n]\n","import React from 'react'\nimport { GridTile } from 'material-ui/GridList'\nimport { Card, CardText } from 'material-ui/Card'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport Checkbox from 'material-ui/Checkbox'\nimport classNames from 'classnames'\nimport {\n    LOADING,\n    SUCCESS,\n    ERROR,\n} from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport i18n from '../../locales'\nimport { i18nKeys } from '../../i18n'\nimport Page from '../Page'\nimport {\n    maintenanceCheckboxes,\n    PAGE_TITLE,\n    MAINTENANCE_ENDPOINT,\n} from './maintenance.conf'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport styles from '../Page.module.css'\n\nclass Maintenance extends Page {\n    static STATE_PROPERTIES = ['checkboxes', 'loading']\n\n    constructor() {\n        super()\n\n        const checkboxes = {}\n\n        for (let i = 0; i < maintenanceCheckboxes.length; i++) {\n            const checkbox = maintenanceCheckboxes[i]\n            checkboxes[checkbox.key] = { checked: false }\n        }\n\n        this.state = {\n            intervalId: null,\n            checkboxes,\n            loading: false,\n        }\n\n        this.performMaintenance = this.performMaintenance.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                Maintenance.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    setLoadingPageState() {\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: LOADING,\n                message: i18n.t(i18nKeys.maintenance.performing),\n            },\n            pageState: {\n                loading: true,\n            },\n        })\n    }\n\n    setLoadedPageWithErrorState(error) {\n        const messageError =\n            error && error.message\n                ? error.message\n                : i18n.t(i18nKeys.maintenance.unexpectedError)\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: ERROR,\n                message: messageError,\n            },\n            pageState: {\n                loading: false,\n            },\n        })\n    }\n\n    selectedCheckboxesCount() {\n        let selectedCheckboxes = 0\n        const checkboxKeys = Object.keys(this.state.checkboxes)\n        for (let i = 0; i < checkboxKeys.length; i++) {\n            const key = checkboxKeys[i]\n            const checked = this.state.checkboxes[key].checked\n            if (checked) {\n                selectedCheckboxes += 1\n            }\n        }\n        return selectedCheckboxes\n    }\n\n    areActionsDisabled() {\n        return this.state.loading\n    }\n\n    buildFormData() {\n        let formData = null\n        const checkboxKeys = Object.keys(this.state.checkboxes)\n        for (let i = 0; i < checkboxKeys.length; i++) {\n            const key = checkboxKeys[i]\n            const checked = this.state.checkboxes[key].checked\n            formData = formData || new FormData()\n            formData.append(key, checked)\n        }\n\n        return formData\n    }\n\n    performMaintenance() {\n        const api = this.context.d2.Api.getApi()\n        const formData = this.buildFormData()\n\n        if (formData) {\n            this.setLoadingPageState()\n            api.post(MAINTENANCE_ENDPOINT, formData)\n                .then(() => {\n                    if (this.isPageMounted()) {\n                        this.context.updateAppState({\n                            showSnackbar: true,\n                            snackbarConf: {\n                                type: SUCCESS,\n                                message: i18n.t(\n                                    i18nKeys.maintenance.actionPerformed\n                                ),\n                            },\n                            pageState: {\n                                loading: false,\n                            },\n                        })\n                    }\n                })\n                .catch(error => {\n                    if (this.isPageMounted()) {\n                        this.setLoadedPageWithErrorState(error)\n                    }\n                })\n        }\n    }\n\n    render() {\n        const checkboxes = Object.assign({}, this.state.checkboxes)\n        const gridElements = maintenanceCheckboxes.map(checkbox => {\n            const checkboxState = checkboxes[checkbox.key].checked\n            const toggleCheckbox = () => {\n                checkboxes[checkbox.key].checked = !checkboxState\n                this.setState({ checkboxes })\n            }\n            return (\n                <GridTile\n                    key={checkbox.key}\n                    className={classNames(\n                        'col-xs-12 col-md-6 col-lg-4',\n                        styles.formControl\n                    )}\n                >\n                    <Checkbox\n                        label={i18n.t(checkbox.label)}\n                        checked={checkboxState}\n                        onCheck={toggleCheckbox}\n                        labelStyle={{ color: '#000000' }}\n                        iconStyle={{ fill: '#000000' }}\n                        disabled={this.areActionsDisabled()}\n                    />\n                </GridTile>\n            )\n        })\n\n        return (\n            <div>\n                <h1>\n                    {i18n.t(PAGE_TITLE)}\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                <Card id={'maintenanceContentContainerId'}>\n                    <CardText>\n                        <div\n                            className={classNames(styles.gridContainer, 'row')}\n                        >\n                            {gridElements}\n                        </div>\n                        <RaisedButton\n                            id={'performMaintenanceBtnId'}\n                            label={i18n.t(i18nKeys.maintenance.actionButton)}\n                            onClick={this.performMaintenance}\n                            primary\n                            disabled={\n                                this.areActionsDisabled() ||\n                                this.selectedCheckboxesCount() === 0\n                            }\n                        />\n                    </CardText>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default Maintenance\n","/* Notification Table Styles */\nexport const INFO_LEVEL = 'INFO'\nexport const ERROR_LEVEL = 'ERROR'\nexport const SUCCESS_LEVEL = 'SUCCESS'\n\nexport const SUCCESS_COLOR = '#8ac542'\nexport const INFO_COLOR = '#000000'\nexport const ERROR_COLOR = '#ff0000'\n\nexport const ERROR_NOTIFICATION_ICON = 'error'\nexport const SUCCESS_NOTIFICATION_ICON = 'check'\n\nconst FONT_SIZE = 14\n\nexport const notificationsTableStyles = {\n    iconStyle: {\n        fontSize: FONT_SIZE,\n    },\n    rowStyle: {\n        fontSize: FONT_SIZE,\n        height: 48,\n    },\n    evenRowStyle: {\n        backgroundColor: '#fafafa',\n    },\n    timeColumnStyle: {\n        width: '20%',\n    },\n    messageColumnStyle: {\n        width: '80%',\n    },\n    successStyle: {\n        color: SUCCESS_COLOR,\n        iconColor: SUCCESS_COLOR,\n        fontWeight: 'bold',\n    },\n    errorStyle: {\n        color: ERROR_COLOR,\n        iconColor: ERROR_COLOR,\n        fontWeight: 'bold',\n    },\n    infoStyle: {\n        color: INFO_COLOR,\n        iconColor: SUCCESS_COLOR,\n    },\n}\n\nconst notificationStyles = {}\n\nnotificationStyles[SUCCESS_LEVEL] = {\n    color: SUCCESS_COLOR,\n    icon: SUCCESS_NOTIFICATION_ICON,\n    row: Object.assign(\n        {},\n        notificationsTableStyles.rowStyle,\n        notificationsTableStyles.successStyle\n    ),\n}\n\nnotificationStyles[ERROR_LEVEL] = {\n    color: ERROR_COLOR,\n    icon: ERROR_NOTIFICATION_ICON,\n    row: Object.assign(\n        {},\n        notificationsTableStyles.rowStyle,\n        notificationsTableStyles.errorStyle\n    ),\n}\n\nnotificationStyles[INFO_LEVEL] = {\n    color: INFO_COLOR,\n    icon: SUCCESS_NOTIFICATION_ICON,\n    iconColor: SUCCESS_COLOR,\n    row: Object.assign(\n        {},\n        notificationsTableStyles.rowStyle,\n        notificationsTableStyles.infoStyle\n    ),\n}\n\nexport const notificationStylesInfo = notificationStyles\n\n/* helper methods */\n\n/* FIXME think of using an third party library for that, converting for a standard time format defined by design team */\nexport const formatDateFromServer = dateFromServer => {\n    if (dateFromServer) {\n        return `${dateFromServer.slice(0, 10)} ${dateFromServer.slice(11, 19)}`\n    }\n\n    return ''\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n    Table,\n    TableBody,\n    TableRow,\n    TableRowColumn,\n    FontIcon,\n} from 'material-ui'\nimport {\n    notificationsTableStyles,\n    notificationStylesInfo,\n    formatDateFromServer,\n} from './notifications-table.conf'\n\nconst NotificationsTable = ({ notifications }) => {\n    const renderNotificationIcon = notification => {\n        const notificationIconInfo = notificationStylesInfo[notification.level]\n        if (\n            notificationIconInfo &&\n            notificationIconInfo.icon &&\n            notification.completed\n        ) {\n            return (\n                <FontIcon\n                    className=\"material-icons\"\n                    style={notificationsTableStyles.iconStyle}\n                    color={notificationIconInfo.iconColor}\n                >\n                    {notificationIconInfo.icon}\n                </FontIcon>\n            )\n        }\n\n        return null\n    }\n\n    const renderNotificationRow = (notification, index) => (\n        <TableRow\n            key={index}\n            displayBorder={false}\n            style={Object.assign(\n                {},\n                notificationStylesInfo[notification.level].row,\n                (index + 1) % 2 === 0\n                    ? notificationsTableStyles.evenRowStyle\n                    : {}\n            )}\n        >\n            <TableRowColumn style={notificationsTableStyles.timeColumnStyle}>\n                {formatDateFromServer(notification.time)}\n            </TableRowColumn>\n            <TableRowColumn style={notificationsTableStyles.messageColumnStyle}>\n                {notification.message} {renderNotificationIcon(notification)}\n            </TableRowColumn>\n        </TableRow>\n    )\n\n    if (notifications && notifications.length > 0) {\n        return (\n            <Table selectable={false}>\n                <TableBody displayRowCheckbox={false}>\n                    {notifications.map(renderNotificationRow)}\n                </TableBody>\n            </Table>\n        )\n    }\n\n    return null\n}\n\nNotificationsTable.propTypes = {\n    notifications: PropTypes.arrayOf(\n        PropTypes.shape({\n            uid: PropTypes.string,\n            level: PropTypes.string,\n            time: PropTypes.string,\n            message: PropTypes.string,\n            completed: PropTypes.bool,\n        })\n    ).isRequired,\n}\n\nexport default NotificationsTable\n","export const RESOURCE_TABLES_ENDPOINT = 'resourceTables'\nexport const PULL_INTERVAL = 5000\nexport const RESOURCE_TABLES_TASK_SUMMARY_ENDPOINT =\n    'system/tasks/RESOURCE_TABLE'\n","import React from 'react'\nimport { Card, CardText } from 'material-ui/Card'\nimport { RaisedButton } from 'material-ui'\nimport {\n    ERROR,\n    LOADING,\n} from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport Page from '../Page'\nimport NotificationsTable from '../../components/notifications-table/NotificationsTable'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport {\n    PULL_INTERVAL,\n    RESOURCE_TABLES_ENDPOINT,\n    RESOURCE_TABLES_TASK_SUMMARY_ENDPOINT,\n} from '../resource-tables/resource-tables.conf'\nimport i18n from '../../locales'\nimport { i18nKeys } from '../../i18n'\nimport pageStyles from '../Page.module.css'\nimport styles from './ResourceTables.module.css'\n\nclass ResourceTable extends Page {\n    static STATE_PROPERTIES = [\n        'loading',\n        'notifications',\n        'jobId',\n        'intervalId',\n    ]\n\n    constructor() {\n        super()\n\n        this.state = {\n            loading: false,\n            notifications: [],\n            jobId: null,\n            intervalId: null,\n        }\n\n        this.initResourceTablesGeneration = this.initResourceTablesGeneration.bind(\n            this\n        )\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                ResourceTable.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    componentDidMount() {\n        this.requestTaskSummary()\n    }\n\n    componentWillUnmount() {\n        super.componentWillUnmount()\n\n        this.cancelPoollingRequests()\n    }\n\n    cancelPoollingRequests() {\n        clearInterval(this.state.intervalId)\n    }\n\n    setLoadingPageState() {\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: LOADING,\n            },\n            pageState: {\n                loading: true,\n                notifications: [],\n            },\n        })\n    }\n\n    setLoadedPageWithErrorState(error) {\n        const messageError =\n            error && error.message\n                ? error.message\n                : i18n.t(i18nKeys.resourceTables.unexpectedError)\n        this.cancelPoollingRequests()\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: ERROR,\n                message: messageError,\n            },\n            pageState: {\n                loaded: true,\n                loading: false,\n            },\n        })\n    }\n\n    isAnalyzingTables = () => this.state.jobId && this.state.intervalId\n\n    startsPooling = () =>\n        setInterval(() => {\n            this.requestTaskSummary()\n        }, PULL_INTERVAL)\n\n    isJobInProgress = jobNotifications =>\n        jobNotifications.every(notification => !notification.completed)\n\n    initResourceTablesGeneration() {\n        const api = this.context.d2.Api.getApi()\n        this.setLoadingPageState()\n        api.post(RESOURCE_TABLES_ENDPOINT)\n            .then(response => {\n                if (this.isPageMounted() && response) {\n                    const jobId = response.response.id\n                    const intervalId = setInterval(() => {\n                        this.requestTaskSummary()\n                    }, PULL_INTERVAL)\n\n                    this.setState({\n                        jobId,\n                        intervalId,\n                    })\n                }\n            })\n            .catch(e => {\n                if (this.isPageMounted()) {\n                    this.setLoadedPageWithErrorState(e)\n                }\n            })\n    }\n\n    updateStateForInProgressJobAccordingTaskSummaryResponse = taskSummaryResponse => {\n        const notifications = taskSummaryResponse[this.state.jobId] || []\n        const completed = !this.isJobInProgress(notifications)\n\n        if (completed) {\n            this.cancelPoollingRequests()\n        }\n\n        this.context.updateAppState({\n            showSnackbar: !completed,\n            pageState: {\n                notifications,\n                loading: !completed,\n            },\n        })\n    }\n\n    verifyInProgressJobsForTaskSummaryResponseAndUpdateState = taskSummaryResponse => {\n        const jobIds = taskSummaryResponse\n            ? Object.keys(taskSummaryResponse)\n            : []\n\n        // looking for the most recent in progress job\n        for (let i = jobIds.length - 1; i >= 0; i--) {\n            const jobId = jobIds[i]\n            const notifications = taskSummaryResponse[jobId] || []\n\n            // found in progress job: show current notifications and starts pooling\n            if (this.isJobInProgress(notifications)) {\n                const intervalId = this.startsPooling()\n\n                this.context.updateAppState({\n                    showSnackbar: true,\n                    snackbarConf: {\n                        type: LOADING,\n                    },\n                    pageState: {\n                        notifications,\n                        loading: true,\n                        jobId,\n                        intervalId,\n                    },\n                })\n\n                break\n            }\n        }\n    }\n\n    requestTaskSummary() {\n        const api = this.context.d2.Api.getApi()\n        const lastId =\n            this.state.notifications && this.state.notifications.length > 0\n                ? this.state.notifications[0].uid\n                : null\n        const url = lastId\n            ? `${RESOURCE_TABLES_TASK_SUMMARY_ENDPOINT}?lastId=${lastId}`\n            : `${RESOURCE_TABLES_TASK_SUMMARY_ENDPOINT}`\n\n        api.get(url)\n            .then(taskSummaryResponse => {\n                /* not mounted finishes */\n                if (!this.isPageMounted()) {\n                    return\n                }\n\n                // showing current job\n                if (this.isAnalyzingTables()) {\n                    this.updateStateForInProgressJobAccordingTaskSummaryResponse(\n                        taskSummaryResponse\n                    )\n                    // so far no jobs is being processed, lets check if server is has any in progress job\n                } else {\n                    this.verifyInProgressJobsForTaskSummaryResponseAndUpdateState(\n                        taskSummaryResponse\n                    )\n                }\n            })\n            .catch(e => {\n                if (this.isPageMounted()) {\n                    this.setLoadedPageWithErrorState(e)\n                }\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>\n                    {i18n.t(i18nKeys.resourceTables.title)}\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                <Card className={pageStyles.cardContainer}>\n                    <CardText>\n                        <div className={styles.description}>\n                            <div>\n                                {i18n.t(\n                                    i18nKeys.resourceTables\n                                        .organisationUnitStructure\n                                )}{' '}\n                                <span className={styles.tableName}>\n                                    (_orgunitstructure)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(\n                                    i18nKeys.resourceTables\n                                        .organistionUnitCategoryOptionCombo\n                                )}{' '}\n                                <span className={styles.tableName}>\n                                    (_orgunitstructure)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(\n                                    i18nKeys.resourceTables\n                                        .categoryOptionGroupSetStructure\n                                )}{' '}\n                                <span className={styles.tableName}>\n                                    (_categoryoptiongroupsetstructure)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(\n                                    i18nKeys.resourceTables\n                                        .dataElementGroupSetStructure\n                                )}{' '}\n                                <span className={styles.tableName}>\n                                    (_dataelementgroupsetstructure)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(\n                                    i18nKeys.resourceTables\n                                        .indicatorGroupSetStructure\n                                )}{' '}\n                                <span className={styles.tableName}>\n                                    (_indicatorgroupsetstructure)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(\n                                    i18nKeys.resourceTables\n                                        .organisationUnitGroupSetStructure\n                                )}{' '}\n                                <span className={styles.tableName}>\n                                    (_organisationunitgroupsetstructure)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(\n                                    i18nKeys.resourceTables.categoryStructure\n                                )}{' '}\n                                <span className={styles.tableName}>\n                                    (_categorystructure)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(\n                                    i18nKeys.resourceTables\n                                        .dataElementCategoryOptionComboName\n                                )}{' '}\n                                <span className={styles.tableName}>\n                                    (_categoryoptioncomboname)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(\n                                    i18nKeys.resourceTables.dataElementStructure\n                                )}{' '}\n                                <span className={styles.tableName}>\n                                    (_dataelementstructure)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(\n                                    i18nKeys.resourceTables.periodStructure\n                                )}{' '}\n                                <span className={styles.tableName}>\n                                    (_periodstructure)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(\n                                    i18nKeys.resourceTables.dataPeriodStructure\n                                )}{' '}\n                                <span className={styles.tableName}>\n                                    (_dateperiodstructure)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(\n                                    i18nKeys.resourceTables\n                                        .dataElementCategoryOptionCombinations\n                                )}{' '}\n                                <span className={styles.tableName}>\n                                    (_dataelementcategoryoptioncombo)\n                                </span>\n                            </div>\n                        </div>\n                        <RaisedButton\n                            id={'generateTablesBtnId'}\n                            primary\n                            label={i18n.t(i18nKeys.resourceTables.actionButton)}\n                            onClick={this.initResourceTablesGeneration}\n                            disabled={this.state.loading}\n                        />\n                    </CardText>\n                </Card>\n                {this.state.notifications.length > 0 && (\n                    <Card className={pageStyles.cardContainer}>\n                        <CardText>\n                            <NotificationsTable\n                                notifications={this.state.notifications}\n                            />\n                        </CardText>\n                    </Card>\n                )}\n            </div>\n        )\n    }\n}\n\nexport default ResourceTable\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst FormattedNumber = props => (\n    <span>\n        {new Intl.NumberFormat(sessionStorage.getItem('uiLocale')).format(\n            props.value\n        )}\n    </span>\n)\n\nFormattedNumber.propTypes = {\n    value: PropTypes.number.isRequired,\n}\n\nexport default FormattedNumber\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n    Table,\n    TableBody,\n    TableHeader,\n    TableHeaderColumn,\n    TableRow,\n    TableRowColumn,\n} from 'material-ui/Table'\nimport FormattedNumber from '../../components/formatters/FormattedNumber'\nimport styles from './DataStatistics.module.css'\n\nclass DataStatisticsTable extends PureComponent {\n    static propTypes = {\n        label: PropTypes.string.isRequired,\n        elements: PropTypes.array.isRequired,\n    }\n\n    render() {\n        const rows = this.props.elements.map(element => (\n            <TableRow\n                key={element.label}\n                className={'data-statistics-table-row'}\n            >\n                <TableRowColumn>{element.label}</TableRowColumn>\n                <TableRowColumn>\n                    <FormattedNumber value={element.count} />\n                </TableRowColumn>\n            </TableRow>\n        ))\n\n        return (\n            <Table selectable={false} className={styles.statisticsTable}>\n                <TableHeader\n                    className={'data-statistics-table-header'}\n                    displaySelectAll={false}\n                    adjustForCheckbox={false}\n                    enableSelectAll={false}\n                >\n                    <TableRow>\n                        <TableHeaderColumn>\n                            {this.props.label}\n                        </TableHeaderColumn>\n                    </TableRow>\n                </TableHeader>\n                <TableBody displayRowCheckbox={false} stripedRows={false}>\n                    {rows}\n                </TableBody>\n            </Table>\n        )\n    }\n}\n\nexport default DataStatisticsTable\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Card, CardText } from 'material-ui/Card'\nimport {\n    LOADING,\n    ERROR,\n} from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport classNames from 'classnames'\nimport Page from '../Page'\nimport DataStatisticsTable from './DataStatisticsTable'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport i18n from '../../locales'\nimport { i18nKeys } from '../../i18n'\nimport styles from './DataStatistics.module.css'\n\nexport const OBJECT_COUNTS_KEY = 'objectCounts'\nexport const ACTIVE_USERS_KEY = 'activeUsers'\nexport const USER_INVITATIONS_KEY = 'userInvitations'\nexport const DATA_VALUE_COUNT_KEY = 'dataValueCount'\nexport const EVENT_COUNT_KEY = 'eventCount'\n\nconst PENDING_INVITATION_ALL_KEY = 'all'\nconst EXPIRED_INVITATION_KEY = 'expired'\n\nexport const TableCard = ({ label, elements }) => (\n    <Card className={classNames(styles.card, 'data-statistics-table')}>\n        <DataStatisticsTable label={label} elements={elements} />\n    </Card>\n)\n\nTableCard.propTypes = {\n    label: PropTypes.string.isRequired,\n    elements: PropTypes.array.isRequired,\n}\n\nclass DataStatistics extends Page {\n    static STATE_PROPERTIES = ['tables', 'loaded', 'loading']\n\n    constructor() {\n        super()\n\n        this.state = {\n            tables: {},\n            loaded: false,\n            loading: false,\n        }\n    }\n\n    // auxiliar functions\n    static objectCountsTableObjectToShowFromServerResponse = objectCountsResponse => {\n        if (objectCountsResponse) {\n            const objectCountsKeys = Object.keys(objectCountsResponse)\n            const objectCountsTable = {\n                label: i18n.t(i18nKeys.dataStatistics.objectType),\n                elements: [],\n            }\n\n            for (let i = 0; i < objectCountsKeys.length; i++) {\n                const key = objectCountsKeys[i]\n                objectCountsTable.elements.push({\n                    label: i18n.t(i18nKeys.dataStatistics.objects[key]),\n                    count: objectCountsResponse[key],\n                })\n            }\n\n            return objectCountsTable\n        }\n\n        return {}\n    }\n\n    static translatedTimeLabelFromIntProperty = intProperty => {\n        let label = i18n.t(i18nKeys.dataStatistics.lastHour)\n        if (intProperty === 1) {\n            label = i18n.t(i18nKeys.dataStatistics.today)\n        } else if (intProperty > 0) {\n            const lastLabel = i18n.t(i18nKeys.dataStatistics.last)\n            const daysLabel = i18n.t(i18nKeys.dataStatistics.days)\n            label = `${lastLabel} ${intProperty} ${daysLabel}`\n        }\n\n        return label\n    }\n\n    static activeUsersTableObjectToShowFromServerResponse = activeUsersResponse => {\n        if (activeUsersResponse) {\n            const activeUsersKeys = Object.keys(activeUsersResponse)\n            const activeUsersTable = {\n                label: i18n.t(i18nKeys.dataStatistics.usersLoggedIn),\n                elements: [],\n            }\n\n            for (let i = 0; i < activeUsersKeys.length; i++) {\n                const key = activeUsersKeys[i]\n                activeUsersTable.elements.push({\n                    label: DataStatistics.translatedTimeLabelFromIntProperty(\n                        parseInt(key, 10)\n                    ),\n                    count: activeUsersResponse[key],\n                })\n            }\n\n            return activeUsersTable\n        }\n\n        return {}\n    }\n\n    static userInvitationsTableObjectToShowFromServerResponse = userInvitationsResponse => {\n        if (userInvitationsResponse) {\n            const userInvitationsTable = {\n                label: i18n.t(i18nKeys.dataStatistics.userAccountInvitations),\n                elements: [],\n            }\n\n            if (\n                userInvitationsResponse.hasOwnProperty(\n                    PENDING_INVITATION_ALL_KEY\n                )\n            ) {\n                userInvitationsTable.elements.push({\n                    label: i18n.t(i18nKeys.dataStatistics.pedingInvitations),\n                    count: userInvitationsResponse[PENDING_INVITATION_ALL_KEY],\n                })\n            }\n\n            if (\n                userInvitationsResponse.hasOwnProperty(EXPIRED_INVITATION_KEY)\n            ) {\n                userInvitationsTable.elements.push({\n                    label: i18n.t(i18nKeys.dataStatistics.expiredInvitations),\n                    count: userInvitationsResponse[EXPIRED_INVITATION_KEY],\n                })\n            }\n\n            return userInvitationsTable\n        }\n\n        return {}\n    }\n\n    static dataValueCountsTableObjectToShowFromServerResponse = dataValueCountsResponse => {\n        if (dataValueCountsResponse) {\n            const dataValueCountsKeys = Object.keys(dataValueCountsResponse)\n            const dataValueCountsTable = {\n                label: i18n.t(i18nKeys.dataStatistics.dataValues),\n                elements: [],\n            }\n\n            for (let i = 0; i < dataValueCountsKeys.length; i++) {\n                const key = dataValueCountsKeys[i]\n                dataValueCountsTable.elements.push({\n                    label: DataStatistics.translatedTimeLabelFromIntProperty(\n                        parseInt(key, 10)\n                    ),\n                    count: dataValueCountsResponse[key],\n                })\n            }\n\n            return dataValueCountsTable\n        }\n\n        return {}\n    }\n\n    static eventCountsTableObjectToShowFromServerResponse = eventCountsResponse => {\n        if (eventCountsResponse) {\n            const eventCountsKeys = Object.keys(eventCountsResponse)\n            const eventCountsTable = {\n                label: i18n.t(i18nKeys.dataStatistics.events),\n                elements: [],\n            }\n\n            for (let i = 0; i < eventCountsKeys.length; i++) {\n                const key = eventCountsKeys[i]\n                eventCountsTable.elements.push({\n                    label: DataStatistics.translatedTimeLabelFromIntProperty(\n                        parseInt(key, 10)\n                    ),\n                    count: eventCountsResponse[key],\n                })\n            }\n\n            return eventCountsTable\n        }\n\n        return {}\n    }\n\n    componentDidMount() {\n        const api = this.context.d2.Api.getApi()\n\n        // request to GET statistics\n        if (!this.state.loading && !this.state.loaded) {\n            this.context.updateAppState({\n                showSnackbar: true,\n                snackbarConf: {\n                    type: LOADING,\n                    message: i18n.t(i18nKeys.dataStatistics.loadingMessage),\n                },\n                pageState: {\n                    loaded: false,\n                    tables: {},\n                    loading: true,\n                },\n            })\n\n            if (api) {\n                api.get('dataSummary')\n                    .then(response => {\n                        if (this.isPageMounted()) {\n                            const tables = {}\n                            tables[\n                                OBJECT_COUNTS_KEY\n                            ] = DataStatistics.objectCountsTableObjectToShowFromServerResponse(\n                                response[OBJECT_COUNTS_KEY]\n                            )\n                            tables[\n                                ACTIVE_USERS_KEY\n                            ] = DataStatistics.activeUsersTableObjectToShowFromServerResponse(\n                                response[ACTIVE_USERS_KEY]\n                            )\n                            tables[\n                                USER_INVITATIONS_KEY\n                            ] = DataStatistics.userInvitationsTableObjectToShowFromServerResponse(\n                                response[USER_INVITATIONS_KEY]\n                            )\n                            tables[\n                                DATA_VALUE_COUNT_KEY\n                            ] = DataStatistics.dataValueCountsTableObjectToShowFromServerResponse(\n                                response[DATA_VALUE_COUNT_KEY]\n                            )\n                            tables[\n                                EVENT_COUNT_KEY\n                            ] = DataStatistics.eventCountsTableObjectToShowFromServerResponse(\n                                response[EVENT_COUNT_KEY]\n                            )\n\n                            this.context.updateAppState({\n                                showSnackbar: false,\n                                pageState: {\n                                    loaded: true,\n                                    tables,\n                                    loading: false,\n                                },\n                            })\n                        }\n                    })\n                    .catch(() => {\n                        if (this.isPageMounted()) {\n                            this.context.updateAppState({\n                                showSnackbar: true,\n                                snackbarConf: {\n                                    type: ERROR,\n                                    message: i18n.t(\n                                        i18nKeys.dataStatistics.errorMessage\n                                    ),\n                                },\n                                pageState: {\n                                    loaded: true,\n                                    tables: {},\n                                    loading: false,\n                                },\n                            })\n                        }\n                    })\n            }\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                DataStatistics.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    hasTables = () =>\n        this.state.tables &&\n        this.state.tables.constructor === Object &&\n        Object.keys(this.state.tables).length > 0\n\n    render() {\n        const noContent = (\n            <Card style={{ display: !this.state.loading ? 'block' : 'none' }}>\n                <CardText>\n                    {i18n.t(i18nKeys.dataStatistics.noDataMessage)}\n                </CardText>\n            </Card>\n        )\n\n        return (\n            <div>\n                <h1 className={styles.header}>\n                    {i18n.t(i18nKeys.dataStatistics.title)}\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                {this.hasTables() ? (\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            {this.state.tables[OBJECT_COUNTS_KEY] && (\n                                <TableCard\n                                    label={\n                                        this.state.tables[OBJECT_COUNTS_KEY]\n                                            .label\n                                    }\n                                    elements={\n                                        this.state.tables[OBJECT_COUNTS_KEY]\n                                            .elements\n                                    }\n                                />\n                            )}\n                            {this.state.tables[ACTIVE_USERS_KEY] && (\n                                <TableCard\n                                    label={\n                                        this.state.tables[ACTIVE_USERS_KEY]\n                                            .label\n                                    }\n                                    elements={\n                                        this.state.tables[ACTIVE_USERS_KEY]\n                                            .elements\n                                    }\n                                />\n                            )}\n                        </div>\n                        <div className=\"col-md-6\">\n                            {this.state.tables[USER_INVITATIONS_KEY] && (\n                                <TableCard\n                                    label={\n                                        this.state.tables[USER_INVITATIONS_KEY]\n                                            .label\n                                    }\n                                    elements={\n                                        this.state.tables[USER_INVITATIONS_KEY]\n                                            .elements\n                                    }\n                                />\n                            )}\n                            {this.state.tables[DATA_VALUE_COUNT_KEY] && (\n                                <TableCard\n                                    label={\n                                        this.state.tables[DATA_VALUE_COUNT_KEY]\n                                            .label\n                                    }\n                                    elements={\n                                        this.state.tables[DATA_VALUE_COUNT_KEY]\n                                            .elements\n                                    }\n                                />\n                            )}\n                            {this.state.tables[EVENT_COUNT_KEY] && (\n                                <TableCard\n                                    label={\n                                        this.state.tables[EVENT_COUNT_KEY].label\n                                    }\n                                    elements={\n                                        this.state.tables[EVENT_COUNT_KEY]\n                                            .elements\n                                    }\n                                />\n                            )}\n                        </div>\n                    </div>\n                ) : (\n                    noContent\n                )}\n            </div>\n        )\n    }\n}\n\nexport default DataStatistics\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Card from 'material-ui/Card/Card'\nimport CardText from 'material-ui/Card/CardText'\nimport OrgUnitTree from 'd2-ui/lib/org-unit-tree/OrgUnitTree.component'\nimport OrgUnitSelectByLevel from 'd2-ui/lib/org-unit-select/OrgUnitSelectByLevel.component'\nimport OrgUnitSelectByGroup from 'd2-ui/lib/org-unit-select/OrgUnitSelectByGroup.component'\nimport OrgUnitSelectAll from 'd2-ui/lib/org-unit-select/OrgUnitSelectAll.component'\nimport SelectField from 'd2-ui/lib/select-field/SelectField'\nimport PeriodPicker from 'd2-ui/lib/period-picker/PeriodPicker.component'\nimport { ERROR } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport i18n from '../../locales'\nimport { i18nKeys } from '../../i18n'\nimport styles from './AddLockExceptionForm.module.css'\n\nconst d2UiSelectStyleOverride = {\n    minWidth: 360,\n    marginRight: 20,\n}\n\nclass AddLockExceptionForm extends Component {\n    static propTypes = {\n        levels: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\n            .isRequired,\n        groups: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\n            .isRequired,\n        dataSets: PropTypes.array.isRequired,\n        updateSelectedOrgUnits: PropTypes.func.isRequired,\n        updateSeletedDataSetId: PropTypes.func.isRequired,\n        updateSelectedPeriodId: PropTypes.func.isRequired,\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    constructor() {\n        super()\n\n        this.state = {\n            selected: [],\n            dataSet: null,\n            orgUnitPaths: null,\n        }\n\n        this.onDataSetChange = this.onDataSetChange.bind(this)\n\n        this.onPeriodChange = this.onPeriodChange.bind(this)\n\n        this.handleSelectionUpdate = this.handleSelectionUpdate.bind(this)\n        this.handleOrgUnitClick = this.handleOrgUnitClick.bind(this)\n        this.changeRoot = this.changeRoot.bind(this)\n    }\n\n    onDataSetChange(dataSet) {\n        const d2 = this.context.d2\n        const dataSetId = dataSet.id\n\n        if (\n            this.state.dataSet === null ||\n            dataSetId !== this.state.dataSet.id\n        ) {\n            this.props.updateSeletedDataSetId(dataSetId)\n\n            this.setState({\n                rootWithMembers: null,\n                selected: [],\n                dataSet,\n            })\n\n            Promise.all([\n                d2.models.organisationUnits.list({\n                    paging: false,\n                    level: 1,\n                    fields:\n                        'id,displayName,path,children::isNotEmpty,memberCount',\n                    memberCollection: 'dataSets',\n                    memberObject: dataSetId,\n                }),\n                d2.models.dataSets.get(dataSetId, {\n                    paging: false,\n                    fields: 'organisationUnits[id,path]',\n                }),\n            ])\n                .then(([rootWithDataSetMembers, dataSetMembers]) => {\n                    const rootWithMembers = rootWithDataSetMembers.toArray()[0]\n                    this.setState({\n                        rootWithMembers,\n                        selected: [],\n                        orgUnitPaths: dataSetMembers.organisationUnits\n                            .toArray()\n                            .map(ou => ou.path),\n                    })\n                })\n                .catch(error => {\n                    if (this.isPageMounted()) {\n                        const messageError =\n                            error && error.message\n                                ? error.message\n                                : i18n.t(i18nKeys.messages.unexpectedError)\n\n                        this.context.updateAppState({\n                            showSnackbar: true,\n                            loading: false,\n                            snackbarConf: {\n                                type: ERROR,\n                                message: messageError,\n                            },\n                            pageState: { ...this.state },\n                        })\n                    }\n                })\n        }\n    }\n\n    onPeriodChange(periodId) {\n        this.props.updateSelectedPeriodId(periodId)\n    }\n\n    handleSelectionUpdate(newSelection) {\n        this.setState({ selected: newSelection })\n        this.props.updateSelectedOrgUnits(this.state.selected)\n    }\n\n    handleOrgUnitClick(event, orgUnit) {\n        if (this.state.selected.includes(orgUnit.path)) {\n            const selected = this.state.selected\n            selected.splice(selected.indexOf(orgUnit.path), 1)\n            this.setState({ selected })\n        } else {\n            const selected = this.state.selected\n            selected.push(orgUnit.path)\n            this.setState({ selected })\n        }\n        this.props.updateSelectedOrgUnits(this.state.selected)\n    }\n\n    changeRoot(currentRoot) {\n        this.setState({ currentRoot })\n    }\n\n    render() {\n        const dataSetItems = this.props.dataSets.map(dataSet => ({\n            id: dataSet.id,\n            name: dataSet.displayName,\n            periodType: dataSet.periodType,\n        }))\n\n        let dataSetSelectLabel = i18n.t(i18nKeys.lockException.selectADataSet)\n        let dataSetSelectValue = null\n        if (this.state.dataSet) {\n            dataSetSelectLabel = i18n.t(i18nKeys.lockException.dataSet)\n            dataSetSelectValue = this.state.dataSet.id\n        }\n\n        return (\n            <div id={'addLockExceptionFormId'}>\n                <div className={styles.selectsContainer}>\n                    <SelectField\n                        style={d2UiSelectStyleOverride}\n                        label={dataSetSelectLabel}\n                        items={dataSetItems}\n                        onChange={this.onDataSetChange}\n                        value={dataSetSelectValue}\n                    />\n                    {this.state.dataSet && (\n                        <span id={'idPeriodPicker'}>\n                            <PeriodPicker\n                                periodType={this.state.dataSet.periodType}\n                                onPickPeriod={this.onPeriodChange}\n                            />\n                        </span>\n                    )}\n                </div>\n                {this.state.dataSet ? (\n                    <Card className={styles.organisationUnitTreeCard}>\n                        <CardText\n                            className={styles.organisationUnitTreeContainer}\n                        >\n                            <div className={styles.left}>\n                                {this.state.rootWithMembers ? (\n                                    <OrgUnitTree\n                                        root={this.state.rootWithMembers}\n                                        selected={this.state.selected}\n                                        currentRoot={this.state.currentRoot}\n                                        initiallyExpanded={[\n                                            `/${this.state.rootWithMembers.id}`,\n                                        ]}\n                                        memberCollection=\"dataSets\"\n                                        memberObject={this.state.dataSet.id}\n                                        onSelectClick={this.handleOrgUnitClick}\n                                        onChangeCurrentRoot={this.changeRoot}\n                                        orgUnitsPathsToInclude={\n                                            this.state.orgUnitPaths\n                                        }\n                                    />\n                                ) : (\n                                    <span>\n                                        {i18n.t(\n                                            i18nKeys.lockException.updatingTree\n                                        )}\n                                    </span>\n                                )}\n                            </div>\n                            <div className={styles.right}>\n                                <div>\n                                    {this.state.currentRoot ? (\n                                        <div>\n                                            {i18n.t(\n                                                i18nKeys.lockException\n                                                    .organisationUnitsWithin\n                                            )}{' '}\n                                            <span className={styles.ouLabel}>\n                                                {\n                                                    this.state.currentRoot\n                                                        .displayName\n                                                }\n                                            </span>\n                                            :\n                                        </div>\n                                    ) : (\n                                        <div>\n                                            {i18n.t(\n                                                i18nKeys.lockException\n                                                    .selectOrganisationUnits\n                                            )}\n                                        </div>\n                                    )}\n                                    <OrgUnitSelectByLevel\n                                        levels={this.props.levels}\n                                        selected={this.state.selected}\n                                        currentRoot={this.state.currentRoot}\n                                        onUpdateSelection={\n                                            this.handleSelectionUpdate\n                                        }\n                                    />\n                                    <OrgUnitSelectByGroup\n                                        groups={this.props.groups}\n                                        selected={this.state.selected}\n                                        currentRoot={this.state.currentRoot}\n                                        onUpdateSelection={\n                                            this.handleSelectionUpdate\n                                        }\n                                    />\n                                    <OrgUnitSelectAll\n                                        selected={this.state.selected}\n                                        currentRoot={this.state.currentRoot}\n                                        onUpdateSelection={\n                                            this.handleSelectionUpdate\n                                        }\n                                    />\n                                </div>\n                            </div>\n                        </CardText>\n                    </Card>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nexport default AddLockExceptionForm\n","export const calculatePageValue = pager => {\n    const pageSize = pager.pageSize\n    const { total, pageCount, page } = pager\n    const pageCalculationValue =\n        total - (total - (pageCount - (pageCount - page)) * pageSize)\n    const startItem = pageCalculationValue - pageSize + 1\n    const endItem = pageCalculationValue\n\n    return `${startItem} - ${endItem > total ? total : endItem}`\n}\n\nexport default calculatePageValue\n","import React from 'react'\nimport Dialog from 'material-ui/Dialog'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport FlatButton from 'material-ui/FlatButton'\nimport FontIcon from 'material-ui/FontIcon'\nimport IconButton from 'material-ui/IconButton'\nimport { Card, CardText } from 'material-ui/Card'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport DataTable from 'd2-ui/lib/data-table/DataTable.component'\nimport Pagination from 'd2-ui/lib/pagination/Pagination.component'\nimport {\n    LOADING,\n    SUCCESS,\n    ERROR,\n    ACTION_MESSAGE,\n} from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport classNames from 'classnames'\nimport Page from '../Page'\nimport AddLockExceptionForm from './AddLockExceptionForm'\nimport { calculatePageValue } from '../../helpers/pagination'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport i18n from '../../locales'\nimport { i18nKeys } from '../../i18n'\nimport '../../custom-css/D2UIDataTableOverrides.css'\nimport 'd2-ui/lib/css/Pagination.css'\nimport 'd2-ui/lib/css/DataTable.css'\nimport styles from './LockException.module.css'\n\nconst jsStyles = {\n    dialog: {\n        maxWidth: '80%',\n    },\n    addButton: {\n        position: 'fixed',\n        bottom: '1.5rem',\n        right: '1.5rem',\n    },\n}\n\nclass LockException extends Page {\n    static STATE_PROPERTIES = [\n        'lockExceptions',\n        'showAddDialogOpen',\n        'selectedLockException',\n        'levels',\n        'groups',\n        'dataSets',\n        'selectedOrgUnits',\n        'selectedDataSetId',\n        'selectedPeriodId',\n        'pager',\n        'loading',\n        'atBatchDeletionPage',\n    ]\n\n    static initialPager = {\n        pageSize: 20,\n        page: 1,\n        total: 0,\n        pageCount: 1,\n    }\n\n    constructor(props, context) {\n        super(props, context)\n\n        this.state = {\n            lockExceptions: [],\n            showAddDialogOpen: false,\n            selectedLockException: null,\n            levels: null,\n            groups: null,\n            dataSets: [],\n            selectedOrgUnits: [],\n            selectedDataSetId: null,\n            selectedPeriodId: null,\n            pager: LockException.initialPager,\n            loading: false,\n            loaded: false,\n            atBatchDeletionPage: false,\n        }\n\n        this.updateSelectedOrgUnits = this.updateSelectedOrgUnits.bind(this)\n        this.updateSeletedDataSetId = this.updateSeletedDataSetId.bind(this)\n        this.updateSelectedPeriodId = this.updateSelectedPeriodId.bind(this)\n        this.removeLockException = this.removeLockException.bind(this)\n        this.showLockExceptionFormDialog = this.showLockExceptionFormDialog.bind(\n            this\n        )\n        this.closeLockExceptionFormDialog = this.closeLockExceptionFormDialog.bind(\n            this\n        )\n        this.addLockException = this.addLockException.bind(this)\n        this.backToLockExceptions = this.backToLockExceptions.bind(this)\n        this.goToBatchDeletionPage = this.goToBatchDeletionPage.bind(this)\n        this.onNextPageClick = this.onNextPageClick.bind(this)\n        this.onPreviousPageClick = this.onPreviousPageClick.bind(this)\n\n        // FIXME Hack in some translations\n        const d2 = context.d2\n        Object.assign(d2.i18n.translations, {\n            period: i18n.t(i18nKeys.lockException.period),\n            data_set: i18n.t(i18nKeys.lockException.dataSet),\n            organisation_unit: i18n.t(i18nKeys.lockException.organisationUnit),\n            organisation_unit_group: i18n.t(\n                i18nKeys.lockException.organisationUnitGroup\n            ),\n            organisation_unit_level: i18n.t(\n                i18nKeys.lockException.organisationUnitLevel\n            ),\n            select: i18n.t(i18nKeys.lockException.select),\n            deselect: i18n.t(i18nKeys.lockException.deselect),\n            select_all: i18n.t(i18nKeys.lockException.selectAll),\n            deselect_all: i18n.t(i18nKeys.lockException.deselectAll),\n            name: i18n.t(i18nKeys.lockException.name),\n            show: i18n.t(i18nKeys.lockException.show),\n            remove: i18n.t(i18nKeys.lockException.remove),\n            actions: i18n.t(i18nKeys.lockException.actions),\n            of_page: i18n.t(i18nKeys.lockException.ofPage),\n            week: i18n.t(i18nKeys.lockException.week),\n            month: i18n.t(i18nKeys.lockException.month),\n            year: i18n.t(i18nKeys.lockException.year),\n            biMonth: i18n.t(i18nKeys.lockException.biMonth),\n            day: i18n.t(i18nKeys.lockException.day),\n            jan: i18n.t(i18nKeys.lockException.jan),\n            feb: i18n.t(i18nKeys.lockException.feb),\n            mar: i18n.t(i18nKeys.lockException.mar),\n            apr: i18n.t(i18nKeys.lockException.apr),\n            may: i18n.t(i18nKeys.lockException.may),\n            jun: i18n.t(i18nKeys.lockException.jun),\n            jul: i18n.t(i18nKeys.lockException.jul),\n            aug: i18n.t(i18nKeys.lockException.aug),\n            sep: i18n.t(i18nKeys.lockException.sep),\n            oct: i18n.t(i18nKeys.lockException.oct),\n            nov: i18n.t(i18nKeys.lockException.nov),\n            dec: i18n.t(i18nKeys.lockException.dec),\n            'jan-feb': i18n.t(i18nKeys.lockException.janFeb),\n            'mar-apr': i18n.t(i18nKeys.lockException.marApr),\n            'may-jun': i18n.t(i18nKeys.lockException.mayJun),\n            'jul-aug': i18n.t(i18nKeys.lockException.julAug),\n            'sep-oct': i18n.t(i18nKeys.lockException.sepOct),\n            'nov-dec': i18n.t(i18nKeys.lockException.novDec),\n            quarter: i18n.t(i18nKeys.lockException.quarter),\n            Q1: i18n.t(i18nKeys.lockException.Q1),\n            Q2: i18n.t(i18nKeys.lockException.Q2),\n            Q3: i18n.t(i18nKeys.lockException.Q3),\n            Q4: i18n.t(i18nKeys.lockException.Q4),\n            sixMonth: i18n.t(i18nKeys.lockException.sixMonth),\n            'jan-jun': i18n.t(i18nKeys.lockException.janJun),\n            'jul-dec': i18n.t(i18nKeys.lockException.julDec),\n            'apr-sep': i18n.t(i18nKeys.lockException.aprSep),\n            'oct-mar': i18n.t(i18nKeys.lockException.octMar),\n        })\n    }\n\n    prepareLockExceptionsResponseToDataTable(lockExceptionResponse) {\n        return lockExceptionResponse.map(le => {\n            const row = {}\n            if (!this.state.atBatchDeletionPage) {\n                row.organisationUnit = le.organisationUnit.displayName\n                row.organisationUnitId = le.organisationUnit.id\n            }\n            row.period = le.period.displayName\n            row.periodId = le.period.id\n            row.dataSet = le.dataSet.displayName\n            row.dataSetId = le.dataSet.id\n            return row\n        })\n    }\n\n    dataTableColumns() {\n        if (this.state.atBatchDeletionPage) {\n            return ['dataSet', 'period']\n        }\n        return ['organisationUnit', 'dataSet', 'period']\n    }\n\n    header() {\n        if (this.state.atBatchDeletionPage) {\n            return (\n                <div className={styles.headerContainer}>\n                    <h1 className={styles.header}>\n                        <IconButton onClick={this.backToLockExceptions}>\n                            <FontIcon\n                                className={classNames(\n                                    'material-icons',\n                                    styles.backArrowIcon\n                                )}\n                            >\n                                arrow_back\n                            </FontIcon>\n                        </IconButton>\n                        <span>\n                            {i18n.t(i18nKeys.lockException.batchDeletionHeader)}\n                        </span>\n                        <span className={styles.headerDivider}> | </span>\n                        <span className={styles.subHeader}>\n                            {i18n.t(\n                                i18nKeys.lockException.batchDeletionSubHeader\n                            )}\n                        </span>\n                    </h1>\n                </div>\n            )\n        }\n\n        return (\n            <div className={styles.headerContainer}>\n                <h1 className={styles.header}>\n                    {i18n.t(i18nKeys.lockException.title)}\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                <div>\n                    <RaisedButton\n                        className={styles.actionButton}\n                        label={i18n.t(i18nKeys.lockException.actionButton)}\n                        onClick={this.goToBatchDeletionPage}\n                        primary\n                        disabled={this.areActionsDisabled()}\n                    />\n                </div>\n            </div>\n        )\n    }\n\n    areActionsDisabled() {\n        return this.state.loading\n    }\n\n    addLockExceptionEnabled() {\n        return (\n            this.state.selectedOrgUnits.length > 0 &&\n            this.state.selectedDataSetId &&\n            this.state.selectedPeriodId\n        )\n    }\n\n    componentDidMount() {\n        this.loadLockExceptionsForPager(this.state.pager)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                LockException.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    loadLockExceptionsForPager(pager, userAction) {\n        const api = this.context.d2.Api.getApi()\n        const url =\n            `lockExceptions?page=${pager.page}&pageSize=${pager.pageSize}` +\n            '&fields=name,' +\n            'period[id,displayName],' +\n            'organisationUnit[id,displayName],' +\n            'dataSet[id,displayName]' +\n            '&order=name:asc'\n\n        // request to GET lock exceptions\n        if (userAction || (!this.state.loading && !this.state.loaded)) {\n            // Keep the previous message visible (p.e. deleting lock exception || add lock exception)\n            this.context.updateAppState(\n                this.state.deleteInProgress || this.state.addInProgress\n                    ? {\n                          atBatchDeletionPage: false,\n                          loaded: false,\n                          loading: true,\n                      }\n                    : {\n                          showSnackbar: true,\n                          snackbarConf: {\n                              type: LOADING,\n                              message: i18n.t(i18nKeys.lockException.loading),\n                          },\n                          pageState: {\n                              atBatchDeletionPage: false,\n                              loaded: false,\n                              loading: true,\n                          },\n                      }\n            )\n\n            api.get(url)\n                .then(response => {\n                    if (this.isPageMounted()) {\n                        let loadedState\n\n                        // If deleting a lock exception, show a success message instead of hiding the loading\n                        if (this.state.deleteInProgress) {\n                            loadedState = {\n                                showSnackbar: true,\n                                snackbarConf: {\n                                    type: SUCCESS,\n                                    message: i18n.t(\n                                        i18nKeys.lockException.removedMessage\n                                    ),\n                                },\n                            }\n                            this.state.deleteInProgress = false\n                            // If adding a lock exception, show a success message instead of hiding the loading\n                        } else if (this.state.addInProgress) {\n                            loadedState = {\n                                showSnackbar: true,\n                                snackbarConf: {\n                                    type: SUCCESS,\n                                    message: i18n.t(\n                                        i18nKeys.lockException.addedMessage\n                                    ),\n                                },\n                            }\n                            this.state.addInProgress = false\n                        } else {\n                            loadedState = {\n                                showSnackbar: false,\n                            }\n                        }\n\n                        this.context.updateAppState({\n                            ...loadedState,\n                            pageState: {\n                                loaded: true,\n                                lockExceptions: this.prepareLockExceptionsResponseToDataTable(\n                                    response.lockExceptions\n                                ),\n                                pager: response.pager,\n                                loading: false,\n                            },\n                        })\n                    }\n                })\n                .catch(error => {\n                    if (this.isPageMounted()) {\n                        const messageError =\n                            error && error.message\n                                ? error.message\n                                : i18n.t(i18nKeys.messages.unexpectedError)\n\n                        this.context.updateAppState({\n                            showSnackbar: true,\n                            snackbarConf: {\n                                type: ERROR,\n                                message: messageError,\n                            },\n                            pageState: {\n                                loaded: true,\n                                loading: false,\n                            },\n                        })\n                    }\n                })\n        }\n    }\n\n    // Get information for Batch Deletion Page\n    loadLockExceptionCombinations() {\n        const api = this.context.d2.Api.getApi()\n        const url =\n            'lockExceptions/combinations?fields=name, period[id,displayName], dataSet[id,displayName]'\n\n        // request to GET lock exception combinations\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: LOADING,\n                message: i18n.t(i18nKeys.lockException.loadingMessage),\n            },\n            pageState: {\n                atBatchDeletionPage: true,\n                loaded: false,\n                loading: true,\n            },\n        })\n\n        api.get(url)\n            .then(response => {\n                if (this.isPageMounted()) {\n                    this.context.updateAppState({\n                        showSnackbar: false,\n                        pageState: {\n                            loaded: true,\n                            lockExceptions: this.prepareLockExceptionsResponseToDataTable(\n                                response.lockExceptions\n                            ),\n                            loading: false,\n                        },\n                    })\n                }\n            })\n            .catch(error => {\n                if (this.isPageMounted()) {\n                    const messageError =\n                        error && error.message\n                            ? error.message\n                            : i18n.t(i18nKeys.messages.unexpectedError)\n\n                    this.context.updateAppState({\n                        showSnackbar: true,\n                        snackbarConf: {\n                            type: ERROR,\n                            message: messageError,\n                        },\n                        pageState: {\n                            loaded: true,\n                            loading: false,\n                        },\n                    })\n                }\n            })\n    }\n\n    updateSelectedOrgUnits(selectedOrgUnits) {\n        this.setState({ selectedOrgUnits })\n    }\n\n    updateSeletedDataSetId(selectedDataSetId) {\n        this.setState({ selectedDataSetId })\n    }\n\n    updateSelectedPeriodId(selectedPeriodId) {\n        this.setState({ selectedPeriodId })\n    }\n\n    onNextPageClick() {\n        const pager = Object.assign({}, this.state.pager)\n        pager.page += 1\n        this.loadLockExceptionsForPager(pager, true)\n    }\n\n    onPreviousPageClick() {\n        const pager = Object.assign({}, this.state.pager)\n        pager.page -= 1\n        this.loadLockExceptionsForPager(pager, true)\n    }\n\n    backToLockExceptions() {\n        this.loadLockExceptionsForPager(this.state.pager, true)\n    }\n\n    goToBatchDeletionPage() {\n        this.loadLockExceptionCombinations()\n    }\n\n    removeLockException(le) {\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: ACTION_MESSAGE,\n                message: i18n.t(i18nKeys.lockException.confirmDeleteMessage),\n                action: i18n.t(i18nKeys.lockException.confirmButton),\n                onActionClick: () => {\n                    const api = this.context.d2.Api.getApi()\n                    let deleteUrl = `lockExceptions?pe=${le.periodId}&ds=${\n                        le.dataSetId\n                    }`\n\n                    if (le.organisationUnitId) {\n                        deleteUrl += `&ou=${le.organisationUnitId}`\n                    }\n\n                    this.context.updateAppState({\n                        showSnackbar: true,\n                        snackbarConf: {\n                            type: LOADING,\n                            message: i18n.t(\n                                i18nKeys.lockException.loadingMessage\n                            ),\n                        },\n                        pageState: {\n                            ...this.state,\n                            loading: true,\n                        },\n                    })\n\n                    api.delete(deleteUrl)\n                        .then(() => {\n                            if (this.isPageMounted()) {\n                                const newPageState = {\n                                    ...this.state,\n                                    loading: false,\n                                }\n\n                                if (this.state.atBatchDeletionPage) {\n                                    newPageState.lockExceptions = this.state.lockExceptions.filter(\n                                        existingLockException =>\n                                            existingLockException.periodId !==\n                                                le.periodId ||\n                                            existingLockException.dataSetId !==\n                                                le.dataSetId\n                                    )\n\n                                    this.context.updateAppState({\n                                        showSnackbar: true,\n                                        snackbarConf: {\n                                            type: SUCCESS,\n                                            message: i18n.t(\n                                                i18nKeys.lockException\n                                                    .removedMessage\n                                            ),\n                                        },\n                                        pageState: newPageState,\n                                    })\n                                } else {\n                                    this.state.deleteInProgress = true\n                                    this.context.updateAppState({\n                                        pageState: newPageState,\n                                    })\n                                    this.loadLockExceptionsForPager(\n                                        LockException.initialPager,\n                                        false\n                                    )\n                                }\n                            }\n                        })\n                        .catch(error => {\n                            if (this.isPageMounted()) {\n                                const messageError =\n                                    error && error.message\n                                        ? error.message\n                                        : i18n.t(\n                                              i18nKeys.messages.unexpectedError\n                                          )\n\n                                this.context.updateAppState({\n                                    showSnackbar: true,\n                                    snackbarConf: {\n                                        type: ERROR,\n                                        message: messageError,\n                                    },\n                                    pageState: {\n                                        ...this.state,\n                                        loading: false,\n                                    },\n                                })\n                            }\n                        })\n                },\n            },\n        })\n    }\n\n    showLockExceptionFormDialog() {\n        const d2 = this.context.d2\n        if (\n            this.state.levels &&\n            this.state.groups &&\n            this.state.dataSets.length > 0\n        ) {\n            this.setState({ showAddDialogOpen: true })\n        } else {\n            Promise.all([\n                d2.models.organisationUnitLevel.list({\n                    paging: false,\n                    fields: 'id,level,displayName',\n                    order: 'level:asc',\n                }),\n                d2.models.organisationUnitGroup.list({\n                    paging: false,\n                    fields: 'id,displayName',\n                }),\n                d2.models.dataSet.list({\n                    paging: false,\n                    fields: 'id,displayName,periodType',\n                }),\n            ])\n                .then(([levels, groups, dataSets]) => {\n                    if (this.isPageMounted()) {\n                        this.setState({\n                            showAddDialogOpen: true,\n                            levels,\n                            groups,\n                            dataSets: dataSets.toArray(),\n                        })\n                    }\n                })\n                .catch(error => {\n                    if (this.isPageMounted()) {\n                        const messageError =\n                            error && error.message\n                                ? error.message\n                                : i18n.t(i18nKeys.messages.unexpectedError)\n\n                        this.context.updateAppState({\n                            showSnackbar: true,\n                            snackbarConf: {\n                                type: ERROR,\n                                message: messageError,\n                            },\n                            pageState: {\n                                ...this.state,\n                                loading: false,\n                            },\n                        })\n                    }\n                })\n        }\n    }\n\n    closeLockExceptionFormDialog() {\n        this.setState({\n            showAddDialogOpen: false,\n            selectedOrgUnits: [],\n            selectedDataSetId: null,\n            selectedPeriodId: null,\n        })\n    }\n\n    addLockException() {\n        if (this.addLockExceptionEnabled()) {\n            const api = this.context.d2.Api.getApi()\n            const orgUnitIds = this.state.selectedOrgUnits.map(orgUnitPath => {\n                const orgUnitPathSplitted = orgUnitPath.split('/')\n                return orgUnitPathSplitted[orgUnitPathSplitted.length - 1]\n            })\n\n            const formData = new FormData()\n            formData.append('ou', `[${orgUnitIds.join(',')}]`)\n            formData.append('pe', this.state.selectedPeriodId)\n            formData.append('ds', this.state.selectedDataSetId)\n\n            this.context.updateAppState({\n                showSnackbar: true,\n                snackbarConf: {\n                    type: LOADING,\n                    message: i18n.t(i18nKeys.lockException.addingMessage),\n                },\n                pageState: {\n                    showAddDialogOpen: false,\n                    selectedOrgUnits: [],\n                    selectedDataSetId: null,\n                    selectedPeriodId: null,\n                    loading: true,\n                },\n            })\n\n            api.post('lockExceptions', formData)\n                .then(() => {\n                    if (this.isPageMounted()) {\n                        this.context.updateAppState({\n                            pageState: {\n                                loaded: false,\n                                loading: false,\n                            },\n                        })\n                        this.state.addInProgress = true\n                        this.loadLockExceptionsForPager(\n                            LockException.initialPager,\n                            false\n                        )\n                    }\n                })\n                .catch(error => {\n                    if (this.isPageMounted()) {\n                        const messageError =\n                            error && error.message\n                                ? error.message\n                                : i18n.t(i18nKeys.messages.unexpectedError)\n\n                        this.context.updateAppState({\n                            showSnackbar: true,\n                            snackbarConf: {\n                                type: ERROR,\n                                message: messageError,\n                            },\n                            pageState: {\n                                ...this.state,\n                                loading: false,\n                            },\n                        })\n                    }\n                })\n        }\n    }\n\n    render() {\n        const currentlyShown = calculatePageValue(this.state.pager)\n        const paginationProps = {\n            hasNextPage: () =>\n                this.state.pager.page < this.state.pager.pageCount,\n            hasPreviousPage: () => this.state.pager.page > 1,\n            onNextPageClick: this.onNextPageClick,\n            onPreviousPageClick: this.onPreviousPageClick,\n            total: this.state.pager.total,\n            currentlyShown,\n        }\n\n        const addLockException = [\n            <FlatButton\n                className={styles.actionButton}\n                label={i18n.t(i18nKeys.lockException.cancelButton)}\n                onClick={this.closeLockExceptionFormDialog}\n            />,\n            <RaisedButton\n                className={styles.actionButton}\n                primary={Boolean(true)}\n                label={i18n.t(i18nKeys.lockException.addButton)}\n                onClick={this.addLockException}\n                disabled={!this.addLockExceptionEnabled()}\n            />,\n        ]\n\n        return (\n            <div className={styles.lockExceptionsTable}>\n                {this.header()}\n                {this.state.lockExceptions &&\n                this.state.lockExceptions.length ? (\n                    <div>\n                        {!this.areActionsDisabled() &&\n                            !this.state.atBatchDeletionPage && (\n                                <div className={styles.pagination}>\n                                    <Pagination {...paginationProps} />\n                                </div>\n                            )}\n                        <DataTable\n                            columns={this.dataTableColumns()}\n                            rows={this.state.lockExceptions}\n                            contextMenuActions={{\n                                remove: this.removeLockException,\n                            }}\n                            contextMenuIcons={{ remove: 'delete' }}\n                        />\n                        {!this.areActionsDisabled() &&\n                            !this.state.atBatchDeletionPage && (\n                                <div\n                                    className={classNames(\n                                        styles.pagination,\n                                        styles.marginForAddButton\n                                    )}\n                                >\n                                    <Pagination {...paginationProps} />\n                                </div>\n                            )}\n                    </div>\n                ) : (\n                    <Card\n                        style={{\n                            display: !this.state.loading ? 'block' : 'none',\n                        }}\n                    >\n                        <CardText>\n                            {i18n.t(i18nKeys.lockException.noDataMessage)}\n                        </CardText>\n                    </Card>\n                )}\n                {this.state.levels &&\n                    this.state.groups &&\n                    this.state.dataSets.length > 0 && (\n                        <Dialog\n                            title={i18n.t(\n                                i18nKeys.lockException.addLockExceptionFormTitle\n                            )}\n                            actions={addLockException}\n                            modal={false}\n                            open={this.state.showAddDialogOpen}\n                            contentStyle={jsStyles.dialog}\n                            onRequestClose={this.closeLockExceptionFormDialog}\n                        >\n                            <AddLockExceptionForm\n                                levels={this.state.levels}\n                                groups={this.state.groups}\n                                dataSets={this.state.dataSets}\n                                updateSelectedOrgUnits={\n                                    this.updateSelectedOrgUnits\n                                }\n                                updateSeletedDataSetId={\n                                    this.updateSeletedDataSetId\n                                }\n                                updateSelectedPeriodId={\n                                    this.updateSelectedPeriodId\n                                }\n                            />\n                        </Dialog>\n                    )}\n                {!this.state.atBatchDeletionPage && !this.areActionsDisabled() && (\n                    <FloatingActionButton\n                        id={'addExceptionButtonId'}\n                        style={jsStyles.addButton}\n                        onClick={this.showLockExceptionFormDialog}\n                    >\n                        <ContentAdd />\n                    </FloatingActionButton>\n                )}\n            </div>\n        )\n    }\n}\n\nexport default LockException\n","import React from 'react'\nimport { Card, CardText } from 'material-ui/Card'\nimport FlatButton from 'material-ui/FlatButton'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport {\n    LOADING,\n    SUCCESS,\n    ERROR,\n    WARNING,\n} from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport OrgUnitTree from 'd2-ui/lib/org-unit-tree/OrgUnitTree.component'\nimport Page from '../Page'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport i18n from '../../locales'\nimport { i18nKeys } from '../../i18n'\nimport styles from './MinMaxValueGeneration.module.css'\n\nconst MIX_MAX_VALUE_ENDPOINT = '/minMaxValues'\n\nclass MinMaxValueGeneration extends Page {\n    static STATE_PROPERTIES = [\n        'selected',\n        'dataSets',\n        'rootWithMember',\n        'loading',\n        'dataSetsSelectedCount',\n    ]\n\n    constructor() {\n        super()\n\n        this.state = {\n            selected: [],\n            dataSets: null,\n            rootWithMember: null,\n            loading: false,\n            dataSetsSelectedCount: 1,\n        }\n\n        this.handleOrgUnitClick = this.handleOrgUnitClick.bind(this)\n        this.dataSetsSelectRef = this.dataSetsSelectRef.bind(this)\n        this.dataSetsSelectClick = this.dataSetsSelectClick.bind(this)\n        this.generateMinMaxValueClick = this.generateMinMaxValueClick.bind(this)\n        this.removeMinMaxValueClick = this.removeMinMaxValueClick.bind(this)\n    }\n\n    componentDidMount() {\n        this.loadData()\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                MinMaxValueGeneration.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    isUserInteractionDisabled() {\n        return (\n            this.state.loading ||\n            this.state.dataSets == null ||\n            this.state.rootWithMembers === null\n        )\n    }\n\n    isDataSetSelected() {\n        return this.state.dataSetsSelectedCount === 0\n    }\n\n    loadData() {\n        const d2 = this.context.d2\n        if (this.state.dataSets == null || this.state.rootWithMember == null) {\n            Promise.all([\n                d2.models.organisationUnits.list({\n                    paging: false,\n                    level: 1,\n                    fields:\n                        'id,displayName,path,children::isNotEmpty,memberCount',\n                }),\n                d2.models.dataSet.list({\n                    paging: false,\n                    fields: 'id,displayName',\n                }),\n            ])\n                .then(([organisationUnitsResponse, dataSetsResponse]) => {\n                    if (this.isPageMounted()) {\n                        const organisationUnits = organisationUnitsResponse.toArray()\n                        const selected = organisationUnits.map(ou => ou.path)\n                        this.setState({\n                            rootWithMembers: organisationUnits[0],\n                            dataSets: dataSetsResponse.toArray(),\n                            selected,\n                        })\n                    }\n                })\n                .catch(() => {\n                    if (this.isPageMounted()) {\n                        this.context.updateAppState({\n                            showSnackbar: true,\n                            snackbarConf: {\n                                type: ERROR,\n                                message: i18n.t(\n                                    i18nKeys.minMaxValueGeneration\n                                        .notPossibleToLoadMessage\n                                ),\n                            },\n                            pageState: {\n                                ...this.state,\n                                loading: false,\n                            },\n                        })\n                    }\n                })\n        }\n    }\n\n    dataSetsSelectRef(ref) {\n        this.dataSetsSelect = ref\n    }\n\n    dataSetsSelectClick() {\n        this.setState({\n            dataSetsSelectedCount: this.dataSetsSelect.selectedOptions.length,\n        })\n    }\n\n    handleOrgUnitClick(event, orgUnit) {\n        if (!this.state.selected.includes(orgUnit.path)) {\n            this.setState({ selected: [orgUnit.path] })\n        }\n    }\n\n    generateMinMaxValueClick() {\n        if (\n            this.dataSetsSelect.selectedOptions.length === 0 ||\n            this.state.selected.length === 0\n        ) {\n            this.context.updateAppState({\n                showSnackbar: true,\n                snackbarConf: {\n                    type: WARNING,\n                    message: i18n.t(\n                        i18nKeys.minMaxValueGeneration.warningMessage\n                    ),\n                },\n                pageState: {\n                    ...this.state,\n                    loading: false,\n                },\n            })\n            return\n        }\n\n        const api = this.context.d2.Api.getApi()\n        const selectedOrganisationUnitSplitted = this.state.selected[0].split(\n            '/'\n        )\n        const selectedOrganisationUnit =\n            selectedOrganisationUnitSplitted[\n                selectedOrganisationUnitSplitted.length - 1\n            ]\n        const dataSetIds = []\n        for (let i = 0; i < this.dataSetsSelect.selectedOptions.length; i++) {\n            dataSetIds.push(this.dataSetsSelect.selectedOptions[i].value)\n        }\n\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: LOADING,\n                message: i18n.t(\n                    i18nKeys.minMaxValueGeneration.performingMessage\n                ),\n            },\n            pageState: {\n                ...this.state,\n                loading: true,\n            },\n        })\n\n        api.post(MIX_MAX_VALUE_ENDPOINT, {\n            organisationUnit: selectedOrganisationUnit,\n            dataSets: dataSetIds,\n        })\n            .then(() => {\n                if (this.isPageMounted()) {\n                    this.context.updateAppState({\n                        showSnackbar: true,\n                        snackbarConf: {\n                            type: SUCCESS,\n                            message: i18n.t(\n                                i18nKeys.minMaxValueGeneration\n                                    .minMaxGenerationDone\n                            ),\n                        },\n                        pageState: {\n                            ...this.state,\n                            loading: false,\n                        },\n                    })\n                }\n            })\n            .catch(() => {\n                if (this.isPageMounted()) {\n                    this.context.updateAppState({\n                        showSnackbar: true,\n                        snackbarConf: {\n                            type: ERROR,\n                            message: i18n.t(i18nKeys.messages.unexpectedError),\n                        },\n                        pageState: {\n                            ...this.state,\n                            loading: false,\n                        },\n                    })\n                }\n            })\n    }\n\n    removeMinMaxValueClick() {\n        if (\n            this.dataSetsSelect.selectedOptions.length === 0 ||\n            this.state.selected.length === 0\n        ) {\n            this.context.updateAppState({\n                showSnackbar: true,\n                snackbarConf: {\n                    type: WARNING,\n                    message: i18n.t(\n                        i18nKeys.minMaxValueGeneration.warningMessage\n                    ),\n                },\n                pageState: {\n                    ...this.state,\n                    loading: false,\n                },\n            })\n            return\n        }\n\n        const api = this.context.d2.Api.getApi()\n        const selectedOrganisationUnitSplitted = this.state.selected[0].split(\n            '/'\n        )\n        const selectedOrgnisationUnit =\n            selectedOrganisationUnitSplitted[\n                selectedOrganisationUnitSplitted.length - 1\n            ]\n        const dataSetIds = []\n        for (let i = 0; i < this.dataSetsSelect.selectedOptions.length; i++) {\n            dataSetIds.push(this.dataSetsSelect.selectedOptions[i].value)\n        }\n\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: LOADING,\n                message: i18n.t(i18nKeys.minMaxValueGeneration.removingMessage),\n            },\n            pageState: {\n                ...this.state,\n                loading: true,\n            },\n        })\n\n        api.delete(\n            `${MIX_MAX_VALUE_ENDPOINT}/${selectedOrgnisationUnit}?ds=${dataSetIds}`\n        )\n            .then(() => {\n                if (this.isPageMounted()) {\n                    this.context.updateAppState({\n                        showSnackbar: true,\n                        snackbarConf: {\n                            type: SUCCESS,\n                            message: i18n.t(\n                                i18nKeys.minMaxValueGeneration.minMaxRemovalDone\n                            ),\n                        },\n                        pageState: {\n                            ...this.state,\n                            loading: false,\n                        },\n                    })\n                }\n            })\n            .catch(() => {\n                if (this.isPageMounted()) {\n                    this.context.updateAppState({\n                        showSnackbar: true,\n                        snackbarConf: {\n                            type: ERROR,\n                            message: i18n.t(i18nKeys.messages.unexpectedError),\n                        },\n                        pageState: {\n                            ...this.state,\n                            loading: false,\n                        },\n                    })\n                }\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className={styles.header}>\n                    {i18n.t(i18nKeys.minMaxValueGeneration.title)}\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                <Card>\n                    <CardText>\n                        <div className={styles.container}>\n                            {this.state.dataSets ? (\n                                <div className={styles.left}>\n                                    <div className={styles.label}>\n                                        {i18n.t(\n                                            i18nKeys.minMaxValueGeneration\n                                                .dataSet\n                                        )}\n                                    </div>\n                                    <select\n                                        multiple\n                                        onClick={this.dataSetsSelectClick}\n                                        disabled={this.isUserInteractionDisabled()}\n                                        className={styles.select}\n                                        ref={this.dataSetsSelectRef}\n                                    >\n                                        {this.state.dataSets.map(item => (\n                                            <option\n                                                key={item.id}\n                                                value={item.id}\n                                                className={styles.options}\n                                            >\n                                                {item.displayName}\n                                            </option>\n                                        ))}\n                                    </select>\n                                </div>\n                            ) : (\n                                <div className={styles.left}>\n                                    <span>\n                                        {i18n.t(\n                                            i18nKeys.minMaxValueGeneration\n                                                .loadingDataSetsMessage\n                                        )}\n                                    </span>\n                                </div>\n                            )}\n                            {this.state.rootWithMembers ? (\n                                <div className={styles.right}>\n                                    <div className={styles.label}>\n                                        {i18n.t(\n                                            i18nKeys.minMaxValueGeneration\n                                                .organisationUnitSelect\n                                        )}\n                                    </div>\n                                    <div className={styles.tree}>\n                                        <OrgUnitTree\n                                            className={styles.tree}\n                                            hideMemberCount\n                                            root={this.state.rootWithMembers}\n                                            selected={this.state.selected}\n                                            initiallyExpanded={[\n                                                `/${\n                                                    this.state.rootWithMembers\n                                                        .id\n                                                }`,\n                                            ]}\n                                            onSelectClick={\n                                                this.handleOrgUnitClick\n                                            }\n                                        />\n                                    </div>\n                                </div>\n                            ) : (\n                                <div className={styles.right}>\n                                    <span>\n                                        {i18n.t(\n                                            i18nKeys.minMaxValueGeneration\n                                                .updatingTree\n                                        )}\n                                    </span>\n                                </div>\n                            )}\n                        </div>\n                        <RaisedButton\n                            id={'generateMinMaxBtnId'}\n                            className={styles.actionButton}\n                            primary\n                            label={i18n.t(\n                                i18nKeys.minMaxValueGeneration.actionButton\n                            )}\n                            onClick={this.generateMinMaxValueClick}\n                            disabled={\n                                this.isUserInteractionDisabled() ||\n                                this.isDataSetSelected()\n                            }\n                        />\n                        <FlatButton\n                            id={'removeMinMaxBtnId'}\n                            className={styles.actionButton}\n                            secondary\n                            label={i18n.t(\n                                i18nKeys.minMaxValueGeneration.removeButton\n                            )}\n                            onClick={this.removeMinMaxValueClick}\n                            disabled={\n                                this.isUserInteractionDisabled() ||\n                                this.isDataSetSelected()\n                            }\n                        />\n                    </CardText>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default MinMaxValueGeneration\n","import { i18nKeys } from '../../i18n'\n\nexport const ANALYTICS_TABLES_ENDPOINT = 'resourceTables/analytics'\nexport const PULL_INTERVAL = 5000\nexport const ANALYTIC_TABLES_TASK_SUMMARY_ENDPOINT =\n    'system/tasks/ANALYTICS_TABLE'\nexport const DEFAULT_LAST_YEARS = -1\nexport const LAST_YEARS_INPUT_KEY = 'lastYears'\n\nconst LAST_YEAR = 10\nconst FIRST_YEAR = 1\n\nconst lastYearValues = [\n    {\n        key: DEFAULT_LAST_YEARS,\n        value: DEFAULT_LAST_YEARS,\n        displayName: i18nKeys.analytics.allLastYears,\n    },\n]\n\n/* Last years dropdown options */\nfor (let i = FIRST_YEAR; i <= LAST_YEAR; i++) {\n    lastYearValues.push({\n        key: i,\n        value: i,\n        displayName: i,\n    })\n}\n\nexport const lastYearElements = lastYearValues\n\n/* Form checkboxes */\nexport const analyticsCheckboxes = [\n    {\n        key: 'skipAggregate',\n        label: i18nKeys.analytics.skipAggregate,\n    },\n    {\n        key: 'skipResourceTables',\n        label: i18nKeys.analytics.skipResourceTables,\n    },\n    {\n        key: 'skipEvents',\n        label: i18nKeys.analytics.skipEvents,\n    },\n    {\n        key: 'skipEnrollment',\n        label: i18nKeys.analytics.skipEnrollment,\n    },\n]\n","import React from 'react'\nimport {\n    Card,\n    CardText,\n    GridTile,\n    Checkbox,\n    SelectField,\n    MenuItem,\n    RaisedButton,\n} from 'material-ui'\nimport classNames from 'classnames'\nimport {\n    ERROR,\n    LOADING,\n} from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport Page from '../Page'\nimport NotificationsTable from '../../components/notifications-table/NotificationsTable'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport {\n    PULL_INTERVAL,\n    ANALYTICS_TABLES_ENDPOINT,\n    ANALYTIC_TABLES_TASK_SUMMARY_ENDPOINT,\n    DEFAULT_LAST_YEARS,\n    LAST_YEARS_INPUT_KEY,\n    analyticsCheckboxes,\n    lastYearElements,\n} from '../analytics/analytics.conf'\nimport i18n from '../../locales'\nimport { i18nKeys } from '../../i18n'\nimport styles from '../Page.module.css'\n\nclass Analytics extends Page {\n    static STATE_PROPERTIES = [\n        'checkboxes',\n        'loading',\n        'lastYears',\n        'notifications',\n        'jobId',\n        'intervalId',\n    ]\n\n    constructor() {\n        super()\n\n        const checkboxes = {}\n        for (let i = 0; i < analyticsCheckboxes.length; i++) {\n            const checkbox = analyticsCheckboxes[i]\n            checkboxes[checkbox.key] = { checked: false }\n        }\n\n        this.state = {\n            checkboxes,\n            loading: false,\n            lastYears: DEFAULT_LAST_YEARS,\n            notifications: [],\n            jobId: null,\n            intervalId: null,\n        }\n\n        this.initAnalyticsTablesGeneration = this.initAnalyticsTablesGeneration.bind(\n            this\n        )\n        this.onChangeLastYears = this.onChangeLastYears.bind(this)\n    }\n\n    componentDidMount() {\n        this.requestTaskSummary()\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                Analytics.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    componentWillUnmount() {\n        super.componentWillUnmount()\n\n        this.cancelPoollingRequests()\n    }\n\n    cancelPoollingRequests() {\n        clearInterval(this.state.intervalId)\n    }\n\n    setLoadingPageState() {\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: LOADING,\n            },\n            pageState: {\n                loading: true,\n                notifications: [],\n            },\n        })\n    }\n\n    setLoadedPageWithErrorState(error) {\n        const messageError =\n            error && error.message\n                ? error.message\n                : i18n.t(i18nKeys.analytics.unexpectedError)\n        this.cancelPoollingRequests()\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: ERROR,\n                message: messageError,\n            },\n            pageState: {\n                loading: false,\n            },\n        })\n    }\n\n    areActionsDisabled() {\n        return this.state.loading\n    }\n\n    buildFormData() {\n        let formData = null\n        const checkboxKeys = Object.keys(this.state.checkboxes)\n        for (let i = 0; i < checkboxKeys.length; i++) {\n            const key = checkboxKeys[i]\n            const checked = this.state.checkboxes[key].checked\n            formData = formData || new FormData()\n            formData.append(key, checked)\n        }\n\n        if (this.state.lastYears !== DEFAULT_LAST_YEARS) {\n            formData.append(LAST_YEARS_INPUT_KEY, this.state.lastYears)\n        }\n\n        return formData\n    }\n\n    isAnalyzingTables = () => this.state.jobId && this.state.intervalId\n\n    startsPooling = () =>\n        setInterval(() => {\n            this.requestTaskSummary()\n        }, PULL_INTERVAL)\n\n    isJobInProgress = jobNotifications =>\n        jobNotifications.every(notification => !notification.completed)\n\n    initAnalyticsTablesGeneration() {\n        const api = this.context.d2.Api.getApi()\n        const formData = this.buildFormData()\n\n        this.setLoadingPageState()\n        api.post(ANALYTICS_TABLES_ENDPOINT, formData)\n            .then(response => {\n                if (this.isPageMounted() && response) {\n                    const jobId = response.response.id\n                    const intervalId = this.startsPooling()\n\n                    this.setState({\n                        jobId,\n                        intervalId,\n                    })\n                }\n            })\n            .catch(e => {\n                if (this.isPageMounted()) {\n                    this.setLoadedPageWithErrorState(e)\n                }\n            })\n    }\n\n    updateStateForInProgressJobAccordingTaskSummaryResponse = taskSummaryResponse => {\n        const notifications = taskSummaryResponse[this.state.jobId] || []\n        const completed = !this.isJobInProgress(notifications)\n\n        if (completed) {\n            this.cancelPoollingRequests()\n        }\n\n        this.context.updateAppState({\n            showSnackbar: !completed,\n            pageState: {\n                notifications,\n                loading: !completed,\n            },\n        })\n    }\n\n    verifyInProgressJobsForTaskSummaryResponseAndUpdateState = taskSummaryResponse => {\n        const jobIds = taskSummaryResponse\n            ? Object.keys(taskSummaryResponse)\n            : []\n\n        // looking for the most recent in progress job\n        for (let i = jobIds.length - 1; i >= 0; i--) {\n            const jobId = jobIds[i]\n            const notifications = taskSummaryResponse[jobId] || []\n\n            // found in progress job: show current notifications and starts pooling\n            if (this.isJobInProgress(notifications)) {\n                const intervalId = this.startsPooling()\n\n                this.context.updateAppState({\n                    showSnackbar: true,\n                    snackbarConf: {\n                        type: LOADING,\n                    },\n                    pageState: {\n                        notifications,\n                        loading: true,\n                        jobId,\n                        intervalId,\n                    },\n                })\n\n                break\n            }\n        }\n    }\n\n    requestTaskSummary() {\n        const api = this.context.d2.Api.getApi()\n        const lastId =\n            this.state.notifications && this.state.notifications.length > 0\n                ? this.state.notifications[0].uid\n                : null\n        const url = lastId\n            ? `${ANALYTIC_TABLES_TASK_SUMMARY_ENDPOINT}?lastId=${lastId}`\n            : `${ANALYTIC_TABLES_TASK_SUMMARY_ENDPOINT}`\n        api.get(url)\n            .then(taskSummaryResponse => {\n                /* not mounted finishes */\n                if (!this.isPageMounted()) {\n                    return\n                }\n\n                // showing current job\n                if (this.isAnalyzingTables()) {\n                    this.updateStateForInProgressJobAccordingTaskSummaryResponse(\n                        taskSummaryResponse\n                    )\n                    // so far no jobs is being processed, lets check if server is has any in progress job\n                } else {\n                    this.verifyInProgressJobsForTaskSummaryResponseAndUpdateState(\n                        taskSummaryResponse\n                    )\n                }\n            })\n            .catch(e => {\n                if (this.isPageMounted()) {\n                    this.setLoadedPageWithErrorState(e)\n                }\n            })\n    }\n\n    onChangeLastYears(event, index, value) {\n        this.setState({\n            lastYears: value,\n        })\n    }\n\n    toggleCheckbox = (initialCheckboxes, key) => () => {\n        const checkboxes = Object.assign({}, initialCheckboxes)\n        const checkboxState = checkboxes[key].checked\n        checkboxes[key].checked = !checkboxState\n        this.setState({ checkboxes })\n    }\n\n    renderCheckbox = checkbox => (\n        <GridTile\n            key={checkbox.key}\n            className={classNames('col-xs-12 col-md-6', styles.formControl)}\n        >\n            <Checkbox\n                label={i18n.t(checkbox.label)}\n                checked={this.state.checkboxes[checkbox.key].checked}\n                onCheck={this.toggleCheckbox(\n                    this.state.checkboxes,\n                    checkbox.key\n                )}\n                labelStyle={{ color: '#000000' }}\n                iconStyle={{ fill: '#000000' }}\n                disabled={this.areActionsDisabled()}\n            />\n        </GridTile>\n    )\n\n    render() {\n        const gridElements = analyticsCheckboxes.map(this.renderCheckbox)\n        return (\n            <div>\n                <h1>\n                    {i18n.t(i18nKeys.analytics.title)}\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                <Card className={styles.cardContainer}>\n                    <CardText>\n                        <h4 className={styles.uppercase}>\n                            {i18nKeys.analytics.analyticsTablesUpdateHeader}\n                        </h4>\n                        <div\n                            className={classNames(styles.gridContainer, 'row')}\n                        >\n                            {gridElements}\n                            <SelectField\n                                disabled={this.areActionsDisabled()}\n                                className=\"col-xs-12 col-md-6\"\n                                floatingLabelText={i18n.t(\n                                    i18nKeys.analytics.lastYearsLabel\n                                )}\n                                onChange={this.onChangeLastYears}\n                                value={this.state.lastYears}\n                                fullWidth\n                            >\n                                {lastYearElements.map(item => (\n                                    <MenuItem\n                                        key={item.key}\n                                        value={item.value}\n                                        primaryText={i18n.t(item.displayName)}\n                                    />\n                                ))}\n                            </SelectField>\n                        </div>\n                        <RaisedButton\n                            id={'startExportBtnId'}\n                            primary\n                            label={i18n.t(i18nKeys.analytics.actionButton)}\n                            onClick={this.initAnalyticsTablesGeneration}\n                            disabled={this.areActionsDisabled()}\n                        />\n                    </CardText>\n                </Card>\n                {this.state.notifications.length > 0 && (\n                    <Card className={styles.cardContainer}>\n                        <CardText>\n                            <NotificationsTable\n                                notifications={this.state.notifications}\n                            />\n                        </CardText>\n                    </Card>\n                )}\n            </div>\n        )\n    }\n}\n\nexport default Analytics\n","import DataIntegrity from './data-integrity/DataIntegrity'\nimport Maintenance from './maintenance/Maintenance'\nimport ResourceTables from './resource-tables/ResourceTables'\nimport DataStatistics from './data-statistics/DataStatistics'\nimport LockException from './lock-exception/LockException'\nimport MinMaxValueGeneration from './min-max-value-generation/MinMaxValueGeneration'\nimport Analytics from './analytics/Analytics'\nimport { i18nKeys } from '../i18n'\n\nexport const DATA_INTEGRITY_SECTION_KEY = 'dataIntegrity'\nexport const MAINTENANCE_SECTION_KEY = 'maintenance'\nexport const RESOURCE_TABLES_SECTION_KEY = 'resourceTables'\nexport const DATA_STATISTICS_SECTION_KEY = 'statistics'\nexport const LOCK_EXCEPTION_SECTION_KEY = 'lock'\nexport const MIN_MAX_VALUE_GENERATION_SECTION_KEY = 'minMax'\nexport const ANALYTICS_SECTION_KEY = 'analytics'\n\nexport const sections = [\n    {\n        key: DATA_INTEGRITY_SECTION_KEY,\n        path: '/data-integrity',\n        component: DataIntegrity,\n        info: {\n            label: i18nKeys.dataIntegrity.label,\n            icon: 'link',\n            description: i18nKeys.dataIntegrity.description,\n            actionText: i18nKeys.dataIntegrity.actionText,\n            docs: 'dataAdmin_dataIntegrity',\n        },\n    },\n    {\n        key: MAINTENANCE_SECTION_KEY,\n        path: '/maintenance',\n        component: Maintenance,\n        info: {\n            label: i18nKeys.maintenance.label,\n            icon: 'settings',\n            description: i18nKeys.maintenance.description,\n            actionText: i18nKeys.maintenance.actionText,\n            docs: 'data_admin_maintenance',\n        },\n    },\n    {\n        key: RESOURCE_TABLES_SECTION_KEY,\n        path: '/resourceTables',\n        component: ResourceTables,\n        info: {\n            label: i18nKeys.resourceTables.label,\n            icon: 'view_list',\n            description: i18nKeys.resourceTables.description,\n            actionText: i18nKeys.resourceTables.actionText,\n            docs: 'dataAdmin_resourceTables',\n        },\n    },\n    {\n        key: ANALYTICS_SECTION_KEY,\n        path: '/analytics',\n        component: Analytics,\n        info: {\n            label: i18nKeys.analytics.label,\n            icon: 'multiline_chart',\n            description: i18nKeys.analytics.description,\n            actionText: i18nKeys.analytics.actionText,\n            docs: 'generate_analytics_tables',\n        },\n    },\n    {\n        key: DATA_STATISTICS_SECTION_KEY,\n        path: '/data-statistics',\n        component: DataStatistics,\n        info: {\n            label: i18nKeys.dataStatistics.label,\n            icon: 'timeline',\n            description: i18nKeys.dataStatistics.description,\n            actionText: i18nKeys.dataStatistics.actionText,\n            docs: 'dataAdmin_dataStatistics',\n        },\n    },\n    {\n        key: LOCK_EXCEPTION_SECTION_KEY,\n        path: '/lock-exception',\n        component: LockException,\n        info: {\n            label: i18nKeys.lockException.label,\n            icon: 'lock',\n            description: i18nKeys.lockException.description,\n            actionText: i18nKeys.lockException.actionText,\n            docs: 'dataAdmin_lockException',\n        },\n    },\n    {\n        key: MIN_MAX_VALUE_GENERATION_SECTION_KEY,\n        path: '/min-max-value-generation',\n        component: MinMaxValueGeneration,\n        info: {\n            label: i18nKeys.minMaxValueGeneration.label,\n            icon: 'compare_arrows',\n            description: i18nKeys.minMaxValueGeneration.description,\n            actionText: i18nKeys.minMaxValueGeneration.actionText,\n            docs: 'dataAdmin_minMaxValueGeneration',\n        },\n    },\n]\n\nexport const getDocsKeyForSection = sectionKey => {\n    for (let i = 0; i < sections.length; i++) {\n        const section = sections[i]\n        if (section.key === sectionKey) {\n            return section.info.docs\n        }\n    }\n\n    return ''\n}\n","import React from 'react'\nimport classNames from 'classnames'\nimport GridSection from './grid-section/GridSection'\nimport { sections } from '../sections.conf'\nimport styles from './Home.module.css'\n\nconst Home = () => {\n    const gridElements = sections.map(section => (\n        <div\n            key={section.key}\n            className={classNames(\n                'col-sm-12 col-md-6 col-lg-4',\n                styles.gridContainer\n            )}\n        >\n            <GridSection key={section.key} section={section} />\n        </div>\n    ))\n\n    return (\n        <div id=\"grid-list-id\" className=\"row\">\n            {gridElements}\n        </div>\n    )\n}\n\nexport default Home\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nclass NoMatch extends PureComponent {\n    static propTypes = {\n        location: PropTypes.object.isRequired,\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>\n                    No match for <code>{this.props.location.pathname}</code>\n                </h3>\n            </div>\n        )\n    }\n}\n\nexport default NoMatch\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Route, Switch } from 'react-router-dom'\nimport Home from '../../pages/home/Home'\nimport NoMatch from './NoMatch'\nimport { sections } from '../../pages/sections.conf'\n\nconst AppRouter = ({ pageState }) => {\n    const routes = sections.map(section => {\n        const routeRender = () => {\n            const Page = section.component\n            return <Page sectionKey={section.key} {...pageState} />\n        }\n        return (\n            <Route\n                key={section.key}\n                exact\n                path={section.path}\n                render={routeRender}\n            />\n        )\n    })\n\n    /* Home route */\n    const homeRouteRender = () => <Home sectionKey=\"home\" />\n\n    routes.push(<Route key=\"home\" exact path=\"/\" render={homeRouteRender} />)\n\n    /* No Match Route */\n    routes.push(<Route key=\"no-match-route\" component={NoMatch} />)\n\n    return (\n        <main>\n            <Switch>{routes}</Switch>\n        </main>\n    )\n}\n\nAppRouter.propTypes = {\n    pageState: PropTypes.object,\n}\n\nAppRouter.defaultProps = {\n    pageState: {},\n}\n\nexport default AppRouter\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { withRouter } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\nimport HeaderBar from '@dhis2/d2-ui-header-bar'\nimport Sidebar from 'd2-ui/lib/sidebar/Sidebar.component'\nimport FeedbackSnackbar from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbar.component'\nimport { LOADING } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport CircularProgress from 'd2-ui/lib/circular-progress/CircularProgress'\nimport i18n from './locales'\nimport { injectTranslationsToD2 } from './configI18n'\nimport AppRouter from './components/app-router/AppRouter'\nimport { sections } from './pages/sections.conf'\nimport './custom-css/D2UISidebarOverrides.css'\nimport styles from './App.module.css'\n\nexport class DumbApp extends PureComponent {\n    static childContextTypes = {\n        showSnackbar: PropTypes.bool,\n        snackbarConf: PropTypes.shape({\n            type: PropTypes.string,\n            message: PropTypes.string,\n            duration: PropTypes.number,\n        }),\n        currentSection: PropTypes.string,\n        updateAppState: PropTypes.func,\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    constructor(props, context) {\n        super(props)\n\n        injectTranslationsToD2(context.d2)\n\n        this.state = {\n            currentSection: '',\n            showSnackbar: false,\n            snackbarConf: {\n                type: '',\n                message: '',\n            },\n        }\n\n        this.updateAppState = this.updateAppState.bind(this)\n    }\n\n    getChildContext() {\n        return {\n            showSnackbar: this.state.showSnackbar,\n            snackbarConf: this.state.snackbarConf,\n            currentSection: this.state.currentSection,\n            updateAppState: this.updateAppState,\n        }\n    }\n\n    updateAppState(appState) {\n        if (\n            appState.currentSection &&\n            !appState.pageState &&\n            this.state.currentSection !== appState.currentSection\n        ) {\n            // clear page state because we are updating page\n            this.setState({\n                ...appState,\n                pageState: undefined,\n                showSnackbar: false,\n            })\n        } else {\n            this.setState(appState)\n        }\n    }\n\n    showLoadingProgress() {\n        // FIXME: remove loading snackbar info and replace with loading state\n        return (\n            this.state.snackbarConf.type === LOADING && this.state.showSnackbar\n        )\n    }\n\n    render() {\n        const nonOnChangeSection = () => null\n        const translatedSections = sections.map(section =>\n            Object.assign(section, {\n                icon: section.info.icon,\n                label: i18n.t(section.info.label),\n                containerElement: <Link to={section.path} />,\n            })\n        )\n\n        const feedbackElement = this.showLoadingProgress() ? (\n            <div id={'circularLoadingId'} className={styles.centered}>\n                <CircularProgress />\n            </div>\n        ) : (\n            <span id={'feedbackSnackbarId'}>\n                <FeedbackSnackbar\n                    show={this.state.showSnackbar}\n                    conf={this.state.snackbarConf}\n                />\n            </span>\n        )\n\n        return (\n            <div>\n                <HeaderBar d2={this.context.d2} />\n                <Sidebar\n                    sections={translatedSections}\n                    currentSection={this.state.currentSection}\n                    onChangeSection={nonOnChangeSection}\n                />\n                <div className={styles.contentWrapper}>\n                    <div className={styles.contentArea}>\n                        <AppRouter pageState={this.state.pageState} />\n                    </div>\n                </div>\n                {feedbackElement}\n            </div>\n        )\n    }\n}\n\nexport default withRouter(DumbApp)\n","import Spacing from 'material-ui/styles/spacing'\nimport getMuiTheme from 'material-ui/styles/getMuiTheme'\nimport {\n    blue100,\n    blue700,\n    grey100,\n    grey400,\n    orange500,\n    orangeA200,\n    darkBlack,\n    white,\n} from 'material-ui/styles/colors'\nimport { fade } from 'material-ui/utils/colorManipulator'\n\nconst theme = {\n    spacing: Spacing,\n    fontFamily: 'Roboto, sans-serif',\n    palette: {\n        primary1Color: '#004ba0',\n        primary2Color: blue700,\n        primary3Color: blue100,\n        accent1Color: orange500,\n        accent2Color: grey100,\n        accent3Color: orangeA200,\n        textColor: darkBlack,\n        alternateTextColor: white,\n        canvasColor: white,\n        borderColor: grey400,\n        disabledColor: fade(darkBlack, 0.3),\n    },\n}\n\nconst muiTheme = getMuiTheme(theme)\n\nexport default muiTheme\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n)\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter } from 'react-router-dom'\nimport { getUserSettings } from 'd2/lib/d2'\nimport D2UIApp from 'd2-ui/lib/app/D2UIApp'\nimport log from 'loglevel'\nimport { configI18n } from './configI18n'\nimport App from './App'\nimport appTheme from './theme'\nimport * as serviceWorker from './serviceWorker'\nimport './index.css'\n\nconst { NODE_ENV, REACT_APP_DHIS2_BASE_URL } = process.env\nconst isProduction = NODE_ENV === 'production'\n\n/**\n * Configure logging\n */\n\nlog.setLevel(isProduction ? log.levels.INFO : log.levels.DEBUG)\n\n/**\n * Render app\n */\n\nReactDOM.render(\n    <D2UIApp\n        muiTheme={appTheme}\n        initConfig={{\n            baseUrl: `${REACT_APP_DHIS2_BASE_URL}/api`,\n            schemas: [\n                'organisationUnitLevel',\n                'organisationUnitGroup',\n                'organisationUnit',\n                'dataSet',\n            ],\n        }}\n    >\n        <HashRouter>\n            <App />\n        </HashRouter>\n    </D2UIApp>,\n    document.getElementById('root')\n)\n\ngetUserSettings().then(userSettings => {\n    const { keyUiLocale } = userSettings\n    sessionStorage.setItem('uiLocale', keyUiLocale || 'en')\n\n    configI18n(userSettings)\n})\n\n/**\n * If you want your app to work offline and load faster, you can change\n * unregister() to register() below. Note this comes with some pitfalls.\n * Learn more about service workers: https://bit.ly/CRA-PWA\n */\n\nserviceWorker.register()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"DataStatistics_header__p7foM\",\"card\":\"DataStatistics_card__mDPJ-\",\"maxWith\":\"DataStatistics_maxWith__2zNVC\",\"statisticsTable\":\"DataStatistics_statisticsTable__2XTkA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentArea\":\"App_contentArea__Y_GhT\",\"contentWrapper\":\"App_contentWrapper__32IM7\",\"leftBar\":\"App_leftBar__1mpSD\",\"maxWith\":\"App_maxWith__1vR49\",\"centered\":\"App_centered__2lsYq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"LockException_header__dyd3d\",\"lockExceptionsTable\":\"LockException_lockExceptionsTable__1paHO\",\"headerContainer\":\"LockException_headerContainer__3J2l-\",\"lockExceptionsTableHeader\":\"LockException_lockExceptionsTableHeader__1jVaZ\",\"lockExceptionDialog\":\"LockException_lockExceptionDialog__sTCQv\",\"actionButton\":\"LockException_actionButton__GxV5Y\",\"marginForAddButton\":\"LockException_marginForAddButton___jM6B\",\"backArrowIcon\":\"LockException_backArrowIcon__bqYJA\",\"headerDivider\":\"LockException_headerDivider__1Jmw9\",\"subHeader\":\"LockException_subHeader__2eaI_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MinMaxValueGeneration_header__fUpSR\",\"container\":\"MinMaxValueGeneration_container__1-7C3\",\"label\":\"MinMaxValueGeneration_label__tiRs1\",\"left\":\"MinMaxValueGeneration_left__2GQh_\",\"right\":\"MinMaxValueGeneration_right__3ZlgU\",\"tree\":\"MinMaxValueGeneration_tree__1ZHiH\",\"select\":\"MinMaxValueGeneration_select__3vyVQ\",\"options\":\"MinMaxValueGeneration_options__3UKne\",\"actionButton\":\"MinMaxValueGeneration_actionButton__20YMs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ResourceTables_description__2hLwQ\",\"tableName\":\"ResourceTables_tableName__lXb9P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"DataIntegrityCard_card__2aV7f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"DataIntegrity_header__14PbW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridContainer\":\"Home_gridContainer__2RzmA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"uppercase\":\"Page_uppercase__3aXaa\",\"gridContainer\":\"Page_gridContainer__m1quO\",\"formControl\":\"Page_formControl__25tWj\",\"cardContainer\":\"Page_cardContainer__15_ZW\"};"],"sourceRoot":""}