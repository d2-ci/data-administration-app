{"version":3,"sources":["pages/data-statistics/DataStatistics.module.css","App.module.css","pages/data-integrity/data-integrity-card/DataIntegrityCard.module.css","pages/lock-exception/LockException.module.css","pages/min-max-value-generation/MinMaxValueGeneration.module.css","pages/data-integrity/DataIntegrity.module.css","pages/home/Home.module.css","pages/resource-tables/ResourceTables.module.css","pages/Page.module.css","locales/index.js","i18n.js","configI18n.js","pages/home/grid-section/GridSection.js","pages/data-integrity/data.integrity.conf.js","pages/Page.js","pages/data-integrity/data-integrity-card/DataIntegrityCard.js","helpers/docs.js","components/page-helper/PageHelper.js","pages/data-integrity/DataIntegrity.js","pages/maintenance/maintenance.conf.js","pages/maintenance/Maintenance.js","components/notifications-table/notifications-table.conf.js","components/notifications-table/NotificationsTable.js","pages/resource-tables/resource-tables.conf.js","pages/resource-tables/ResourceTables.js","components/formatters/FormattedNumber.js","pages/data-statistics/DataStatisticsTable.js","pages/data-statistics/DataStatistics.js","pages/lock-exception/AddLockExceptionForm.js","helpers/pagination.js","pages/lock-exception/LockException.js","pages/min-max-value-generation/MinMaxValueGeneration.js","pages/analytics/analytics.conf.js","pages/analytics/Analytics.js","pages/sections.conf.js","pages/home/Home.js","components/app-router/NoMatch.js","components/app-router/AppRouter.js","App.js","theme.js","serviceWorker.js","index.js","pages/home/grid-section/GridSection.module.css","pages/lock-exception/AddLockExceptionForm.module.css"],"names":["module","exports","header","card","maxWith","statisticsTable","contentArea","contentWrapper","leftBar","centered","cardText","lockExceptionsTable","headerContainer","lockExceptionsTableHeader","lockExceptionDialog","actionButton","marginForAddButton","backArrowIcon","headerDivider","subHeader","container","label","left","right","tree","select","options","gridContainer","description","tableName","uppercase","formControl","cardContainer","namespace","moment","locale","i18n","addResources","arTranslations","ar_EGTranslations","ar_IQTranslations","ar_SDTranslations","bnTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","mnTranslations","myTranslations","nbTranslations","neTranslations","nlTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","rwTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","changeLanguage","i18nKeys","dataIntegrity","title","t","actionText","performing","unexpectedError","dataElementsWithoutDataSet","dataElementsWithoutGroups","dataElementsViolatingExclusiveGroupSets","dataElementsAssignedToDataSetsWithDifferentPeriodTypes","dataSetsNotAssignedToOrganisationUnits","indicatorsWithIdenticalFormulas","indicatorsWithoutGroups","invalidIndicatorNumerators","invalidIndicatorDenominators","indicatorsViolatingExclusiveGroupSets","organisationUnitsWithCyclicReferences","orphanedOrganisationUnits","organisationUnitsWithoutGroups","organisationUnitsViolatingExclusiveGroupSets","organisationUnitGroupsWithoutGroupSets","validationRulesWithoutGroups","invalidValidationRuleLeftSideExpressions","invalidValidationRuleRightSideExpressions","invalidProgramIndicatorExpressions","invalidProgramIndicatorFilters","dataElementsInDataSetNotInForm","invalidCategoryCombos","duplicatePeriods","programRulesWithNoCondition","programRulesWithNoAction","programRulesWithNoPriority","programRuleVariablesWithNoDataElement","programRuleVariablesWithNoAttribute","programRuleActionsWithNoDataObject","programRuleActionsWithNoNotification","programRuleActionsWithNoSectionId","programRuleActionsWithNoStageId","programIndicatorsWithNoExpression","maintenance","actionPerformed","analyticsTableClear","analyticsTableAnalyze","zeroDataValueRemoval","softDeletedDataValueRemoval","softDeletedEventRemoval","softDeletedEnrollmentRemoval","softDeletedTrackedEntityInstanceRemoval","periodPruning","expiredInvitationsClear","sqlViewsDrop","sqlViewsCreate","categoryOptionComboUpdate","ouPathsUpdate","cacheClear","appReload","resourceTables","organisationUnitStructure","organistionUnitCategoryOptionCombo","categoryOptionGroupSetStructure","dataElementGroupSetStructure","indicatorGroupSetStructure","organisationUnitGroupSetStructure","categoryStructure","dataElementCategoryOptionComboName","dataElementStructure","periodStructure","dataPeriodStructure","dataElementCategoryOptionCombinations","dataStatistics","loadingMessage","errorMessage","noDataMessage","objectType","lastHour","today","last","days","usersLoggedIn","userAccountInvitations","pedingInvitations","expiredInvitations","dataValues","events","objects","indicator","period","programStageInstance","organisationUnit","validationRule","dataValue","program","dataElement","organisationUnitGroup","reportTable","indicatorType","dataSet","userGroup","user","map","indicatorGroup","chart","dataElementGroup","dashboard","lockException","batchDeletionHeader","batchDeletionSubHeader","addLockExceptionFormTitle","cancelButton","addButton","addingMessage","removedMessage","addedMessage","confirmDeleteMessage","confirmButton","selectADataSet","updatingTree","organisationUnitsWithin","organisationUnitLevel","deselect","selectAll","deselectAll","name","show","remove","actions","ofPage","week","month","year","biMonth","day","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","janFeb","marApr","mayJun","julAug","sepOct","novDec","quarter","Q1","Q2","Q3","Q4","sixMonth","janJun","julDec","aprSep","octMar","selectOrganisationUnits","minMaxValueGeneration","notPossibleToLoadMessage","warningMessage","performingMessage","removingMessage","minMaxGenerationDone","minMaxRemovalDone","loadingDataSetsMessage","organisationUnitSelect","removeButton","analytics","skipAggregate","skipResourceTables","skipEvents","skipEnrollment","analyticsTablesUpdateHeader","lastYearsLabel","allLastYears","messages","d2UiComponents","settings","app_search_placeholder","profile","account","help","log_out","about_dhis2","manage_my_apps","no_results_found","interpretations","configI18n","userSettings","lang","keyUiLocale","code","langs","prefixed","c","concat","includes","filter","startsWith","length","isLangRTL","document","body","setAttribute","injectTranslationsToD2","d2","translations","translationKeys","Object","keys","i","key","assign","GridSection","react_default","a","createElement","react_router_dom","to","this","props","section","path","GridList","className","classNames","styles","gridElement","gridTitleBar","gridTitleDescription","info","FontIcon_default","gridIcon","icon","gridDescription","gridActionText","PureComponent","PAGE_TITLE","dataIntegrityControls","text","Page","pageMounted","context","currentSection","sectionKey","updateAppState","Component","contextTypes","PropTypes","object","loading","bool","string","func","Content","_ref","content","renderValue","value","Array","isArray","join","element","entries","_ref2","_ref3","slicedToArray","jsStyles","titleStyle","fontSize","fontWeight","errorStyles","titleColor","colors","red600","openIcon","closeIcon","iconStyle","noErrorStyles","green600","color","cursor","DataIntegrityCard","_ref4","elementsCount","countElements","sum","arr","reduce","acc","values","expandable","_ref5","openFontIcon","index_es","closeFontIcon","Card","data-test","issueTitle","issueElementsCount","actAsExpander","showExpandableButton","DataIntegrityCard_Content","defaultProps","getDocsVersion","major","minor","snapshot","PageHelper","_this$props","lng","sectionDocsKey","href","system","version","target","rel","tooltip","tooltipPosition","iconClassName","DataIntegrity","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","cards","intervalId","loaded","initDataIntegrityCheck","bind","assertThisInitialized","nextProps","nextState","forEach","property","hasOwnProperty","STATE_PROPERTIES","setState","get","prototype","cancelPullingRequests","clearInterval","showSnackbar","snackbarConf","type","LOADING","message","pageState","error","messageError","ERROR","_this2","api","Api","getApi","setLoadingPageState","post","then","response","isPageMounted","jobId","id","setInterval","requestTaskSummary","catch","e","setLoadedPageWithErrorState","_this3","url","_this4","runButton","onClick","primary","disabled","cardsToShow","errorElementskeys","control","conf","find","data_integrity_card_DataIntegrityCard","noErrors","indexOf","resultNoErrorElement","cardId","push","page_helper_PageHelper","getDocsKeyForSection","maintenanceCheckboxes","Maintenance","checkboxes","checked","performMaintenance","selectedCheckboxes","checkboxKeys","formData","FormData","append","buildFormData","SUCCESS","gridElements","checkbox","checkboxState","Checkbox_default","onCheck","labelStyle","fill","areActionsDisabled","RaisedButton_default","selectedCheckboxesCount","notificationsTableStyles","rowStyle","height","evenRowStyle","backgroundColor","timeColumnStyle","width","messageColumnStyle","successStyle","iconColor","errorStyle","infoStyle","notificationStyles","row","notificationStylesInfo","NotificationsTable","notifications","animateIncomplete","selectable","displayRowCheckbox","notification","index","displayBorder","style","level","dateFromServer","time","slice","notificationIconInfo","completed","renderNotificationIcon","PULL_INTERVAL","ResourceTable","isAnalyzingTables","startsPooling","isJobInProgress","jobNotifications","every","updateStateForInProgressJobAccordingTaskSummaryResponse","taskSummaryResponse","reverse","cancelPoollingRequests","x","objectSpread","verifyInProgressJobsForTaskSummaryResponseAndUpdateState","taskSummary","initResourceTablesGeneration","pageStyles","notifications_table_NotificationsTable","FormattedNumber","Intl","NumberFormat","sessionStorage","getItem","format","DataStatisticsTable","rows","elements","Table","formatters_FormattedNumber","count","displaySelectAll","adjustForCheckbox","enableSelectAll","stripedRows","TableCard","data_statistics_DataStatisticsTable","DataStatistics","hasTables","tables","constructor","objectCountsTableObjectToShowFromServerResponse","activeUsersTableObjectToShowFromServerResponse","userInvitationsTableObjectToShowFromServerResponse","dataValueCountsTableObjectToShowFromServerResponse","eventCountsTableObjectToShowFromServerResponse","noContent","display","DataStatistics_TableCard","objectCountsResponse","objectCountsKeys","objectCountsTable","translatedTimeLabelFromIntProperty","intProperty","lastLabel","daysLabel","activeUsersResponse","activeUsersKeys","activeUsersTable","parseInt","userInvitationsResponse","userInvitationsTable","dataValueCountsResponse","dataValueCountsKeys","dataValueCountsTable","eventCountsResponse","eventCountsKeys","eventCountsTable","d2UiSelectStyleOverride","minWidth","marginRight","AddLockExceptionForm","selected","orgUnitPaths","onDataSetChange","onPeriodChange","handleSelectionUpdate","handleOrgUnitClick","changeRoot","dataSetId","updateSeletedDataSetId","rootWithMembers","Promise","all","models","organisationUnits","list","paging","fields","memberCollection","memberObject","dataSets","rootWithDataSetMembers","dataSetMembers","toArray","ou","periodId","updateSelectedPeriodId","newSelection","updateSelectedOrgUnits","event","orgUnit","splice","currentRoot","dataSetItems","displayName","periodType","dataSetSelectLabel","dataSetSelectValue","selectsContainer","SelectField","items","onChange","PeriodPicker_component","onPickPeriod","Card_Card_default","organisationUnitTreeCard","CardText_default","organisationUnitTreeContainer","OrgUnitTree_component","root","initiallyExpanded","onSelectClick","onChangeCurrentRoot","orgUnitsPathsToInclude","ouLabel","OrgUnitSelectByLevel_component","levels","onUpdateSelection","OrgUnitSelectByGroup_component","groups","OrgUnitSelectAll_component","calculatePageValue","pager","pageSize","total","pageCount","pageCalculationValue","page","endItem","dialog","maxWidth","position","bottom","LockException","lockExceptions","showAddDialogOpen","selectedLockException","selectedOrgUnits","selectedDataSetId","selectedPeriodId","initialPager","atBatchDeletionPage","removeLockException","showLockExceptionFormDialog","closeLockExceptionFormDialog","addLockException","backToLockExceptions","goToBatchDeletionPage","onNextPageClick","onPreviousPageClick","data_set","organisation_unit","organisation_unit_group","organisation_unit_level","select_all","deselect_all","of_page","jan-feb","mar-apr","may-jun","jul-aug","sep-oct","nov-dec","jan-jun","jul-dec","apr-sep","oct-mar","lockExceptionResponse","le","organisationUnitId","IconButton_default","loadLockExceptionsForPager","userAction","deleteInProgress","addInProgress","loadedState","prepareLockExceptionsResponseToDataTable","loadLockExceptionCombinations","_this5","ACTION_MESSAGE","action","onActionClick","deleteUrl","delete","newPageState","existingLockException","_this6","order","_this7","addLockExceptionEnabled","orgUnitIds","orgUnitPath","orgUnitPathSplitted","split","_this8","currentlyShown","paginationProps","hasNextPage","hasPreviousPage","FlatButton_default","Boolean","pagination","Pagination_component","DataTable_component","columns","dataTableColumns","contextMenuActions","contextMenuIcons","Dialog_default","modal","open","contentStyle","onRequestClose","lock_exception_AddLockExceptionForm","FloatingActionButton_default","add_default","MinMaxValueGeneration","rootWithMember","dataSetsSelectedCount","dataSetsSelectRef","dataSetsSelectClick","generateMinMaxValueClick","removeMinMaxValueClick","loadData","organisationUnitsResponse","dataSetsResponse","ref","dataSetsSelect","selectedOptions","selectedOrganisationUnitSplitted","selectedOrganisationUnit","dataSetIds","WARNING","selectedOrgnisationUnit","multiple","isUserInteractionDisabled","item","hideMemberCount","isDataSetSelected","secondary","DEFAULT_LAST_YEARS","lastYearValues","lastYearElements","analyticsCheckboxes","Analytics","getUpdatedNotifications","toggleCheckbox","initialCheckboxes","renderCheckbox","lastYears","initAnalyticsTablesGeneration","onChangeLastYears","arguments","undefined","lastIndex","floatingLabelText","fullWidth","primaryText","sections","component","docs","ResourceTables","Home","grid_section_GridSection","NoMatch","location","pathname","AppRouter","routes","react_router","exact","render","home_Home","DumbApp","_PureComponent","inherits","createClass","appState","translatedSections","containerElement","feedbackElement","showLoadingProgress","CircularProgress","FeedbackSnackbar_component","HeaderBar","appName","Sidebar_component","onChangeSection","app_router_AppRouter","childContextTypes","shape","duration","number","withRouter","theme","spacing","Spacing","fontFamily","palette","primary1Color","primary2Color","blue700","primary3Color","blue100","accent1Color","orange500","accent2Color","grey100","accent3Color","orangeA200","textColor","darkBlack","alternateTextColor","white","canvasColor","borderColor","grey400","disabledColor","fade","muiTheme","getMuiTheme","isLocalhost","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","process","NODE_ENV","REACT_APP_DHIS2_BASE_URL","isProduction","setLevel","INFO","DEBUG","baseUrl","apiVersion","ReactDOM","build_es","D2UIApp","appTheme","initConfig","schemas","CssReset","App","getElementById","getUserSettings","setItem","URL","origin","addEventListener","fetch","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6fcb1a1d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"DataStatistics_header__p7foM\",\"card\":\"DataStatistics_card__mDPJ-\",\"maxWith\":\"DataStatistics_maxWith__2zNVC\",\"statisticsTable\":\"DataStatistics_statisticsTable__2XTkA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentArea\":\"App_contentArea__Y_GhT\",\"contentWrapper\":\"App_contentWrapper__32IM7\",\"leftBar\":\"App_leftBar__1mpSD\",\"maxWith\":\"App_maxWith__1vR49\",\"centered\":\"App_centered__2lsYq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"DataIntegrityCard_card__2aV7f\",\"cardText\":\"DataIntegrityCard_cardText__2F9Xr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"LockException_header__dyd3d\",\"lockExceptionsTable\":\"LockException_lockExceptionsTable__1paHO\",\"headerContainer\":\"LockException_headerContainer__3J2l-\",\"lockExceptionsTableHeader\":\"LockException_lockExceptionsTableHeader__1jVaZ\",\"lockExceptionDialog\":\"LockException_lockExceptionDialog__sTCQv\",\"actionButton\":\"LockException_actionButton__GxV5Y\",\"marginForAddButton\":\"LockException_marginForAddButton___jM6B\",\"backArrowIcon\":\"LockException_backArrowIcon__bqYJA\",\"headerDivider\":\"LockException_headerDivider__1Jmw9\",\"subHeader\":\"LockException_subHeader__2eaI_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MinMaxValueGeneration_header__fUpSR\",\"container\":\"MinMaxValueGeneration_container__1-7C3\",\"label\":\"MinMaxValueGeneration_label__tiRs1\",\"left\":\"MinMaxValueGeneration_left__2GQh_\",\"right\":\"MinMaxValueGeneration_right__3ZlgU\",\"tree\":\"MinMaxValueGeneration_tree__1ZHiH\",\"select\":\"MinMaxValueGeneration_select__3vyVQ\",\"options\":\"MinMaxValueGeneration_options__3UKne\",\"actionButton\":\"MinMaxValueGeneration_actionButton__20YMs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"DataIntegrity_header__14PbW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridContainer\":\"Home_gridContainer__2RzmA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ResourceTables_description__2hLwQ\",\"tableName\":\"ResourceTables_tableName__lXb9P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"uppercase\":\"Page_uppercase__3aXaa\",\"gridContainer\":\"Page_gridContainer__m1quO\",\"formControl\":\"Page_formControl__25tWj\",\"cardContainer\":\"Page_cardContainer__15_ZW\"};","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/bn';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/nb';\nimport 'moment/locale/nl';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport ar_EGTranslations from './ar_EG/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ar_SDTranslations from './ar_SD/translations.json';\nimport bnTranslations from './bn/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport mnTranslations from './mn/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport neTranslations from './ne/translations.json';\nimport nlTranslations from './nl/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport rwTranslations from './rw/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'data-admin-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_EG', namespace, ar_EGTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ar_SD', namespace, ar_SDTranslations);\ni18n.addResources('bn', namespace, bnTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('mn', namespace, mnTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('ne', namespace, neTranslations);\ni18n.addResources('nl', namespace, nlTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('rw', namespace, rwTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","import i18n from './locales'\n\n// The `i18n.t` calls in this file do not perform translation as the user's\n// locale is set asynchronously in `index.js`. They are included in this file\n// so that `d2-i18n-generate` can extract the string literals.\n\nexport const i18nKeys = {\n    dataIntegrity: {\n        title: i18n.t('Data Integrity'),\n        label: i18n.t('Data Integrity'),\n        description: i18n.t(\n            'Run data integrity checks and unveil anomalies and problems in the meta data setup.'\n        ),\n        actionText: i18n.t('Check Data Integrity'),\n        performing: i18n.t('Performing data integrity checks...'),\n        unexpectedError: i18n.t(\n            'An unexpected error happened during data integrity checks'\n        ),\n        actionButton: i18n.t('Run integrity checks'),\n        dataElementsWithoutDataSet: {\n            label: i18n.t('Data elements without data set'),\n        },\n        dataElementsWithoutGroups: {\n            label: i18n.t('Data elements without groups'),\n        },\n        dataElementsViolatingExclusiveGroupSets: {\n            label: i18n.t('Data elements violating exclusive group sets'),\n        },\n        dataElementsAssignedToDataSetsWithDifferentPeriodTypes: {\n            label: i18n.t(\n                'Data elements assigned to data sets with different period types'\n            ),\n        },\n        dataSetsNotAssignedToOrganisationUnits: {\n            label: i18n.t('Data sets not assigned to organisation units'),\n        },\n        indicatorsWithIdenticalFormulas: {\n            label: i18n.t('Indicators with identical formulas'),\n        },\n        indicatorsWithoutGroups: {\n            label: i18n.t('Indicators without groups'),\n        },\n        invalidIndicatorNumerators: {\n            label: i18n.t('Invalid indicator numerators'),\n        },\n        invalidIndicatorDenominators: {\n            label: i18n.t('Invalid indicator denominators'),\n        },\n        indicatorsViolatingExclusiveGroupSets: {\n            label: i18n.t('Indicators violating exclusive group sets'),\n        },\n        organisationUnitsWithCyclicReferences: {\n            label: i18n.t('Organisation units with cyclic references'),\n        },\n        orphanedOrganisationUnits: {\n            label: i18n.t('Orphaned organisation units'),\n        },\n        organisationUnitsWithoutGroups: {\n            label: i18n.t('Organisation units without groups'),\n        },\n        organisationUnitsViolatingExclusiveGroupSets: {\n            label: i18n.t('Organisation units violating exclusive group sets'),\n        },\n        organisationUnitGroupsWithoutGroupSets: {\n            label: i18n.t('Organisation unit groups without group sets'),\n        },\n        validationRulesWithoutGroups: {\n            label: i18n.t('Validation rules without groups'),\n        },\n        invalidValidationRuleLeftSideExpressions: {\n            label: i18n.t('Invalid validation rule left side expressions'),\n        },\n        invalidValidationRuleRightSideExpressions: {\n            label: i18n.t('Invalid validation rule right side expressions'),\n        },\n        invalidProgramIndicatorExpressions: {\n            label: i18n.t('Invalid program indicator expressions'),\n        },\n        invalidProgramIndicatorFilters: {\n            label: i18n.t('Invalid program indicator filters'),\n        },\n        dataElementsInDataSetNotInForm: {\n            label: i18n.t(\n                'There are data elements in the form, but not in the form or sections'\n            ),\n        },\n        invalidCategoryCombos: {\n            label: i18n.t('Invalid category combinations'),\n        },\n        duplicatePeriods: {\n            label: i18n.t('Duplicate periods'),\n        },\n        programRulesWithNoCondition: {\n            label: i18n.t('Program rules with no condition'),\n        },\n        programRulesWithNoAction: {\n            label: i18n.t('Program rules with no action'),\n        },\n        programRulesWithNoPriority: {\n            label: i18n.t('Program rules with no priority'),\n        },\n        programRuleVariablesWithNoDataElement: {\n            label: i18n.t('Program rule variables with no data element'),\n        },\n        programRuleVariablesWithNoAttribute: {\n            label: i18n.t('Program rule variables with no attribute'),\n        },\n        programRuleActionsWithNoDataObject: {\n            label: i18n.t('Program rule actions with no data object'),\n        },\n        programRuleActionsWithNoNotification: {\n            label: i18n.t('Program rule actions with no notification'),\n        },\n        programRuleActionsWithNoSectionId: {\n            label: i18n.t('Program rule actions with no section id'),\n        },\n        programRuleActionsWithNoStageId: {\n            label: i18n.t('Program rule actions with no stage id'),\n        },\n        programIndicatorsWithNoExpression: {\n            label: 'Program indicators wit no expression',\n        },\n    },\n    maintenance: {\n        title: i18n.t('Maintenance'),\n        label: i18n.t('Maintenance'),\n        description: i18n.t(\n            'Perform maintenance tasks and generate resource database tables for the organisation unit hierarchy and group set structure.'\n        ),\n        actionText: i18n.t('Perform Maintenance'),\n        actionButton: i18n.t('Perform maintenance'),\n        performing: i18n.t('Performing Maintenance...'),\n        actionPerformed: i18n.t('Maintenance done'),\n        unexpectedError: i18n.t(\n            'An unexpected error happened during maintenance'\n        ),\n        analyticsTableClear: i18n.t('Clear analytics tables'),\n        analyticsTableAnalyze: i18n.t('Analyze analytics tables'),\n        zeroDataValueRemoval: i18n.t('Remove zero data values'),\n        softDeletedDataValueRemoval: i18n.t(\n            'Permanently remove soft deleted data values'\n        ),\n        softDeletedEventRemoval: i18n.t(\n            'Permanently remove soft deleted events'\n        ),\n        softDeletedEnrollmentRemoval: i18n.t(\n            'Permanently remove soft deleted enrollments'\n        ),\n        softDeletedTrackedEntityInstanceRemoval: i18n.t(\n            'Permanently remove soft deleted tracked entity instances'\n        ),\n        periodPruning: i18n.t('Prune periods'),\n        expiredInvitationsClear: i18n.t('Remove expired invitations'),\n        sqlViewsDrop: i18n.t('Drop SQL views'),\n        sqlViewsCreate: i18n.t('Create SQL views'),\n        categoryOptionComboUpdate: i18n.t(\n            'Update category option combinations'\n        ),\n        ouPathsUpdate: i18n.t('Update organisation unit paths'),\n        cacheClear: i18n.t('Clear application cache'),\n        appReload: i18n.t('Reload apps'),\n    },\n    resourceTables: {\n        title: i18n.t('Resource Tables'),\n        label: i18n.t('Resource Tables'),\n        description: i18n.t(\n            'Generate resource database tables for the organisation unit hierarchy and group set structure among others.'\n        ),\n        actionText: i18n.t('Generate Resource Tables'),\n        actionButton: i18n.t('Generate tables'),\n        actionPerformed: i18n.t('Resource Tables generated'),\n        unexpectedError: i18n.t(\n            'An unexpected error happened during operation'\n        ),\n        organisationUnitStructure: i18n.t('Organisation unit structure'),\n        organistionUnitCategoryOptionCombo: i18n.t(\n            'Organisation unit category option combo'\n        ),\n        categoryOptionGroupSetStructure: i18n.t(\n            'Category option group set structure'\n        ),\n        dataElementGroupSetStructure: i18n.t(\n            'Data element group set structure'\n        ),\n        indicatorGroupSetStructure: i18n.t('Indicator group set structure'),\n        organisationUnitGroupSetStructure: i18n.t(\n            'Organisation unit group set structure'\n        ),\n        categoryStructure: i18n.t('Category structure'),\n        dataElementCategoryOptionComboName: i18n.t(\n            'Data element category option combo name'\n        ),\n        dataElementStructure: i18n.t('Data element structure'),\n        periodStructure: i18n.t('Period structure'),\n        dataPeriodStructure: i18n.t('Date period structure'),\n        dataElementCategoryOptionCombinations: i18n.t(\n            'Data element category option combinations'\n        ),\n    },\n    dataStatistics: {\n        title: i18n.t('Data Statistics'),\n        label: i18n.t('Data Statistics'),\n        description: i18n.t(\n            'Browse the number of objects in the database, like data elements, indicators, data sets and data values.'\n        ),\n        actionText: i18n.t('Overview Data Statistics'),\n        loadingMessage: i18n.t('Loading Data Statistics...'),\n        errorMessage: i18n.t('It was not possible to load Data Statistics'),\n        noDataMessage: i18n.t('No data to show.'),\n        objectType: i18n.t('Object type'),\n        lastHour: i18n.t('Last hour'),\n        today: i18n.t('Today'),\n        last: i18n.t('Last'),\n        days: i18n.t('days'),\n        usersLoggedIn: i18n.t('Users logged in'),\n        userAccountInvitations: i18n.t('User account invitations'),\n        pedingInvitations: i18n.t('Pending invitations'),\n        expiredInvitations: i18n.t('Expired invitations'),\n        dataValues: i18n.t('Data values'),\n        events: i18n.t('Events'),\n        objects: {\n            indicator: i18n.t('Indicators'),\n            period: i18n.t('Periods'),\n            programStageInstance: i18n.t('Events'),\n            organisationUnit: i18n.t('Organisation units'),\n            validationRule: i18n.t('Validation rules'),\n            dataValue: i18n.t('Data values'),\n            program: i18n.t('Programs'),\n            dataElement: i18n.t('Data elements'),\n            organisationUnitGroup: i18n.t('Organisation unit groups'),\n            reportTable: i18n.t('Pivot tables'),\n            indicatorType: i18n.t('Indicator types'),\n            dataSet: i18n.t('Data sets'),\n            userGroup: i18n.t('User groups'),\n            user: i18n.t('Users'),\n            map: i18n.t('Maps'),\n            indicatorGroup: i18n.t('Indicator groups'),\n            chart: i18n.t('Charts'),\n            dataElementGroup: i18n.t('Data element groups'),\n            dashboard: i18n.t('Dashboards'),\n        },\n    },\n    lockException: {\n        title: i18n.t('Lock Exception Management'),\n        batchDeletionHeader: i18n.t('Lock Exception'),\n        batchDeletionSubHeader: i18n.t('Batch Deletion'),\n        addLockExceptionFormTitle: i18n.t('Add new lock exception'),\n        label: i18n.t('Lock Exception'),\n        description: i18n.t(\n            'Add or remove exceptions to the the standard rules for locking of data entry forms.'\n        ),\n        actionText: i18n.t('Lock Exception Management'),\n        actionButton: i18n.t('Batch deletion'),\n        cancelButton: i18n.t('Cancel'),\n        addButton: i18n.t('Add'),\n        noDataMessage: i18n.t('No data to show.'),\n        loadingMessage: i18n.t('Loading Lock Exceptions...'),\n        addingMessage: i18n.t('Adding Lock Exception...'),\n        removedMessage: i18n.t('Lock Exception removed'),\n        addedMessage: i18n.t('Lock Exception Added'),\n        confirmDeleteMessage: i18n.t('Are you sure?'),\n        confirmButton: i18n.t('Confirm'),\n        selectADataSet: i18n.t('Select a Data Set'),\n        updatingTree: i18n.t('Updating Organisation Units Tree...'),\n        organisationUnitsWithin: i18n.t('For organisation units within'),\n        period: i18n.t('Period'),\n        dataSet: i18n.t('Data Set'),\n        organisationUnit: i18n.t('Organisation Unit'),\n        organisationUnitGroup: i18n.t('Organisation Unit Group'),\n        organisationUnitLevel: i18n.t('Organisation Unit Level'),\n        select: i18n.t('Select'),\n        deselect: i18n.t('Deselect'),\n        selectAll: i18n.t('Select All Org Units'),\n        deselectAll: i18n.t('Deselect All Org Units'),\n        name: i18n.t('Name'),\n        show: i18n.t('Show Details'),\n        remove: i18n.t('Remove'),\n        actions: i18n.t('Actions'),\n        ofPage: i18n.t('of'),\n        week: i18n.t('week'),\n        month: i18n.t('month'),\n        year: i18n.t('year'),\n        biMonth: i18n.t('bi monthly'),\n        day: i18n.t('day'),\n        jan: i18n.t('jan'),\n        feb: i18n.t('feb'),\n        mar: i18n.t('mar'),\n        apr: i18n.t('apr'),\n        may: i18n.t('may'),\n        jun: i18n.t('jun'),\n        jul: i18n.t('jul'),\n        aug: i18n.t('aug'),\n        sep: i18n.t('sep'),\n        oct: i18n.t('oct'),\n        nov: i18n.t('nov'),\n        dec: i18n.t('dec'),\n        janFeb: i18n.t('jan-feb'),\n        marApr: i18n.t('mar-apr'),\n        mayJun: i18n.t('may-jun'),\n        julAug: i18n.t('jul-aug'),\n        sepOct: i18n.t('sep-oct'),\n        novDec: i18n.t('nov-dec'),\n        quarter: i18n.t('quarter'),\n        Q1: i18n.t('Q1'),\n        Q2: i18n.t('Q2'),\n        Q3: i18n.t('Q3'),\n        Q4: i18n.t('Q4'),\n        sixMonth: i18n.t('six monthly'),\n        janJun: i18n.t('jan-jun'),\n        julDec: i18n.t('jul-dec'),\n        aprSep: i18n.t('apr-sep'),\n        octMar: i18n.t('oct-mar'),\n        selectOrganisationUnits: i18n.t('For all organisation units:'),\n    },\n    minMaxValueGeneration: {\n        title: i18n.t('Min-Max Value Generation'),\n        label: i18n.t('Min-Max Value Generation'),\n        description: i18n.t(\n            'Generate min-max values which can be used for data validation during data entry and validation processes.'\n        ),\n        actionText: i18n.t('Generate Min-Max Value'),\n        notPossibleToLoadMessage: i18n.t('It was not possible to load data'),\n        warningMessage: i18n.t('Select Data set and Organisation Unit'),\n        performingMessage: i18n.t('Doing Min Max generation...'),\n        removingMessage: i18n.t('Removing Min Max generation...'),\n        minMaxGenerationDone: i18n.t('Min Max generation done'),\n        minMaxRemovalDone: i18n.t('Min Max removal done'),\n        dataSet: i18n.t('Data Set'),\n        loadingDataSetsMessage: i18n.t('Loading data sets'),\n        organisationUnitSelect: i18n.t('Organisation Unit Selection'),\n        updatingTree: i18n.t('Updating Organisation Units Tree...'),\n        actionButton: i18n.t('Generate'),\n        removeButton: i18n.t('Remove'),\n    },\n    analytics: {\n        title: i18n.t('Analytics tables management'),\n        label: i18n.t('Analytics Tables'),\n        description: i18n.t(\n            'The data mart is a set of tables in the DHIS database which is used by all reporting and analysis tools to retrieve data from.'\n        ),\n        actionText: i18n.t('Analytics tables update'),\n        actionButton: i18n.t('Start export'),\n        skipAggregate: i18n.t(\n            'Skip generation of aggregate data and completeness data'\n        ),\n        skipResourceTables: i18n.t('Skip generation of resource tables'),\n        skipEvents: i18n.t('Skip generation of event data'),\n        skipEnrollment: i18n.t('Skip generation of enrollment data'),\n        analyticsTablesUpdateHeader: i18n.t('Analytics Tables Update'),\n        lastYearsLabel: i18n.t('Number of last years of data to include'),\n        allLastYears: i18n.t('[ All ]'),\n        unexpectedError: i18n.t(\n            'An unexpected error happened during maintenance'\n        ),\n    },\n    messages: {\n        unexpectedError: i18n.t(\n            'An unexpected error happened during operation'\n        ),\n    },\n    d2UiComponents: {\n        settings: i18n.t('Settings'),\n        app_search_placeholder: i18n.t('Search apps'),\n        profile: i18n.t('Profile'),\n        account: i18n.t('Account'),\n        help: i18n.t('Help'),\n        log_out: i18n.t('Log out'),\n        about_dhis2: i18n.t('About DHIS 2'),\n        manage_my_apps: i18n.t('Manage my apps'),\n        no_results_found: i18n.t('No results found'),\n        interpretations: i18n.t('Interpretations'),\n        messages: i18n.t('Messages'),\n    },\n}\n\nexport default i18nKeys\n","import i18n from './locales'\nimport { i18nKeys } from './i18n'\n\nconst isLangRTL = code => {\n    const langs = ['ar', 'fa', 'ur']\n    const prefixed = langs.map(c => `${c}-`)\n    return (\n        langs.includes(code) ||\n        prefixed.filter(c => code.startsWith(c)).length > 0\n    )\n}\n\nexport const configI18n = userSettings => {\n    const lang = userSettings.keyUiLocale\n    if (isLangRTL(lang)) {\n        document.body.setAttribute('dir', 'rtl')\n    }\n\n    i18n.changeLanguage(lang)\n}\n\nexport const injectTranslationsToD2 = d2 => {\n    if (d2) {\n        const translations = {}\n        const translationKeys = Object.keys(i18nKeys.d2UiComponents)\n        for (let i = 0; i < translationKeys.length; i++) {\n            const key = translationKeys[i]\n            translations[key] = i18n.t(i18nKeys.d2UiComponents[key])\n        }\n        Object.assign(d2.i18n.translations, translations)\n    }\n}\n\nexport default configI18n\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { GridTile } from 'material-ui/GridList'\nimport FontIcon from 'material-ui/FontIcon'\nimport classNames from 'classnames'\nimport i18n from '../../../locales'\nimport styles from './GridSection.module.css'\n\nclass GridSection extends PureComponent {\n    static propTypes = {\n        section: PropTypes.shape({\n            key: PropTypes.string,\n            path: PropTypes.string,\n            info: PropTypes.shape({\n                label: PropTypes.string,\n                description: PropTypes.string,\n                icon: PropTypes.string,\n                actionText: PropTypes.string,\n            }),\n        }).isRequired,\n    }\n\n    render() {\n        return (\n            <Link to={this.props.section.path}>\n                <GridTile\n                    key={this.props.section.key}\n                    className={classNames('section', styles.gridElement)}\n                >\n                    <div className={classNames('row', styles.gridTitleBar)}>\n                        <span\n                            className={classNames(\n                                'section-title',\n                                styles.gridTitleDescription\n                            )}\n                        >\n                            {this.props.section.info.label}\n                        </span>\n                        <FontIcon\n                            className={classNames(\n                                'material-icons',\n                                'icon',\n                                styles.gridIcon\n                            )}\n                        >\n                            {this.props.section.info.icon}\n                        </FontIcon>\n                    </div>\n                    <span\n                        className={classNames(\n                            'section-description',\n                            'row',\n                            styles.gridDescription\n                        )}\n                    >\n                        {i18n.t(this.props.section.info.description)}\n                    </span>\n                    <span\n                        className={classNames(\n                            'section-action-text',\n                            'row',\n                            styles.gridActionText\n                        )}\n                    >\n                        {i18n.t(this.props.section.info.actionText)}\n                    </span>\n                </GridTile>\n            </Link>\n        )\n    }\n}\n\nexport default GridSection\n","import { i18nKeys } from '../../i18n'\n\nexport const INIT_ENDPOINT = 'dataIntegrity'\nexport const PULL_INTERVAL = 5000\nexport const DATA_ENDPOINT = 'system/taskSummaries/DATA_INTEGRITY'\nexport const PAGE_TITLE = i18nKeys.dataIntegrity.title\n\nexport const dataIntegrityControls = [\n    {\n        key: 'dataElementsWithoutDataSet',\n        label: i18nKeys.dataIntegrity.dataElementsWithoutDataSet.label,\n        text: i18nKeys.dataIntegrity.dataElementsWithoutDataSet.text,\n    },\n    {\n        key: 'dataElementsWithoutGroups',\n        label: i18nKeys.dataIntegrity.dataElementsWithoutGroups.label,\n        text: i18nKeys.dataIntegrity.dataElementsWithoutGroups.text,\n    },\n    {\n        key: 'dataElementsViolatingExclusiveGroupSets',\n        label:\n            i18nKeys.dataIntegrity.dataElementsViolatingExclusiveGroupSets\n                .label,\n        text:\n            i18nKeys.dataIntegrity.dataElementsViolatingExclusiveGroupSets\n                .label,\n    },\n    {\n        key: 'dataElementsAssignedToDataSetsWithDifferentPeriodTypes',\n        label:\n            i18nKeys.dataIntegrity\n                .dataElementsAssignedToDataSetsWithDifferentPeriodTypes.label,\n        text:\n            i18nKeys.dataIntegrity\n                .dataElementsAssignedToDataSetsWithDifferentPeriodTypes.text,\n    },\n    {\n        key: 'dataSetsNotAssignedToOrganisationUnits',\n        label:\n            i18nKeys.dataIntegrity.dataSetsNotAssignedToOrganisationUnits.label,\n        text:\n            i18nKeys.dataIntegrity.dataSetsNotAssignedToOrganisationUnits.text,\n    },\n    {\n        key: 'indicatorsWithIdenticalFormulas',\n        label: i18nKeys.dataIntegrity.indicatorsWithIdenticalFormulas.label,\n        text: i18nKeys.dataIntegrity.indicatorsWithIdenticalFormulas.text,\n    },\n    {\n        key: 'indicatorsWithoutGroups',\n        label: i18nKeys.dataIntegrity.indicatorsWithoutGroups.label,\n        text: i18nKeys.dataIntegrity.indicatorsWithoutGroups.text,\n    },\n    {\n        key: 'invalidIndicatorNumerators',\n        label: i18nKeys.dataIntegrity.invalidIndicatorNumerators.label,\n        text: i18nKeys.dataIntegrity.invalidIndicatorNumerators.text,\n    },\n    {\n        key: 'invalidIndicatorDenominators',\n        label: i18nKeys.dataIntegrity.invalidIndicatorDenominators.label,\n        text: i18nKeys.dataIntegrity.invalidIndicatorDenominators.text,\n    },\n    {\n        key: 'indicatorsViolatingExclusiveGroupSets',\n        label:\n            i18nKeys.dataIntegrity.indicatorsViolatingExclusiveGroupSets.label,\n        text: i18nKeys.dataIntegrity.indicatorsViolatingExclusiveGroupSets.text,\n    },\n    {\n        key: 'organisationUnitsWithCyclicReferences',\n        label:\n            i18nKeys.dataIntegrity.organisationUnitsWithCyclicReferences.label,\n        text: i18nKeys.dataIntegrity.organisationUnitsWithCyclicReferences.text,\n    },\n    {\n        key: 'orphanedOrganisationUnits',\n        label: i18nKeys.dataIntegrity.orphanedOrganisationUnits.label,\n        text: i18nKeys.dataIntegrity.orphanedOrganisationUnits.text,\n    },\n    {\n        key: 'organisationUnitsWithoutGroups',\n        label: i18nKeys.dataIntegrity.organisationUnitsWithoutGroups.label,\n        text: i18nKeys.dataIntegrity.organisationUnitsWithoutGroups.text,\n    },\n    {\n        key: 'organisationUnitsViolatingExclusiveGroupSets',\n        label:\n            i18nKeys.dataIntegrity.organisationUnitsViolatingExclusiveGroupSets\n                .label,\n        text:\n            i18nKeys.dataIntegrity.organisationUnitsViolatingExclusiveGroupSets\n                .text,\n    },\n    {\n        key: 'organisationUnitGroupsWithoutGroupSets',\n        label:\n            i18nKeys.dataIntegrity.organisationUnitGroupsWithoutGroupSets.label,\n        text:\n            i18nKeys.dataIntegrity.organisationUnitGroupsWithoutGroupSets.text,\n    },\n    {\n        key: 'validationRulesWithoutGroups',\n        label: i18nKeys.dataIntegrity.validationRulesWithoutGroups.label,\n        text: i18nKeys.dataIntegrity.validationRulesWithoutGroups.text,\n    },\n    {\n        key: 'invalidValidationRuleLeftSideExpressions',\n        label:\n            i18nKeys.dataIntegrity.invalidValidationRuleLeftSideExpressions\n                .label,\n        text:\n            i18nKeys.dataIntegrity.invalidValidationRuleLeftSideExpressions\n                .text,\n    },\n    {\n        key: 'invalidValidationRuleRightSideExpressions',\n        label:\n            i18nKeys.dataIntegrity.invalidValidationRuleRightSideExpressions\n                .label,\n        text:\n            i18nKeys.dataIntegrity.invalidValidationRuleRightSideExpressions\n                .text,\n    },\n    {\n        key: 'invalidProgramIndicatorExpressions',\n        label: i18nKeys.dataIntegrity.invalidProgramIndicatorExpressions.label,\n    },\n    {\n        key: 'invalidProgramIndicatorFilters',\n        label: i18nKeys.dataIntegrity.invalidProgramIndicatorFilters.label,\n    },\n    {\n        key: 'dataElementsInDataSetNotInForm',\n        label: i18nKeys.dataIntegrity.dataElementsInDataSetNotInForm.label,\n    },\n    {\n        key: 'invalidCategoryCombos',\n        label: i18nKeys.dataIntegrity.invalidCategoryCombos.label,\n    },\n    {\n        key: 'duplicatePeriods',\n        label: i18nKeys.dataIntegrity.duplicatePeriods.label,\n    },\n    {\n        key: 'programRulesWithNoCondition',\n        label: i18nKeys.dataIntegrity.programRulesWithNoCondition.label,\n    },\n    {\n        key: 'programRulesWithNoAction',\n        label: i18nKeys.dataIntegrity.programRulesWithNoAction.label,\n    },\n    {\n        key: 'programRulesWithNoPriority',\n        label: i18nKeys.dataIntegrity.programRulesWithNoPriority.label,\n    },\n    {\n        key: 'programRuleVariablesWithNoDataElement',\n        label:\n            i18nKeys.dataIntegrity.programRuleVariablesWithNoDataElement.label,\n    },\n    {\n        key: 'programRuleVariablesWithNoAttribute',\n        label: i18nKeys.dataIntegrity.programRuleVariablesWithNoAttribute.label,\n    },\n    {\n        key: 'programRuleActionsWithNoDataObject',\n        label: i18nKeys.dataIntegrity.programRuleActionsWithNoDataObject.label,\n    },\n    {\n        key: 'programRuleActionsWithNoNotification',\n        label:\n            i18nKeys.dataIntegrity.programRuleActionsWithNoNotification.label,\n    },\n    {\n        key: 'programRuleActionsWithNoSectionId',\n        label: i18nKeys.dataIntegrity.programRuleActionsWithNoSectionId.label,\n    },\n    {\n        key: 'programRuleActionsWithNoStageId',\n        label: i18nKeys.dataIntegrity.programRuleActionsWithNoStageId.label,\n    },\n    {\n        key: 'programIndicatorsWithNoExpression',\n        label: i18nKeys.dataIntegrity.programIndicatorsWithNoExpression.label,\n    },\n]\n","import { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass Page extends Component {\n    static propTypes = {\n        sectionKey: PropTypes.string.isRequired,\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n        loading: PropTypes.bool,\n        currentSection: PropTypes.string,\n        updateAppState: PropTypes.func,\n    }\n\n    componentWillMount() {\n        this.pageMounted = true\n\n        // update section on side bar\n        if (this.context.currentSection !== this.props.sectionKey) {\n            this.context.updateAppState({\n                currentSection: this.props.sectionKey,\n            })\n        }\n    }\n\n    componentWillUnmount() {\n        this.pageMounted = false\n    }\n\n    isPageMounted() {\n        return this.pageMounted\n    }\n}\n\nexport default Page\n","import i18n from '@dhis2/d2-i18n'\nimport { colors } from '@dhis2/ui-constants'\nimport { FontIcon } from 'material-ui'\nimport { Card, CardText, CardHeader } from 'material-ui/Card'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styles from './DataIntegrityCard.module.css'\n\nconst Content = ({ content }) => {\n    const renderValue = value =>\n        Array.isArray(value) ? value.join(', ') : value\n\n    if (Array.isArray(content)) {\n        return content.map(element => (\n            <p key={element}>{renderValue(element)}</p>\n        ))\n    } else {\n        return Object.entries(content).map(([element, value]) => (\n            <div key={element}>\n                <h4>{element}</h4>\n                <p>{renderValue(value)}</p>\n            </div>\n        ))\n    }\n}\n\nconst jsStyles = {\n    titleStyle: {\n        fontSize: 16,\n        fontWeight: 'normal',\n    },\n}\n\nconst errorStyles = {\n    titleColor: colors.red600,\n    openIcon: 'keyboard_arrow_up',\n    closeIcon: 'keyboard_arrow_down',\n    iconStyle: {},\n}\n\nconst noErrorStyles = {\n    titleColor: colors.green600,\n    openIcon: 'done',\n    closeIcon: 'done',\n    iconStyle: {\n        color: colors.green600,\n        cursor: 'auto',\n    },\n}\n\nconst countElements = content => {\n    const sum = arr =>\n        arr.reduce((acc, element) => {\n            return acc + countElements(element)\n        }, 0)\n\n    if (Array.isArray(content)) {\n        return sum(content)\n    } else if (typeof content === 'object') {\n        return sum(Object.values(content))\n    } else {\n        return 1\n    }\n}\n\nconst DataIntegrityCard = ({ title, content }) => {\n    const elementsCount = countElements(content)\n    const expandable = elementsCount > 0\n    const { titleColor, openIcon, closeIcon, iconStyle } =\n        elementsCount > 0 ? errorStyles : noErrorStyles\n\n    const openFontIcon = (\n        <FontIcon className=\"material-icons\">{openIcon}</FontIcon>\n    )\n    const closeFontIcon = (\n        <FontIcon className=\"material-icons\">{closeIcon}</FontIcon>\n    )\n\n    return (\n        <Card className={styles.card}>\n            <CardHeader\n                title={\n                    <div data-test=\"issue-card-title\">\n                        {elementsCount > 0\n                            ? i18n.t(\n                                  '{{issueTitle}} ({{issueElementsCount}})',\n                                  {\n                                      issueTitle: title,\n                                      issueElementsCount: elementsCount,\n                                  }\n                              )\n                            : title}\n                    </div>\n                }\n                titleColor={titleColor}\n                titleStyle={jsStyles.titleStyle}\n                actAsExpander={expandable}\n                showExpandableButton={true}\n                closeIcon={closeFontIcon}\n                openIcon={openFontIcon}\n                iconStyle={iconStyle}\n            />\n            {elementsCount > 0 && (\n                <CardText className={styles.cardText} expandable={expandable}>\n                    <Content content={content} />\n                </CardText>\n            )}\n        </Card>\n    )\n}\n\nDataIntegrityCard.propTypes = {\n    title: PropTypes.string.isRequired,\n    content: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n}\n\nDataIntegrityCard.defaultProps = {\n    content: [],\n}\n\nexport default DataIntegrityCard\n","export const DOCS_LINK = 'https://docs.dhis2.org'\nexport const DOCS_TOOLTIP_LABEL = 'Open user guide'\n\n/**\n * Returns the \"version\" of the documentation that corresponds with the current dhis2 version.\n *\n * @param {Object} version - The version definition as provided by d2.system.version.\n * @param {number} version.minor - The minor dhis2 version. e.g. The 25 in 2.25.\n * @param {boolean} version.snapshot - True when the current version is the snapshot(master/development) branch.\n *\n * @returns {string} `master` for a snapshot branch. `25` for 2.25 etc.\n */\nexport const getDocsVersion = ({ major, minor, snapshot }) => {\n    if (snapshot) {\n        return 'master'\n    }\n    return `${major}.${minor}`\n}\n\nexport default getDocsVersion\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { IconButton } from 'material-ui'\nimport i18n from '../../locales'\nimport {\n    getDocsVersion,\n    DOCS_LINK,\n    DOCS_TOOLTIP_LABEL,\n} from '../../helpers/docs'\n\nclass PageHelper extends PureComponent {\n    static propTypes = {\n        lng: PropTypes.string,\n        sectionDocsKey: PropTypes.string.isRequired,\n    }\n\n    static defaultProps = {\n        lng: 'en',\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    render() {\n        const { d2 } = this.context\n        const { lng, sectionDocsKey } = this.props\n        return (\n            <IconButton\n                className=\"helper-icon\"\n                iconStyle={{ color: '#276696' }}\n                href={`${DOCS_LINK}/${getDocsVersion(\n                    d2.system.version\n                )}/${lng}/user/html/${sectionDocsKey}.html`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                tooltip={i18n.t(DOCS_TOOLTIP_LABEL)}\n                tooltipPosition=\"bottom-center\"\n                iconClassName=\"material-icons\"\n            >\n                help\n            </IconButton>\n        )\n    }\n}\n\nexport default PageHelper\n","import React from 'react'\nimport { RaisedButton } from 'material-ui'\nimport {\n    ERROR,\n    LOADING,\n} from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport * as conf from './data.integrity.conf'\nimport { i18nKeys } from '../../i18n'\nimport i18n from '../../locales'\nimport Page from '../Page'\nimport DataIntegrityCard from './data-integrity-card/DataIntegrityCard'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport styles from './DataIntegrity.module.css'\n\nclass DataIntegrity extends Page {\n    static STATE_PROPERTIES = ['cards', 'loaded', 'loading']\n\n    constructor() {\n        super()\n\n        this.state = {\n            cards: null,\n            intervalId: null,\n            loaded: false,\n            loading: false,\n        }\n\n        this.initDataIntegrityCheck = this.initDataIntegrityCheck.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                DataIntegrity.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    componentWillUnmount() {\n        super.componentWillUnmount()\n        this.cancelPullingRequests()\n    }\n\n    cancelPullingRequests() {\n        clearInterval(this.state.intervalId)\n    }\n\n    setLoadingPageState() {\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: LOADING,\n                message: i18n.t(i18nKeys.dataIntegrity.performing),\n            },\n            currentSection: this.props.sectionKey,\n            pageState: {\n                loaded: false,\n                loading: true,\n            },\n        })\n    }\n\n    setLoadedPageWithErrorState(error) {\n        const messageError =\n            error && error.message\n                ? error.message\n                : i18n.t(i18nKeys.dataIntegrity.unexpectedError)\n        this.cancelPullingRequests()\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: ERROR,\n                message: messageError,\n            },\n            currentSection: this.props.sectionKey,\n            pageState: {\n                loaded: true,\n                loading: false,\n            },\n        })\n    }\n\n    initDataIntegrityCheck() {\n        const api = this.context.d2.Api.getApi()\n        this.setLoadingPageState()\n        api.post(conf.INIT_ENDPOINT)\n            .then(response => {\n                if (this.isPageMounted() && response) {\n                    this.state.jobId = response.response.id\n                    this.state.intervalId = setInterval(() => {\n                        this.requestTaskSummary()\n                    }, conf.PULL_INTERVAL)\n                }\n            })\n            .catch(e => {\n                if (this.isPageMounted()) {\n                    this.setLoadedPageWithErrorState(e)\n                }\n            })\n    }\n\n    requestTaskSummary() {\n        const api = this.context.d2.Api.getApi()\n        const url = `${conf.DATA_ENDPOINT}/${this.state.jobId}`\n        api.get(url)\n            .then(response => {\n                if (this.isPageMounted()) {\n                    if (response) {\n                        this.cancelPullingRequests()\n                        this.context.updateAppState({\n                            showSnackbar: false,\n                            currentSection: this.props.sectionKey,\n                            pageState: {\n                                loaded: true,\n                                cards: response,\n                                loading: false,\n                            },\n                        })\n                    }\n                }\n            })\n            .catch(e => {\n                if (this.isPageMounted()) {\n                    this.setLoadedPageWithErrorState(e)\n                }\n            })\n    }\n\n    render() {\n        const runButton = (\n            <RaisedButton\n                id={'runDataIntegrityChecksBtnId'}\n                label={i18n.t(i18nKeys.dataIntegrity.actionButton)}\n                onClick={this.initDataIntegrityCheck}\n                primary\n                disabled={this.state.loading}\n            />\n        )\n        let cardsToShow = []\n        if (this.state.cards) {\n            const errorElementskeys = Object.keys(this.state.cards)\n            cardsToShow = errorElementskeys.map(element => {\n                const control = conf.dataIntegrityControls.find(\n                    control => control.key === element\n                )\n                if (!control) {\n                    return null\n                }\n                return (\n                    <DataIntegrityCard\n                        key={element}\n                        title={control.label}\n                        content={this.state.cards[element]}\n                    />\n                )\n            })\n            if (this.state.loaded) {\n                const noErrors = conf.dataIntegrityControls\n                    .filter(\n                        element => errorElementskeys.indexOf(element.key) < 0\n                    )\n                    .map(resultNoErrorElement => (\n                        <DataIntegrityCard\n                            cardId={`noErrorElement-${\n                                resultNoErrorElement.key\n                            }`}\n                            key={resultNoErrorElement.key}\n                            title={resultNoErrorElement.label}\n                            content={[]}\n                        />\n                    ))\n                cardsToShow.push(noErrors)\n            }\n        }\n        return (\n            <div>\n                <h1 className={styles.header}>\n                    {i18n.t(conf.PAGE_TITLE)}\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                {cardsToShow && cardsToShow.length > 0\n                    ? cardsToShow\n                    : runButton}\n            </div>\n        )\n    }\n}\n\nexport default DataIntegrity\n","import { i18nKeys } from '../../i18n'\n\nexport const MAINTENANCE_ENDPOINT = 'maintenance'\nexport const PAGE_TITLE = i18nKeys.maintenance.title\n\nexport const maintenanceCheckboxes = [\n    {\n        key: 'analyticsTableClear',\n        label: i18nKeys.maintenance.analyticsTableClear,\n    },\n    {\n        key: 'analyticsTableAnalyze',\n        label: i18nKeys.maintenance.analyticsTableAnalyze,\n    },\n    {\n        key: 'zeroDataValueRemoval',\n        label: i18nKeys.maintenance.zeroDataValueRemoval,\n    },\n    {\n        key: 'softDeletedDataValueRemoval',\n        label: i18nKeys.maintenance.softDeletedDataValueRemoval,\n    },\n    {\n        key: 'softDeletedEventRemoval',\n        label: i18nKeys.maintenance.softDeletedEventRemoval,\n    },\n    {\n        key: 'softDeletedEnrollmentRemoval',\n        label: i18nKeys.maintenance.softDeletedEnrollmentRemoval,\n    },\n    {\n        key: 'softDeletedTrackedEntityInstanceRemoval',\n        label: i18nKeys.maintenance.softDeletedTrackedEntityInstanceRemoval,\n    },\n    {\n        key: 'periodPruning',\n        label: i18nKeys.maintenance.periodPruning,\n    },\n    {\n        key: 'expiredInvitationsClear',\n        label: i18nKeys.maintenance.expiredInvitationsClear,\n    },\n    {\n        key: 'sqlViewsDrop',\n        label: i18nKeys.maintenance.sqlViewsDrop,\n    },\n    {\n        key: 'sqlViewsCreate',\n        label: i18nKeys.maintenance.sqlViewsCreate,\n    },\n    {\n        key: 'categoryOptionComboUpdate',\n        label: i18nKeys.maintenance.categoryOptionComboUpdate,\n    },\n    {\n        key: 'ouPathsUpdate',\n        label: i18nKeys.maintenance.ouPathsUpdate,\n    },\n    {\n        key: 'cacheClear',\n        label: i18nKeys.maintenance.cacheClear,\n    },\n    {\n        key: 'appReload',\n        label: i18nKeys.maintenance.appReload,\n    },\n]\n","import React from 'react'\nimport { GridTile } from 'material-ui/GridList'\nimport { Card, CardText } from 'material-ui/Card'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport Checkbox from 'material-ui/Checkbox'\nimport classNames from 'classnames'\nimport {\n    LOADING,\n    SUCCESS,\n    ERROR,\n} from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport i18n from '../../locales'\nimport { i18nKeys } from '../../i18n'\nimport Page from '../Page'\nimport {\n    maintenanceCheckboxes,\n    PAGE_TITLE,\n    MAINTENANCE_ENDPOINT,\n} from './maintenance.conf'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport styles from '../Page.module.css'\n\nclass Maintenance extends Page {\n    static STATE_PROPERTIES = ['checkboxes', 'loading']\n\n    constructor() {\n        super()\n\n        const checkboxes = {}\n\n        for (let i = 0; i < maintenanceCheckboxes.length; i++) {\n            const checkbox = maintenanceCheckboxes[i]\n            checkboxes[checkbox.key] = { checked: false }\n        }\n\n        this.state = {\n            intervalId: null,\n            checkboxes,\n            loading: false,\n        }\n\n        this.performMaintenance = this.performMaintenance.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                Maintenance.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    setLoadingPageState() {\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: LOADING,\n                message: i18n.t(i18nKeys.maintenance.performing),\n            },\n            pageState: {\n                loading: true,\n            },\n        })\n    }\n\n    setLoadedPageWithErrorState(error) {\n        const messageError =\n            error && error.message\n                ? error.message\n                : i18n.t(i18nKeys.maintenance.unexpectedError)\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: ERROR,\n                message: messageError,\n            },\n            pageState: {\n                loading: false,\n            },\n        })\n    }\n\n    selectedCheckboxesCount() {\n        let selectedCheckboxes = 0\n        const checkboxKeys = Object.keys(this.state.checkboxes)\n        for (let i = 0; i < checkboxKeys.length; i++) {\n            const key = checkboxKeys[i]\n            const checked = this.state.checkboxes[key].checked\n            if (checked) {\n                selectedCheckboxes += 1\n            }\n        }\n        return selectedCheckboxes\n    }\n\n    areActionsDisabled() {\n        return this.state.loading\n    }\n\n    buildFormData() {\n        let formData = null\n        const checkboxKeys = Object.keys(this.state.checkboxes)\n        for (let i = 0; i < checkboxKeys.length; i++) {\n            const key = checkboxKeys[i]\n            const checked = this.state.checkboxes[key].checked\n            formData = formData || new FormData()\n            formData.append(key, checked)\n        }\n\n        return formData\n    }\n\n    performMaintenance() {\n        const api = this.context.d2.Api.getApi()\n        const formData = this.buildFormData()\n\n        if (formData) {\n            this.setLoadingPageState()\n            api.post(MAINTENANCE_ENDPOINT, formData)\n                .then(() => {\n                    if (this.isPageMounted()) {\n                        this.context.updateAppState({\n                            showSnackbar: true,\n                            snackbarConf: {\n                                type: SUCCESS,\n                                message: i18n.t(\n                                    i18nKeys.maintenance.actionPerformed\n                                ),\n                            },\n                            pageState: {\n                                loading: false,\n                            },\n                        })\n                    }\n                })\n                .catch(error => {\n                    if (this.isPageMounted()) {\n                        this.setLoadedPageWithErrorState(error)\n                    }\n                })\n        }\n    }\n\n    render() {\n        const checkboxes = Object.assign({}, this.state.checkboxes)\n        const gridElements = maintenanceCheckboxes.map(checkbox => {\n            const checkboxState = checkboxes[checkbox.key].checked\n            const toggleCheckbox = () => {\n                checkboxes[checkbox.key].checked = !checkboxState\n                this.setState({ checkboxes })\n            }\n            return (\n                <GridTile\n                    key={checkbox.key}\n                    className={classNames(\n                        'col-xs-12 col-md-6 col-lg-4',\n                        styles.formControl\n                    )}\n                >\n                    <Checkbox\n                        label={i18n.t(checkbox.label)}\n                        checked={checkboxState}\n                        onCheck={toggleCheckbox}\n                        labelStyle={{ color: '#000000' }}\n                        iconStyle={{ fill: '#000000' }}\n                        disabled={this.areActionsDisabled()}\n                    />\n                </GridTile>\n            )\n        })\n\n        return (\n            <div>\n                <h1>\n                    {i18n.t(PAGE_TITLE)}\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                <Card id={'maintenanceContentContainerId'}>\n                    <CardText>\n                        <div\n                            className={classNames(styles.gridContainer, 'row')}\n                        >\n                            {gridElements}\n                        </div>\n                        <RaisedButton\n                            id={'performMaintenanceBtnId'}\n                            label={i18n.t(i18nKeys.maintenance.actionButton)}\n                            onClick={this.performMaintenance}\n                            primary\n                            disabled={\n                                this.areActionsDisabled() ||\n                                this.selectedCheckboxesCount() === 0\n                            }\n                        />\n                    </CardText>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default Maintenance\n","/* Notification Table Styles */\nexport const INFO_LEVEL = 'INFO'\nexport const ERROR_LEVEL = 'ERROR'\nexport const SUCCESS_LEVEL = 'SUCCESS'\n\nexport const SUCCESS_COLOR = '#8ac542'\nexport const INFO_COLOR = '#000000'\nexport const ERROR_COLOR = '#ff0000'\n\nexport const ERROR_NOTIFICATION_ICON = 'error'\nexport const SUCCESS_NOTIFICATION_ICON = 'check'\n\nconst FONT_SIZE = 14\n\nexport const notificationsTableStyles = {\n    iconStyle: {\n        fontSize: FONT_SIZE,\n    },\n    rowStyle: {\n        fontSize: FONT_SIZE,\n        height: 48,\n    },\n    evenRowStyle: {\n        backgroundColor: '#fafafa',\n    },\n    timeColumnStyle: {\n        width: '20%',\n    },\n    messageColumnStyle: {\n        width: '80%',\n    },\n    successStyle: {\n        color: SUCCESS_COLOR,\n        iconColor: SUCCESS_COLOR,\n        fontWeight: 'bold',\n    },\n    errorStyle: {\n        color: ERROR_COLOR,\n        iconColor: ERROR_COLOR,\n        fontWeight: 'bold',\n    },\n    infoStyle: {\n        color: INFO_COLOR,\n        iconColor: SUCCESS_COLOR,\n    },\n}\n\nconst notificationStyles = {}\n\nnotificationStyles[SUCCESS_LEVEL] = {\n    color: SUCCESS_COLOR,\n    icon: SUCCESS_NOTIFICATION_ICON,\n    row: Object.assign(\n        {},\n        notificationsTableStyles.rowStyle,\n        notificationsTableStyles.successStyle\n    ),\n}\n\nnotificationStyles[ERROR_LEVEL] = {\n    color: ERROR_COLOR,\n    icon: ERROR_NOTIFICATION_ICON,\n    row: Object.assign(\n        {},\n        notificationsTableStyles.rowStyle,\n        notificationsTableStyles.errorStyle\n    ),\n}\n\nnotificationStyles[INFO_LEVEL] = {\n    color: INFO_COLOR,\n    icon: SUCCESS_NOTIFICATION_ICON,\n    iconColor: SUCCESS_COLOR,\n    row: Object.assign(\n        {},\n        notificationsTableStyles.rowStyle,\n        notificationsTableStyles.infoStyle\n    ),\n}\n\nexport const notificationStylesInfo = notificationStyles\n\n/* helper methods */\n\n/* FIXME think of using an third party library for that, converting for a standard time format defined by design team */\nexport const formatDateFromServer = dateFromServer => {\n    if (dateFromServer) {\n        return `${dateFromServer.slice(0, 10)} ${dateFromServer.slice(11, 19)}`\n    }\n\n    return ''\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n    Table,\n    TableBody,\n    TableRow,\n    TableRowColumn,\n    FontIcon,\n} from 'material-ui'\nimport {\n    notificationsTableStyles,\n    notificationStylesInfo,\n    formatDateFromServer,\n} from './notifications-table.conf'\nimport './style.css'\n\nconst NotificationsTable = ({ notifications, animateIncomplete }) => {\n    const renderNotificationIcon = notification => {\n        const notificationIconInfo = notificationStylesInfo[notification.level]\n        if (\n            notificationIconInfo &&\n            notificationIconInfo.icon &&\n            notification.completed\n        ) {\n            return (\n                <FontIcon\n                    className=\"material-icons\"\n                    style={notificationsTableStyles.iconStyle}\n                    color={notificationIconInfo.iconColor}\n                >\n                    {notificationIconInfo.icon}\n                </FontIcon>\n            )\n        } else if (animateIncomplete && !notification.completed) {\n            return <span className=\"notification-icon-busy\">...</span>\n        }\n\n        return null\n    }\n\n    const renderNotificationRow = (notification, index) => (\n        <TableRow\n            key={index}\n            displayBorder={false}\n            style={Object.assign(\n                {},\n                notificationStylesInfo[notification.level].row,\n                (index + 1) % 2 === 0\n                    ? notificationsTableStyles.evenRowStyle\n                    : {}\n            )}\n        >\n            <TableRowColumn style={notificationsTableStyles.timeColumnStyle}>\n                {formatDateFromServer(notification.time)}\n            </TableRowColumn>\n            <TableRowColumn style={notificationsTableStyles.messageColumnStyle}>\n                {notification.message} {renderNotificationIcon(notification)}\n            </TableRowColumn>\n        </TableRow>\n    )\n\n    if (notifications && notifications.length > 0) {\n        return (\n            <Table selectable={false}>\n                <TableBody displayRowCheckbox={false}>\n                    {notifications.map(renderNotificationRow)}\n                </TableBody>\n            </Table>\n        )\n    }\n\n    return null\n}\n\nNotificationsTable.propTypes = {\n    notifications: PropTypes.arrayOf(\n        PropTypes.shape({\n            uid: PropTypes.string,\n            level: PropTypes.string,\n            time: PropTypes.string,\n            message: PropTypes.string,\n            completed: PropTypes.bool,\n        })\n    ).isRequired,\n}\n\nexport default NotificationsTable\n","export const RESOURCE_TABLES_ENDPOINT = 'resourceTables'\nexport const PULL_INTERVAL = 5000\nexport const RESOURCE_TABLES_TASK_SUMMARY_ENDPOINT =\n    'system/tasks/RESOURCE_TABLE'\n","import React from 'react'\nimport { Card, CardText } from 'material-ui/Card'\nimport { RaisedButton } from 'material-ui'\nimport {\n    ERROR,\n    LOADING,\n} from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport Page from '../Page'\nimport NotificationsTable from '../../components/notifications-table/NotificationsTable'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport {\n    PULL_INTERVAL,\n    RESOURCE_TABLES_ENDPOINT,\n    RESOURCE_TABLES_TASK_SUMMARY_ENDPOINT,\n} from '../resource-tables/resource-tables.conf'\nimport i18n from '../../locales'\nimport { i18nKeys } from '../../i18n'\nimport pageStyles from '../Page.module.css'\nimport styles from './ResourceTables.module.css'\n\nclass ResourceTable extends Page {\n    static STATE_PROPERTIES = ['loading', 'notifications', 'intervalId']\n\n    constructor() {\n        super()\n\n        this.state = {\n            loading: false,\n            notifications: [],\n            intervalId: null,\n        }\n\n        this.initResourceTablesGeneration = this.initResourceTablesGeneration.bind(\n            this\n        )\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                ResourceTable.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    componentDidMount() {\n        this.requestTaskSummary()\n    }\n\n    componentWillUnmount() {\n        super.componentWillUnmount()\n\n        this.cancelPoollingRequests()\n    }\n\n    cancelPoollingRequests() {\n        clearInterval(this.state.intervalId)\n    }\n\n    setLoadingPageState() {\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: LOADING,\n            },\n            pageState: {\n                loading: true,\n                notifications: [],\n            },\n        })\n    }\n\n    setLoadedPageWithErrorState(error) {\n        const messageError =\n            error && error.message\n                ? error.message\n                : i18n.t(i18nKeys.resourceTables.unexpectedError)\n        this.cancelPoollingRequests()\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: ERROR,\n                message: messageError,\n            },\n            pageState: {\n                loaded: true,\n                loading: false,\n            },\n        })\n    }\n\n    isAnalyzingTables = () => this.state.intervalId\n\n    startsPooling = () =>\n        setInterval(() => {\n            this.requestTaskSummary()\n        }, PULL_INTERVAL)\n\n    isJobInProgress = jobNotifications =>\n        jobNotifications.every(notification => !notification.completed)\n\n    initResourceTablesGeneration() {\n        const api = this.context.d2.Api.getApi()\n        this.setLoadingPageState()\n        api.post(RESOURCE_TABLES_ENDPOINT)\n            .then(response => {\n                if (this.isPageMounted() && response) {\n                    const intervalId = setInterval(() => {\n                        this.requestTaskSummary()\n                    }, PULL_INTERVAL)\n\n                    this.setState({\n                        intervalId,\n                    })\n                }\n            })\n            .catch(e => {\n                if (this.isPageMounted()) {\n                    this.setLoadedPageWithErrorState(e)\n                }\n            })\n    }\n\n    updateStateForInProgressJobAccordingTaskSummaryResponse = taskSummaryResponse => {\n        // reverse to sort oldest-newest\n        const notifications = (taskSummaryResponse || []).reverse()\n        const completed = !this.isJobInProgress(notifications)\n\n        if (completed) {\n            this.cancelPoollingRequests()\n        }\n\n        this.context.updateAppState({\n            showSnackbar: !completed,\n            pageState: {\n                // This process only has 2 steps. When the first comes in\n                // it is effectively the in-progress task\n                // When the process is completed we mark both steps as completed\n                notifications: !completed\n                    ? notifications\n                    : notifications.map(x => ({ ...x, completed: true })),\n                loading: !completed,\n            },\n        })\n    }\n\n    verifyInProgressJobsForTaskSummaryResponseAndUpdateState = taskSummaryResponse => {\n        const taskSummary = taskSummaryResponse || []\n        if (\n            taskSummaryResponse &&\n            taskSummaryResponse.length &&\n            this.isJobInProgress(taskSummary)\n        ) {\n            const intervalId = this.startsPooling()\n\n            this.context.updateAppState({\n                showSnackbar: true,\n                snackbarConf: {\n                    type: LOADING,\n                },\n                pageState: {\n                    // reverse to sort oldest-newest\n                    notifications: taskSummary.reverse(),\n                    loading: true,\n                    intervalId,\n                },\n            })\n        }\n    }\n\n    requestTaskSummary() {\n        const api = this.context.d2.Api.getApi()\n\n        api.get(RESOURCE_TABLES_TASK_SUMMARY_ENDPOINT)\n            .then(taskSummaryResponse => {\n                /* not mounted finishes */\n                if (!this.isPageMounted()) {\n                    return\n                }\n\n                // showing current job\n                if (this.isAnalyzingTables()) {\n                    this.updateStateForInProgressJobAccordingTaskSummaryResponse(\n                        taskSummaryResponse\n                    )\n                    // so far no jobs is being processed, lets check if server is has any in progress job\n                } else {\n                    this.verifyInProgressJobsForTaskSummaryResponseAndUpdateState(\n                        taskSummaryResponse\n                    )\n                }\n            })\n            .catch(e => {\n                if (this.isPageMounted()) {\n                    this.setLoadedPageWithErrorState(e)\n                }\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>\n                    {i18n.t(i18nKeys.resourceTables.title)}\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                <Card className={pageStyles.cardContainer}>\n                    <CardText>\n                        <div className={styles.description}>\n                            <div>\n                                {i18n.t(\n                                    i18nKeys.resourceTables\n                                        .organisationUnitStructure\n                                )}{' '}\n                                <span className={styles.tableName}>\n                                    (_orgunitstructure)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(\n                                    i18nKeys.resourceTables\n                                        .organistionUnitCategoryOptionCombo\n                                )}{' '}\n                                <span className={styles.tableName}>\n                                    (_orgunitstructure)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(\n                                    i18nKeys.resourceTables\n                                        .categoryOptionGroupSetStructure\n                                )}{' '}\n                                <span className={styles.tableName}>\n                                    (_categoryoptiongroupsetstructure)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(\n                                    i18nKeys.resourceTables\n                                        .dataElementGroupSetStructure\n                                )}{' '}\n                                <span className={styles.tableName}>\n                                    (_dataelementgroupsetstructure)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(\n                                    i18nKeys.resourceTables\n                                        .indicatorGroupSetStructure\n                                )}{' '}\n                                <span className={styles.tableName}>\n                                    (_indicatorgroupsetstructure)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(\n                                    i18nKeys.resourceTables\n                                        .organisationUnitGroupSetStructure\n                                )}{' '}\n                                <span className={styles.tableName}>\n                                    (_organisationunitgroupsetstructure)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(\n                                    i18nKeys.resourceTables.categoryStructure\n                                )}{' '}\n                                <span className={styles.tableName}>\n                                    (_categorystructure)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(\n                                    i18nKeys.resourceTables\n                                        .dataElementCategoryOptionComboName\n                                )}{' '}\n                                <span className={styles.tableName}>\n                                    (_categoryoptioncomboname)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(\n                                    i18nKeys.resourceTables.dataElementStructure\n                                )}{' '}\n                                <span className={styles.tableName}>\n                                    (_dataelementstructure)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(\n                                    i18nKeys.resourceTables.periodStructure\n                                )}{' '}\n                                <span className={styles.tableName}>\n                                    (_periodstructure)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(\n                                    i18nKeys.resourceTables.dataPeriodStructure\n                                )}{' '}\n                                <span className={styles.tableName}>\n                                    (_dateperiodstructure)\n                                </span>\n                            </div>\n                            <div>\n                                {i18n.t(\n                                    i18nKeys.resourceTables\n                                        .dataElementCategoryOptionCombinations\n                                )}{' '}\n                                <span className={styles.tableName}>\n                                    (_dataelementcategoryoptioncombo)\n                                </span>\n                            </div>\n                        </div>\n                        <RaisedButton\n                            id={'generateTablesBtnId'}\n                            primary\n                            label={i18n.t(i18nKeys.resourceTables.actionButton)}\n                            onClick={this.initResourceTablesGeneration}\n                            disabled={this.state.loading}\n                        />\n                    </CardText>\n                </Card>\n                {this.state.notifications.length > 0 && (\n                    <Card className={pageStyles.cardContainer}>\n                        <CardText>\n                            <NotificationsTable\n                                notifications={this.state.notifications}\n                                animateIncomplete\n                            />\n                        </CardText>\n                    </Card>\n                )}\n            </div>\n        )\n    }\n}\n\nexport default ResourceTable\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst FormattedNumber = props => (\n    <span>\n        {new Intl.NumberFormat(sessionStorage.getItem('uiLocale')).format(\n            props.value\n        )}\n    </span>\n)\n\nFormattedNumber.propTypes = {\n    value: PropTypes.number.isRequired,\n}\n\nexport default FormattedNumber\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n    Table,\n    TableBody,\n    TableHeader,\n    TableHeaderColumn,\n    TableRow,\n    TableRowColumn,\n} from 'material-ui/Table'\nimport FormattedNumber from '../../components/formatters/FormattedNumber'\nimport styles from './DataStatistics.module.css'\n\nclass DataStatisticsTable extends PureComponent {\n    static propTypes = {\n        label: PropTypes.string.isRequired,\n        elements: PropTypes.array.isRequired,\n    }\n\n    render() {\n        const rows = this.props.elements.map(element => (\n            <TableRow\n                key={element.label}\n                className={'data-statistics-table-row'}\n            >\n                <TableRowColumn>{element.label}</TableRowColumn>\n                <TableRowColumn>\n                    <FormattedNumber value={element.count} />\n                </TableRowColumn>\n            </TableRow>\n        ))\n\n        return (\n            <Table selectable={false} className={styles.statisticsTable}>\n                <TableHeader\n                    className={'data-statistics-table-header'}\n                    displaySelectAll={false}\n                    adjustForCheckbox={false}\n                    enableSelectAll={false}\n                >\n                    <TableRow>\n                        <TableHeaderColumn>\n                            {this.props.label}\n                        </TableHeaderColumn>\n                    </TableRow>\n                </TableHeader>\n                <TableBody displayRowCheckbox={false} stripedRows={false}>\n                    {rows}\n                </TableBody>\n            </Table>\n        )\n    }\n}\n\nexport default DataStatisticsTable\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Card, CardText } from 'material-ui/Card'\nimport {\n    LOADING,\n    ERROR,\n} from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport classNames from 'classnames'\nimport Page from '../Page'\nimport DataStatisticsTable from './DataStatisticsTable'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport i18n from '../../locales'\nimport { i18nKeys } from '../../i18n'\nimport styles from './DataStatistics.module.css'\n\nexport const OBJECT_COUNTS_KEY = 'objectCounts'\nexport const ACTIVE_USERS_KEY = 'activeUsers'\nexport const USER_INVITATIONS_KEY = 'userInvitations'\nexport const DATA_VALUE_COUNT_KEY = 'dataValueCount'\nexport const EVENT_COUNT_KEY = 'eventCount'\n\nconst PENDING_INVITATION_ALL_KEY = 'all'\nconst EXPIRED_INVITATION_KEY = 'expired'\n\nexport const TableCard = ({ label, elements }) => (\n    <Card className={classNames(styles.card, 'data-statistics-table')}>\n        <DataStatisticsTable label={label} elements={elements} />\n    </Card>\n)\n\nTableCard.propTypes = {\n    label: PropTypes.string.isRequired,\n    elements: PropTypes.array.isRequired,\n}\n\nclass DataStatistics extends Page {\n    static STATE_PROPERTIES = ['tables', 'loaded', 'loading']\n\n    constructor() {\n        super()\n\n        this.state = {\n            tables: {},\n            loaded: false,\n            loading: false,\n        }\n    }\n\n    // auxiliar functions\n    static objectCountsTableObjectToShowFromServerResponse = objectCountsResponse => {\n        if (objectCountsResponse) {\n            const objectCountsKeys = Object.keys(objectCountsResponse)\n            const objectCountsTable = {\n                label: i18n.t(i18nKeys.dataStatistics.objectType),\n                elements: [],\n            }\n\n            for (let i = 0; i < objectCountsKeys.length; i++) {\n                const key = objectCountsKeys[i]\n                objectCountsTable.elements.push({\n                    label: i18n.t(i18nKeys.dataStatistics.objects[key]),\n                    count: objectCountsResponse[key],\n                })\n            }\n\n            return objectCountsTable\n        }\n\n        return {}\n    }\n\n    static translatedTimeLabelFromIntProperty = intProperty => {\n        let label = i18n.t(i18nKeys.dataStatistics.lastHour)\n        if (intProperty === 1) {\n            label = i18n.t(i18nKeys.dataStatistics.today)\n        } else if (intProperty > 0) {\n            const lastLabel = i18n.t(i18nKeys.dataStatistics.last)\n            const daysLabel = i18n.t(i18nKeys.dataStatistics.days)\n            label = `${lastLabel} ${intProperty} ${daysLabel}`\n        }\n\n        return label\n    }\n\n    static activeUsersTableObjectToShowFromServerResponse = activeUsersResponse => {\n        if (activeUsersResponse) {\n            const activeUsersKeys = Object.keys(activeUsersResponse)\n            const activeUsersTable = {\n                label: i18n.t(i18nKeys.dataStatistics.usersLoggedIn),\n                elements: [],\n            }\n\n            for (let i = 0; i < activeUsersKeys.length; i++) {\n                const key = activeUsersKeys[i]\n                activeUsersTable.elements.push({\n                    label: DataStatistics.translatedTimeLabelFromIntProperty(\n                        parseInt(key, 10)\n                    ),\n                    count: activeUsersResponse[key],\n                })\n            }\n\n            return activeUsersTable\n        }\n\n        return {}\n    }\n\n    static userInvitationsTableObjectToShowFromServerResponse = userInvitationsResponse => {\n        if (userInvitationsResponse) {\n            const userInvitationsTable = {\n                label: i18n.t(i18nKeys.dataStatistics.userAccountInvitations),\n                elements: [],\n            }\n\n            if (\n                userInvitationsResponse.hasOwnProperty(\n                    PENDING_INVITATION_ALL_KEY\n                )\n            ) {\n                userInvitationsTable.elements.push({\n                    label: i18n.t(i18nKeys.dataStatistics.pedingInvitations),\n                    count: userInvitationsResponse[PENDING_INVITATION_ALL_KEY],\n                })\n            }\n\n            if (\n                userInvitationsResponse.hasOwnProperty(EXPIRED_INVITATION_KEY)\n            ) {\n                userInvitationsTable.elements.push({\n                    label: i18n.t(i18nKeys.dataStatistics.expiredInvitations),\n                    count: userInvitationsResponse[EXPIRED_INVITATION_KEY],\n                })\n            }\n\n            return userInvitationsTable\n        }\n\n        return {}\n    }\n\n    static dataValueCountsTableObjectToShowFromServerResponse = dataValueCountsResponse => {\n        if (dataValueCountsResponse) {\n            const dataValueCountsKeys = Object.keys(dataValueCountsResponse)\n            const dataValueCountsTable = {\n                label: i18n.t(i18nKeys.dataStatistics.dataValues),\n                elements: [],\n            }\n\n            for (let i = 0; i < dataValueCountsKeys.length; i++) {\n                const key = dataValueCountsKeys[i]\n                dataValueCountsTable.elements.push({\n                    label: DataStatistics.translatedTimeLabelFromIntProperty(\n                        parseInt(key, 10)\n                    ),\n                    count: dataValueCountsResponse[key],\n                })\n            }\n\n            return dataValueCountsTable\n        }\n\n        return {}\n    }\n\n    static eventCountsTableObjectToShowFromServerResponse = eventCountsResponse => {\n        if (eventCountsResponse) {\n            const eventCountsKeys = Object.keys(eventCountsResponse)\n            const eventCountsTable = {\n                label: i18n.t(i18nKeys.dataStatistics.events),\n                elements: [],\n            }\n\n            for (let i = 0; i < eventCountsKeys.length; i++) {\n                const key = eventCountsKeys[i]\n                eventCountsTable.elements.push({\n                    label: DataStatistics.translatedTimeLabelFromIntProperty(\n                        parseInt(key, 10)\n                    ),\n                    count: eventCountsResponse[key],\n                })\n            }\n\n            return eventCountsTable\n        }\n\n        return {}\n    }\n\n    componentDidMount() {\n        const api = this.context.d2.Api.getApi()\n\n        // request to GET statistics\n        if (!this.state.loading && !this.state.loaded) {\n            this.context.updateAppState({\n                showSnackbar: true,\n                snackbarConf: {\n                    type: LOADING,\n                    message: i18n.t(i18nKeys.dataStatistics.loadingMessage),\n                },\n                pageState: {\n                    loaded: false,\n                    tables: {},\n                    loading: true,\n                },\n            })\n\n            if (api) {\n                api.get('dataSummary')\n                    .then(response => {\n                        if (this.isPageMounted()) {\n                            const tables = {}\n                            tables[\n                                OBJECT_COUNTS_KEY\n                            ] = DataStatistics.objectCountsTableObjectToShowFromServerResponse(\n                                response[OBJECT_COUNTS_KEY]\n                            )\n                            tables[\n                                ACTIVE_USERS_KEY\n                            ] = DataStatistics.activeUsersTableObjectToShowFromServerResponse(\n                                response[ACTIVE_USERS_KEY]\n                            )\n                            tables[\n                                USER_INVITATIONS_KEY\n                            ] = DataStatistics.userInvitationsTableObjectToShowFromServerResponse(\n                                response[USER_INVITATIONS_KEY]\n                            )\n                            tables[\n                                DATA_VALUE_COUNT_KEY\n                            ] = DataStatistics.dataValueCountsTableObjectToShowFromServerResponse(\n                                response[DATA_VALUE_COUNT_KEY]\n                            )\n                            tables[\n                                EVENT_COUNT_KEY\n                            ] = DataStatistics.eventCountsTableObjectToShowFromServerResponse(\n                                response[EVENT_COUNT_KEY]\n                            )\n\n                            this.context.updateAppState({\n                                showSnackbar: false,\n                                pageState: {\n                                    loaded: true,\n                                    tables,\n                                    loading: false,\n                                },\n                            })\n                        }\n                    })\n                    .catch(() => {\n                        if (this.isPageMounted()) {\n                            this.context.updateAppState({\n                                showSnackbar: true,\n                                snackbarConf: {\n                                    type: ERROR,\n                                    message: i18n.t(\n                                        i18nKeys.dataStatistics.errorMessage\n                                    ),\n                                },\n                                pageState: {\n                                    loaded: true,\n                                    tables: {},\n                                    loading: false,\n                                },\n                            })\n                        }\n                    })\n            }\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                DataStatistics.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    hasTables = () =>\n        this.state.tables &&\n        this.state.tables.constructor === Object &&\n        Object.keys(this.state.tables).length > 0\n\n    render() {\n        const noContent = (\n            <Card style={{ display: !this.state.loading ? 'block' : 'none' }}>\n                <CardText>\n                    {i18n.t(i18nKeys.dataStatistics.noDataMessage)}\n                </CardText>\n            </Card>\n        )\n\n        return (\n            <div>\n                <h1 className={styles.header}>\n                    {i18n.t(i18nKeys.dataStatistics.title)}\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                {this.hasTables() ? (\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            {this.state.tables[OBJECT_COUNTS_KEY] && (\n                                <TableCard\n                                    label={\n                                        this.state.tables[OBJECT_COUNTS_KEY]\n                                            .label\n                                    }\n                                    elements={\n                                        this.state.tables[OBJECT_COUNTS_KEY]\n                                            .elements\n                                    }\n                                />\n                            )}\n                            {this.state.tables[ACTIVE_USERS_KEY] && (\n                                <TableCard\n                                    label={\n                                        this.state.tables[ACTIVE_USERS_KEY]\n                                            .label\n                                    }\n                                    elements={\n                                        this.state.tables[ACTIVE_USERS_KEY]\n                                            .elements\n                                    }\n                                />\n                            )}\n                        </div>\n                        <div className=\"col-md-6\">\n                            {this.state.tables[USER_INVITATIONS_KEY] && (\n                                <TableCard\n                                    label={\n                                        this.state.tables[USER_INVITATIONS_KEY]\n                                            .label\n                                    }\n                                    elements={\n                                        this.state.tables[USER_INVITATIONS_KEY]\n                                            .elements\n                                    }\n                                />\n                            )}\n                            {this.state.tables[DATA_VALUE_COUNT_KEY] && (\n                                <TableCard\n                                    label={\n                                        this.state.tables[DATA_VALUE_COUNT_KEY]\n                                            .label\n                                    }\n                                    elements={\n                                        this.state.tables[DATA_VALUE_COUNT_KEY]\n                                            .elements\n                                    }\n                                />\n                            )}\n                            {this.state.tables[EVENT_COUNT_KEY] && (\n                                <TableCard\n                                    label={\n                                        this.state.tables[EVENT_COUNT_KEY].label\n                                    }\n                                    elements={\n                                        this.state.tables[EVENT_COUNT_KEY]\n                                            .elements\n                                    }\n                                />\n                            )}\n                        </div>\n                    </div>\n                ) : (\n                    noContent\n                )}\n            </div>\n        )\n    }\n}\n\nexport default DataStatistics\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Card from 'material-ui/Card/Card'\nimport CardText from 'material-ui/Card/CardText'\nimport OrgUnitTree from 'd2-ui/lib/org-unit-tree/OrgUnitTree.component'\nimport OrgUnitSelectByLevel from 'd2-ui/lib/org-unit-select/OrgUnitSelectByLevel.component'\nimport OrgUnitSelectByGroup from 'd2-ui/lib/org-unit-select/OrgUnitSelectByGroup.component'\nimport OrgUnitSelectAll from 'd2-ui/lib/org-unit-select/OrgUnitSelectAll.component'\nimport SelectField from 'd2-ui/lib/select-field/SelectField'\nimport PeriodPicker from 'd2-ui/lib/period-picker/PeriodPicker.component'\nimport { ERROR } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport i18n from '../../locales'\nimport { i18nKeys } from '../../i18n'\nimport styles from './AddLockExceptionForm.module.css'\n\nconst d2UiSelectStyleOverride = {\n    minWidth: 360,\n    marginRight: 20,\n}\n\nclass AddLockExceptionForm extends Component {\n    static propTypes = {\n        levels: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\n            .isRequired,\n        groups: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\n            .isRequired,\n        dataSets: PropTypes.array.isRequired,\n        updateSelectedOrgUnits: PropTypes.func.isRequired,\n        updateSeletedDataSetId: PropTypes.func.isRequired,\n        updateSelectedPeriodId: PropTypes.func.isRequired,\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    constructor() {\n        super()\n\n        this.state = {\n            selected: [],\n            dataSet: null,\n            orgUnitPaths: null,\n        }\n\n        this.onDataSetChange = this.onDataSetChange.bind(this)\n\n        this.onPeriodChange = this.onPeriodChange.bind(this)\n\n        this.handleSelectionUpdate = this.handleSelectionUpdate.bind(this)\n        this.handleOrgUnitClick = this.handleOrgUnitClick.bind(this)\n        this.changeRoot = this.changeRoot.bind(this)\n    }\n\n    onDataSetChange(dataSet) {\n        const d2 = this.context.d2\n        const dataSetId = dataSet.id\n\n        if (\n            this.state.dataSet === null ||\n            dataSetId !== this.state.dataSet.id\n        ) {\n            this.props.updateSeletedDataSetId(dataSetId)\n\n            this.setState({\n                rootWithMembers: null,\n                selected: [],\n                dataSet,\n            })\n\n            Promise.all([\n                d2.models.organisationUnits.list({\n                    paging: false,\n                    level: 1,\n                    fields:\n                        'id,displayName,path,children::isNotEmpty,memberCount',\n                    memberCollection: 'dataSets',\n                    memberObject: dataSetId,\n                }),\n                d2.models.dataSets.get(dataSetId, {\n                    paging: false,\n                    fields: 'organisationUnits[id,path]',\n                }),\n            ])\n                .then(([rootWithDataSetMembers, dataSetMembers]) => {\n                    const rootWithMembers = rootWithDataSetMembers.toArray()[0]\n                    this.setState({\n                        rootWithMembers,\n                        selected: [],\n                        orgUnitPaths: dataSetMembers.organisationUnits\n                            .toArray()\n                            .map(ou => ou.path),\n                    })\n                })\n                .catch(error => {\n                    if (this.isPageMounted()) {\n                        const messageError =\n                            error && error.message\n                                ? error.message\n                                : i18n.t(i18nKeys.messages.unexpectedError)\n\n                        this.context.updateAppState({\n                            showSnackbar: true,\n                            loading: false,\n                            snackbarConf: {\n                                type: ERROR,\n                                message: messageError,\n                            },\n                            pageState: { ...this.state },\n                        })\n                    }\n                })\n        }\n    }\n\n    onPeriodChange(periodId) {\n        this.props.updateSelectedPeriodId(periodId)\n    }\n\n    handleSelectionUpdate(newSelection) {\n        this.setState({ selected: newSelection })\n        this.props.updateSelectedOrgUnits(this.state.selected)\n    }\n\n    handleOrgUnitClick(event, orgUnit) {\n        if (this.state.selected.includes(orgUnit.path)) {\n            const selected = this.state.selected\n            selected.splice(selected.indexOf(orgUnit.path), 1)\n            this.setState({ selected })\n        } else {\n            const selected = this.state.selected\n            selected.push(orgUnit.path)\n            this.setState({ selected })\n        }\n        this.props.updateSelectedOrgUnits(this.state.selected)\n    }\n\n    changeRoot(currentRoot) {\n        this.setState({ currentRoot })\n    }\n\n    render() {\n        const dataSetItems = this.props.dataSets.map(dataSet => ({\n            id: dataSet.id,\n            name: dataSet.displayName,\n            periodType: dataSet.periodType,\n        }))\n\n        let dataSetSelectLabel = i18n.t(i18nKeys.lockException.selectADataSet)\n        let dataSetSelectValue = null\n        if (this.state.dataSet) {\n            dataSetSelectLabel = i18n.t(i18nKeys.lockException.dataSet)\n            dataSetSelectValue = this.state.dataSet.id\n        }\n\n        return (\n            <div id={'addLockExceptionFormId'}>\n                <div className={styles.selectsContainer}>\n                    <SelectField\n                        style={d2UiSelectStyleOverride}\n                        label={dataSetSelectLabel}\n                        items={dataSetItems}\n                        onChange={this.onDataSetChange}\n                        value={dataSetSelectValue}\n                    />\n                    {this.state.dataSet && (\n                        <span id={'idPeriodPicker'}>\n                            <PeriodPicker\n                                periodType={this.state.dataSet.periodType}\n                                onPickPeriod={this.onPeriodChange}\n                            />\n                        </span>\n                    )}\n                </div>\n                {this.state.dataSet ? (\n                    <Card className={styles.organisationUnitTreeCard}>\n                        <CardText\n                            className={styles.organisationUnitTreeContainer}\n                        >\n                            <div className={styles.left}>\n                                {this.state.rootWithMembers ? (\n                                    <OrgUnitTree\n                                        root={this.state.rootWithMembers}\n                                        selected={this.state.selected}\n                                        currentRoot={this.state.currentRoot}\n                                        initiallyExpanded={[\n                                            `/${this.state.rootWithMembers.id}`,\n                                        ]}\n                                        memberCollection=\"dataSets\"\n                                        memberObject={this.state.dataSet.id}\n                                        onSelectClick={this.handleOrgUnitClick}\n                                        onChangeCurrentRoot={this.changeRoot}\n                                        orgUnitsPathsToInclude={\n                                            this.state.orgUnitPaths\n                                        }\n                                    />\n                                ) : (\n                                    <span>\n                                        {i18n.t(\n                                            i18nKeys.lockException.updatingTree\n                                        )}\n                                    </span>\n                                )}\n                            </div>\n                            <div className={styles.right}>\n                                <div>\n                                    {this.state.currentRoot ? (\n                                        <div>\n                                            {i18n.t(\n                                                i18nKeys.lockException\n                                                    .organisationUnitsWithin\n                                            )}{' '}\n                                            <span className={styles.ouLabel}>\n                                                {\n                                                    this.state.currentRoot\n                                                        .displayName\n                                                }\n                                            </span>\n                                            :\n                                        </div>\n                                    ) : (\n                                        <div>\n                                            {i18n.t(\n                                                i18nKeys.lockException\n                                                    .selectOrganisationUnits\n                                            )}\n                                        </div>\n                                    )}\n                                    <OrgUnitSelectByLevel\n                                        levels={this.props.levels}\n                                        selected={this.state.selected}\n                                        currentRoot={this.state.currentRoot}\n                                        onUpdateSelection={\n                                            this.handleSelectionUpdate\n                                        }\n                                    />\n                                    <OrgUnitSelectByGroup\n                                        groups={this.props.groups}\n                                        selected={this.state.selected}\n                                        currentRoot={this.state.currentRoot}\n                                        onUpdateSelection={\n                                            this.handleSelectionUpdate\n                                        }\n                                    />\n                                    <OrgUnitSelectAll\n                                        selected={this.state.selected}\n                                        currentRoot={this.state.currentRoot}\n                                        onUpdateSelection={\n                                            this.handleSelectionUpdate\n                                        }\n                                    />\n                                </div>\n                            </div>\n                        </CardText>\n                    </Card>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nexport default AddLockExceptionForm\n","export const calculatePageValue = pager => {\n    const pageSize = pager.pageSize\n    const { total, pageCount, page } = pager\n    const pageCalculationValue =\n        total - (total - (pageCount - (pageCount - page)) * pageSize)\n    const startItem = pageCalculationValue - pageSize + 1\n    const endItem = pageCalculationValue\n\n    return `${startItem} - ${endItem > total ? total : endItem}`\n}\n\nexport default calculatePageValue\n","import React from 'react'\nimport Dialog from 'material-ui/Dialog'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport FlatButton from 'material-ui/FlatButton'\nimport FontIcon from 'material-ui/FontIcon'\nimport IconButton from 'material-ui/IconButton'\nimport { Card, CardText } from 'material-ui/Card'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport DataTable from 'd2-ui/lib/data-table/DataTable.component'\nimport Pagination from 'd2-ui/lib/pagination/Pagination.component'\nimport {\n    LOADING,\n    SUCCESS,\n    ERROR,\n    ACTION_MESSAGE,\n} from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport classNames from 'classnames'\nimport Page from '../Page'\nimport AddLockExceptionForm from './AddLockExceptionForm'\nimport { calculatePageValue } from '../../helpers/pagination'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport i18n from '../../locales'\nimport { i18nKeys } from '../../i18n'\nimport '../../custom-css/D2UIDataTableOverrides.css'\nimport 'd2-ui/lib/css/Pagination.css'\nimport 'd2-ui/lib/css/DataTable.css'\nimport styles from './LockException.module.css'\n\nconst jsStyles = {\n    dialog: {\n        maxWidth: '80%',\n    },\n    addButton: {\n        position: 'fixed',\n        bottom: '1.5rem',\n        right: '1.5rem',\n    },\n}\n\nclass LockException extends Page {\n    static STATE_PROPERTIES = [\n        'lockExceptions',\n        'showAddDialogOpen',\n        'selectedLockException',\n        'levels',\n        'groups',\n        'dataSets',\n        'selectedOrgUnits',\n        'selectedDataSetId',\n        'selectedPeriodId',\n        'pager',\n        'loading',\n        'atBatchDeletionPage',\n    ]\n\n    static initialPager = {\n        pageSize: 20,\n        page: 1,\n        total: 0,\n        pageCount: 1,\n    }\n\n    constructor(props, context) {\n        super(props, context)\n\n        this.state = {\n            lockExceptions: [],\n            showAddDialogOpen: false,\n            selectedLockException: null,\n            levels: null,\n            groups: null,\n            dataSets: [],\n            selectedOrgUnits: [],\n            selectedDataSetId: null,\n            selectedPeriodId: null,\n            pager: LockException.initialPager,\n            loading: false,\n            loaded: false,\n            atBatchDeletionPage: false,\n        }\n\n        this.updateSelectedOrgUnits = this.updateSelectedOrgUnits.bind(this)\n        this.updateSeletedDataSetId = this.updateSeletedDataSetId.bind(this)\n        this.updateSelectedPeriodId = this.updateSelectedPeriodId.bind(this)\n        this.removeLockException = this.removeLockException.bind(this)\n        this.showLockExceptionFormDialog = this.showLockExceptionFormDialog.bind(\n            this\n        )\n        this.closeLockExceptionFormDialog = this.closeLockExceptionFormDialog.bind(\n            this\n        )\n        this.addLockException = this.addLockException.bind(this)\n        this.backToLockExceptions = this.backToLockExceptions.bind(this)\n        this.goToBatchDeletionPage = this.goToBatchDeletionPage.bind(this)\n        this.onNextPageClick = this.onNextPageClick.bind(this)\n        this.onPreviousPageClick = this.onPreviousPageClick.bind(this)\n\n        // FIXME Hack in some translations\n        const d2 = context.d2\n        Object.assign(d2.i18n.translations, {\n            period: i18n.t(i18nKeys.lockException.period),\n            data_set: i18n.t(i18nKeys.lockException.dataSet),\n            organisation_unit: i18n.t(i18nKeys.lockException.organisationUnit),\n            organisation_unit_group: i18n.t(\n                i18nKeys.lockException.organisationUnitGroup\n            ),\n            organisation_unit_level: i18n.t(\n                i18nKeys.lockException.organisationUnitLevel\n            ),\n            select: i18n.t(i18nKeys.lockException.select),\n            deselect: i18n.t(i18nKeys.lockException.deselect),\n            select_all: i18n.t(i18nKeys.lockException.selectAll),\n            deselect_all: i18n.t(i18nKeys.lockException.deselectAll),\n            name: i18n.t(i18nKeys.lockException.name),\n            show: i18n.t(i18nKeys.lockException.show),\n            remove: i18n.t(i18nKeys.lockException.remove),\n            actions: i18n.t(i18nKeys.lockException.actions),\n            of_page: i18n.t(i18nKeys.lockException.ofPage),\n            week: i18n.t(i18nKeys.lockException.week),\n            month: i18n.t(i18nKeys.lockException.month),\n            year: i18n.t(i18nKeys.lockException.year),\n            biMonth: i18n.t(i18nKeys.lockException.biMonth),\n            day: i18n.t(i18nKeys.lockException.day),\n            jan: i18n.t(i18nKeys.lockException.jan),\n            feb: i18n.t(i18nKeys.lockException.feb),\n            mar: i18n.t(i18nKeys.lockException.mar),\n            apr: i18n.t(i18nKeys.lockException.apr),\n            may: i18n.t(i18nKeys.lockException.may),\n            jun: i18n.t(i18nKeys.lockException.jun),\n            jul: i18n.t(i18nKeys.lockException.jul),\n            aug: i18n.t(i18nKeys.lockException.aug),\n            sep: i18n.t(i18nKeys.lockException.sep),\n            oct: i18n.t(i18nKeys.lockException.oct),\n            nov: i18n.t(i18nKeys.lockException.nov),\n            dec: i18n.t(i18nKeys.lockException.dec),\n            'jan-feb': i18n.t(i18nKeys.lockException.janFeb),\n            'mar-apr': i18n.t(i18nKeys.lockException.marApr),\n            'may-jun': i18n.t(i18nKeys.lockException.mayJun),\n            'jul-aug': i18n.t(i18nKeys.lockException.julAug),\n            'sep-oct': i18n.t(i18nKeys.lockException.sepOct),\n            'nov-dec': i18n.t(i18nKeys.lockException.novDec),\n            quarter: i18n.t(i18nKeys.lockException.quarter),\n            Q1: i18n.t(i18nKeys.lockException.Q1),\n            Q2: i18n.t(i18nKeys.lockException.Q2),\n            Q3: i18n.t(i18nKeys.lockException.Q3),\n            Q4: i18n.t(i18nKeys.lockException.Q4),\n            sixMonth: i18n.t(i18nKeys.lockException.sixMonth),\n            'jan-jun': i18n.t(i18nKeys.lockException.janJun),\n            'jul-dec': i18n.t(i18nKeys.lockException.julDec),\n            'apr-sep': i18n.t(i18nKeys.lockException.aprSep),\n            'oct-mar': i18n.t(i18nKeys.lockException.octMar),\n        })\n    }\n\n    prepareLockExceptionsResponseToDataTable(lockExceptionResponse) {\n        return lockExceptionResponse.map(le => {\n            const row = {}\n            if (!this.state.atBatchDeletionPage) {\n                row.organisationUnit = le.organisationUnit.displayName\n                row.organisationUnitId = le.organisationUnit.id\n            }\n            row.period = le.period.displayName\n            row.periodId = le.period.id\n            row.dataSet = le.dataSet.displayName\n            row.dataSetId = le.dataSet.id\n            return row\n        })\n    }\n\n    dataTableColumns() {\n        if (this.state.atBatchDeletionPage) {\n            return ['dataSet', 'period']\n        }\n        return ['organisationUnit', 'dataSet', 'period']\n    }\n\n    header() {\n        if (this.state.atBatchDeletionPage) {\n            return (\n                <div className={styles.headerContainer}>\n                    <h1 className={styles.header}>\n                        <IconButton onClick={this.backToLockExceptions}>\n                            <FontIcon\n                                className={classNames(\n                                    'material-icons',\n                                    styles.backArrowIcon\n                                )}\n                            >\n                                arrow_back\n                            </FontIcon>\n                        </IconButton>\n                        <span>\n                            {i18n.t(i18nKeys.lockException.batchDeletionHeader)}\n                        </span>\n                        <span className={styles.headerDivider}> | </span>\n                        <span className={styles.subHeader}>\n                            {i18n.t(\n                                i18nKeys.lockException.batchDeletionSubHeader\n                            )}\n                        </span>\n                    </h1>\n                </div>\n            )\n        }\n\n        return (\n            <div className={styles.headerContainer}>\n                <h1 className={styles.header}>\n                    {i18n.t(i18nKeys.lockException.title)}\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                <div>\n                    <RaisedButton\n                        className={styles.actionButton}\n                        label={i18n.t(i18nKeys.lockException.actionButton)}\n                        onClick={this.goToBatchDeletionPage}\n                        primary\n                        disabled={this.areActionsDisabled()}\n                    />\n                </div>\n            </div>\n        )\n    }\n\n    areActionsDisabled() {\n        return this.state.loading\n    }\n\n    addLockExceptionEnabled() {\n        return (\n            this.state.selectedOrgUnits.length > 0 &&\n            this.state.selectedDataSetId &&\n            this.state.selectedPeriodId\n        )\n    }\n\n    componentDidMount() {\n        this.loadLockExceptionsForPager(this.state.pager)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                LockException.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    loadLockExceptionsForPager(pager, userAction) {\n        const api = this.context.d2.Api.getApi()\n        const url =\n            `lockExceptions?page=${pager.page}&pageSize=${pager.pageSize}` +\n            '&fields=name,' +\n            'period[id,displayName],' +\n            'organisationUnit[id,displayName],' +\n            'dataSet[id,displayName]' +\n            '&order=name:asc'\n\n        // request to GET lock exceptions\n        if (userAction || (!this.state.loading && !this.state.loaded)) {\n            // Keep the previous message visible (p.e. deleting lock exception || add lock exception)\n            this.context.updateAppState(\n                this.state.deleteInProgress || this.state.addInProgress\n                    ? {\n                          atBatchDeletionPage: false,\n                          loaded: false,\n                          loading: true,\n                      }\n                    : {\n                          showSnackbar: true,\n                          snackbarConf: {\n                              type: LOADING,\n                              message: i18n.t(i18nKeys.lockException.loading),\n                          },\n                          pageState: {\n                              atBatchDeletionPage: false,\n                              loaded: false,\n                              loading: true,\n                          },\n                      }\n            )\n\n            api.get(url)\n                .then(response => {\n                    if (this.isPageMounted()) {\n                        let loadedState\n\n                        // If deleting a lock exception, show a success message instead of hiding the loading\n                        if (this.state.deleteInProgress) {\n                            loadedState = {\n                                showSnackbar: true,\n                                snackbarConf: {\n                                    type: SUCCESS,\n                                    message: i18n.t(\n                                        i18nKeys.lockException.removedMessage\n                                    ),\n                                },\n                            }\n                            this.state.deleteInProgress = false\n                            // If adding a lock exception, show a success message instead of hiding the loading\n                        } else if (this.state.addInProgress) {\n                            loadedState = {\n                                showSnackbar: true,\n                                snackbarConf: {\n                                    type: SUCCESS,\n                                    message: i18n.t(\n                                        i18nKeys.lockException.addedMessage\n                                    ),\n                                },\n                            }\n                            this.state.addInProgress = false\n                        } else {\n                            loadedState = {\n                                showSnackbar: false,\n                            }\n                        }\n\n                        this.context.updateAppState({\n                            ...loadedState,\n                            pageState: {\n                                loaded: true,\n                                lockExceptions: this.prepareLockExceptionsResponseToDataTable(\n                                    response.lockExceptions\n                                ),\n                                pager: response.pager,\n                                loading: false,\n                            },\n                        })\n                    }\n                })\n                .catch(error => {\n                    if (this.isPageMounted()) {\n                        const messageError =\n                            error && error.message\n                                ? error.message\n                                : i18n.t(i18nKeys.messages.unexpectedError)\n\n                        this.context.updateAppState({\n                            showSnackbar: true,\n                            snackbarConf: {\n                                type: ERROR,\n                                message: messageError,\n                            },\n                            pageState: {\n                                loaded: true,\n                                loading: false,\n                            },\n                        })\n                    }\n                })\n        }\n    }\n\n    // Get information for Batch Deletion Page\n    loadLockExceptionCombinations() {\n        const api = this.context.d2.Api.getApi()\n        const url =\n            'lockExceptions/combinations?fields=name, period[id,displayName], dataSet[id,displayName]'\n\n        // request to GET lock exception combinations\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: LOADING,\n                message: i18n.t(i18nKeys.lockException.loadingMessage),\n            },\n            pageState: {\n                atBatchDeletionPage: true,\n                loaded: false,\n                loading: true,\n            },\n        })\n\n        api.get(url)\n            .then(response => {\n                if (this.isPageMounted()) {\n                    this.context.updateAppState({\n                        showSnackbar: false,\n                        pageState: {\n                            loaded: true,\n                            lockExceptions: this.prepareLockExceptionsResponseToDataTable(\n                                response.lockExceptions\n                            ),\n                            loading: false,\n                        },\n                    })\n                }\n            })\n            .catch(error => {\n                if (this.isPageMounted()) {\n                    const messageError =\n                        error && error.message\n                            ? error.message\n                            : i18n.t(i18nKeys.messages.unexpectedError)\n\n                    this.context.updateAppState({\n                        showSnackbar: true,\n                        snackbarConf: {\n                            type: ERROR,\n                            message: messageError,\n                        },\n                        pageState: {\n                            loaded: true,\n                            loading: false,\n                        },\n                    })\n                }\n            })\n    }\n\n    updateSelectedOrgUnits(selectedOrgUnits) {\n        this.setState({ selectedOrgUnits })\n    }\n\n    updateSeletedDataSetId(selectedDataSetId) {\n        this.setState({ selectedDataSetId })\n    }\n\n    updateSelectedPeriodId(selectedPeriodId) {\n        this.setState({ selectedPeriodId })\n    }\n\n    onNextPageClick() {\n        const pager = Object.assign({}, this.state.pager)\n        pager.page += 1\n        this.loadLockExceptionsForPager(pager, true)\n    }\n\n    onPreviousPageClick() {\n        const pager = Object.assign({}, this.state.pager)\n        pager.page -= 1\n        this.loadLockExceptionsForPager(pager, true)\n    }\n\n    backToLockExceptions() {\n        this.loadLockExceptionsForPager(this.state.pager, true)\n    }\n\n    goToBatchDeletionPage() {\n        this.loadLockExceptionCombinations()\n    }\n\n    removeLockException(le) {\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: ACTION_MESSAGE,\n                message: i18n.t(i18nKeys.lockException.confirmDeleteMessage),\n                action: i18n.t(i18nKeys.lockException.confirmButton),\n                onActionClick: () => {\n                    const api = this.context.d2.Api.getApi()\n                    let deleteUrl = `lockExceptions?pe=${le.periodId}&ds=${\n                        le.dataSetId\n                    }`\n\n                    if (le.organisationUnitId) {\n                        deleteUrl += `&ou=${le.organisationUnitId}`\n                    }\n\n                    this.context.updateAppState({\n                        showSnackbar: true,\n                        snackbarConf: {\n                            type: LOADING,\n                            message: i18n.t(\n                                i18nKeys.lockException.loadingMessage\n                            ),\n                        },\n                        pageState: {\n                            ...this.state,\n                            loading: true,\n                        },\n                    })\n\n                    api.delete(deleteUrl)\n                        .then(() => {\n                            if (this.isPageMounted()) {\n                                const newPageState = {\n                                    ...this.state,\n                                    loading: false,\n                                }\n\n                                if (this.state.atBatchDeletionPage) {\n                                    newPageState.lockExceptions = this.state.lockExceptions.filter(\n                                        existingLockException =>\n                                            existingLockException.periodId !==\n                                                le.periodId ||\n                                            existingLockException.dataSetId !==\n                                                le.dataSetId\n                                    )\n\n                                    this.context.updateAppState({\n                                        showSnackbar: true,\n                                        snackbarConf: {\n                                            type: SUCCESS,\n                                            message: i18n.t(\n                                                i18nKeys.lockException\n                                                    .removedMessage\n                                            ),\n                                        },\n                                        pageState: newPageState,\n                                    })\n                                } else {\n                                    this.state.deleteInProgress = true\n                                    this.context.updateAppState({\n                                        pageState: newPageState,\n                                    })\n                                    this.loadLockExceptionsForPager(\n                                        LockException.initialPager,\n                                        false\n                                    )\n                                }\n                            }\n                        })\n                        .catch(error => {\n                            if (this.isPageMounted()) {\n                                const messageError =\n                                    error && error.message\n                                        ? error.message\n                                        : i18n.t(\n                                              i18nKeys.messages.unexpectedError\n                                          )\n\n                                this.context.updateAppState({\n                                    showSnackbar: true,\n                                    snackbarConf: {\n                                        type: ERROR,\n                                        message: messageError,\n                                    },\n                                    pageState: {\n                                        ...this.state,\n                                        loading: false,\n                                    },\n                                })\n                            }\n                        })\n                },\n            },\n        })\n    }\n\n    showLockExceptionFormDialog() {\n        const d2 = this.context.d2\n        if (\n            this.state.levels &&\n            this.state.groups &&\n            this.state.dataSets.length > 0\n        ) {\n            this.setState({ showAddDialogOpen: true })\n        } else {\n            Promise.all([\n                d2.models.organisationUnitLevel.list({\n                    paging: false,\n                    fields: 'id,level,displayName',\n                    order: 'level:asc',\n                }),\n                d2.models.organisationUnitGroup.list({\n                    paging: false,\n                    fields: 'id,displayName',\n                }),\n                d2.models.dataSet.list({\n                    paging: false,\n                    fields: 'id,displayName,periodType',\n                }),\n            ])\n                .then(([levels, groups, dataSets]) => {\n                    if (this.isPageMounted()) {\n                        this.setState({\n                            showAddDialogOpen: true,\n                            levels,\n                            groups,\n                            dataSets: dataSets.toArray(),\n                        })\n                    }\n                })\n                .catch(error => {\n                    if (this.isPageMounted()) {\n                        const messageError =\n                            error && error.message\n                                ? error.message\n                                : i18n.t(i18nKeys.messages.unexpectedError)\n\n                        this.context.updateAppState({\n                            showSnackbar: true,\n                            snackbarConf: {\n                                type: ERROR,\n                                message: messageError,\n                            },\n                            pageState: {\n                                ...this.state,\n                                loading: false,\n                            },\n                        })\n                    }\n                })\n        }\n    }\n\n    closeLockExceptionFormDialog() {\n        this.setState({\n            showAddDialogOpen: false,\n            selectedOrgUnits: [],\n            selectedDataSetId: null,\n            selectedPeriodId: null,\n        })\n    }\n\n    addLockException() {\n        if (this.addLockExceptionEnabled()) {\n            const api = this.context.d2.Api.getApi()\n            const orgUnitIds = this.state.selectedOrgUnits.map(orgUnitPath => {\n                const orgUnitPathSplitted = orgUnitPath.split('/')\n                return orgUnitPathSplitted[orgUnitPathSplitted.length - 1]\n            })\n\n            const formData = new FormData()\n            formData.append('ou', `[${orgUnitIds.join(',')}]`)\n            formData.append('pe', this.state.selectedPeriodId)\n            formData.append('ds', this.state.selectedDataSetId)\n\n            this.context.updateAppState({\n                showSnackbar: true,\n                snackbarConf: {\n                    type: LOADING,\n                    message: i18n.t(i18nKeys.lockException.addingMessage),\n                },\n                pageState: {\n                    showAddDialogOpen: false,\n                    selectedOrgUnits: [],\n                    selectedDataSetId: null,\n                    selectedPeriodId: null,\n                    loading: true,\n                },\n            })\n\n            api.post('lockExceptions', formData)\n                .then(() => {\n                    if (this.isPageMounted()) {\n                        this.context.updateAppState({\n                            pageState: {\n                                loaded: false,\n                                loading: false,\n                            },\n                        })\n                        this.state.addInProgress = true\n                        this.loadLockExceptionsForPager(\n                            LockException.initialPager,\n                            false\n                        )\n                    }\n                })\n                .catch(error => {\n                    if (this.isPageMounted()) {\n                        const messageError =\n                            error && error.message\n                                ? error.message\n                                : i18n.t(i18nKeys.messages.unexpectedError)\n\n                        this.context.updateAppState({\n                            showSnackbar: true,\n                            snackbarConf: {\n                                type: ERROR,\n                                message: messageError,\n                            },\n                            pageState: {\n                                ...this.state,\n                                loading: false,\n                            },\n                        })\n                    }\n                })\n        }\n    }\n\n    render() {\n        const currentlyShown = calculatePageValue(this.state.pager)\n        const paginationProps = {\n            hasNextPage: () =>\n                this.state.pager.page < this.state.pager.pageCount,\n            hasPreviousPage: () => this.state.pager.page > 1,\n            onNextPageClick: this.onNextPageClick,\n            onPreviousPageClick: this.onPreviousPageClick,\n            total: this.state.pager.total,\n            currentlyShown,\n        }\n\n        const addLockException = [\n            <FlatButton\n                className={styles.actionButton}\n                label={i18n.t(i18nKeys.lockException.cancelButton)}\n                onClick={this.closeLockExceptionFormDialog}\n            />,\n            <RaisedButton\n                className={styles.actionButton}\n                primary={Boolean(true)}\n                label={i18n.t(i18nKeys.lockException.addButton)}\n                onClick={this.addLockException}\n                disabled={!this.addLockExceptionEnabled()}\n            />,\n        ]\n\n        return (\n            <div className={styles.lockExceptionsTable}>\n                {this.header()}\n                {this.state.lockExceptions &&\n                this.state.lockExceptions.length ? (\n                    <div>\n                        {!this.areActionsDisabled() &&\n                            !this.state.atBatchDeletionPage && (\n                                <div className={styles.pagination}>\n                                    <Pagination {...paginationProps} />\n                                </div>\n                            )}\n                        <DataTable\n                            columns={this.dataTableColumns()}\n                            rows={this.state.lockExceptions}\n                            contextMenuActions={{\n                                remove: this.removeLockException,\n                            }}\n                            contextMenuIcons={{ remove: 'delete' }}\n                        />\n                        {!this.areActionsDisabled() &&\n                            !this.state.atBatchDeletionPage && (\n                                <div\n                                    className={classNames(\n                                        styles.pagination,\n                                        styles.marginForAddButton\n                                    )}\n                                >\n                                    <Pagination {...paginationProps} />\n                                </div>\n                            )}\n                    </div>\n                ) : (\n                    <Card\n                        style={{\n                            display: !this.state.loading ? 'block' : 'none',\n                        }}\n                    >\n                        <CardText>\n                            {i18n.t(i18nKeys.lockException.noDataMessage)}\n                        </CardText>\n                    </Card>\n                )}\n                {this.state.levels &&\n                    this.state.groups &&\n                    this.state.dataSets.length > 0 && (\n                        <Dialog\n                            title={i18n.t(\n                                i18nKeys.lockException.addLockExceptionFormTitle\n                            )}\n                            actions={addLockException}\n                            modal={false}\n                            open={this.state.showAddDialogOpen}\n                            contentStyle={jsStyles.dialog}\n                            onRequestClose={this.closeLockExceptionFormDialog}\n                        >\n                            <AddLockExceptionForm\n                                levels={this.state.levels}\n                                groups={this.state.groups}\n                                dataSets={this.state.dataSets}\n                                updateSelectedOrgUnits={\n                                    this.updateSelectedOrgUnits\n                                }\n                                updateSeletedDataSetId={\n                                    this.updateSeletedDataSetId\n                                }\n                                updateSelectedPeriodId={\n                                    this.updateSelectedPeriodId\n                                }\n                            />\n                        </Dialog>\n                    )}\n                {!this.state.atBatchDeletionPage && !this.areActionsDisabled() && (\n                    <FloatingActionButton\n                        id={'addExceptionButtonId'}\n                        style={jsStyles.addButton}\n                        onClick={this.showLockExceptionFormDialog}\n                    >\n                        <ContentAdd />\n                    </FloatingActionButton>\n                )}\n            </div>\n        )\n    }\n}\n\nexport default LockException\n","import React from 'react'\nimport { Card, CardText } from 'material-ui/Card'\nimport FlatButton from 'material-ui/FlatButton'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport {\n    LOADING,\n    SUCCESS,\n    ERROR,\n    WARNING,\n} from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport OrgUnitTree from 'd2-ui/lib/org-unit-tree/OrgUnitTree.component'\nimport Page from '../Page'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport i18n from '../../locales'\nimport { i18nKeys } from '../../i18n'\nimport styles from './MinMaxValueGeneration.module.css'\n\nconst MIX_MAX_VALUE_ENDPOINT = '/minMaxValues'\n\nclass MinMaxValueGeneration extends Page {\n    static STATE_PROPERTIES = [\n        'selected',\n        'dataSets',\n        'rootWithMember',\n        'loading',\n        'dataSetsSelectedCount',\n    ]\n\n    constructor() {\n        super()\n\n        this.state = {\n            selected: [],\n            dataSets: null,\n            rootWithMember: null,\n            loading: false,\n            dataSetsSelectedCount: 1,\n        }\n\n        this.handleOrgUnitClick = this.handleOrgUnitClick.bind(this)\n        this.dataSetsSelectRef = this.dataSetsSelectRef.bind(this)\n        this.dataSetsSelectClick = this.dataSetsSelectClick.bind(this)\n        this.generateMinMaxValueClick = this.generateMinMaxValueClick.bind(this)\n        this.removeMinMaxValueClick = this.removeMinMaxValueClick.bind(this)\n    }\n\n    componentDidMount() {\n        this.loadData()\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                MinMaxValueGeneration.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    isUserInteractionDisabled() {\n        return (\n            this.state.loading ||\n            this.state.dataSets == null ||\n            this.state.rootWithMembers === null\n        )\n    }\n\n    isDataSetSelected() {\n        return this.state.dataSetsSelectedCount === 0\n    }\n\n    loadData() {\n        const d2 = this.context.d2\n        if (this.state.dataSets == null || this.state.rootWithMember == null) {\n            Promise.all([\n                d2.models.organisationUnits.list({\n                    paging: false,\n                    level: 1,\n                    fields:\n                        'id,displayName,path,children::isNotEmpty,memberCount',\n                }),\n                d2.models.dataSet.list({\n                    paging: false,\n                    fields: 'id,displayName',\n                }),\n            ])\n                .then(([organisationUnitsResponse, dataSetsResponse]) => {\n                    if (this.isPageMounted()) {\n                        const organisationUnits = organisationUnitsResponse.toArray()\n                        const selected = organisationUnits.map(ou => ou.path)\n                        this.setState({\n                            rootWithMembers: organisationUnits[0],\n                            dataSets: dataSetsResponse.toArray(),\n                            selected,\n                        })\n                    }\n                })\n                .catch(() => {\n                    if (this.isPageMounted()) {\n                        this.context.updateAppState({\n                            showSnackbar: true,\n                            snackbarConf: {\n                                type: ERROR,\n                                message: i18n.t(\n                                    i18nKeys.minMaxValueGeneration\n                                        .notPossibleToLoadMessage\n                                ),\n                            },\n                            pageState: {\n                                ...this.state,\n                                loading: false,\n                            },\n                        })\n                    }\n                })\n        }\n    }\n\n    dataSetsSelectRef(ref) {\n        this.dataSetsSelect = ref\n    }\n\n    dataSetsSelectClick() {\n        this.setState({\n            dataSetsSelectedCount: this.dataSetsSelect.selectedOptions.length,\n        })\n    }\n\n    handleOrgUnitClick(event, orgUnit) {\n        if (!this.state.selected.includes(orgUnit.path)) {\n            this.setState({ selected: [orgUnit.path] })\n        }\n    }\n\n    generateMinMaxValueClick() {\n        if (\n            this.dataSetsSelect.selectedOptions.length === 0 ||\n            this.state.selected.length === 0\n        ) {\n            this.context.updateAppState({\n                showSnackbar: true,\n                snackbarConf: {\n                    type: WARNING,\n                    message: i18n.t(\n                        i18nKeys.minMaxValueGeneration.warningMessage\n                    ),\n                },\n                pageState: {\n                    ...this.state,\n                    loading: false,\n                },\n            })\n            return\n        }\n\n        const api = this.context.d2.Api.getApi()\n        const selectedOrganisationUnitSplitted = this.state.selected[0].split(\n            '/'\n        )\n        const selectedOrganisationUnit =\n            selectedOrganisationUnitSplitted[\n                selectedOrganisationUnitSplitted.length - 1\n            ]\n        const dataSetIds = []\n        for (let i = 0; i < this.dataSetsSelect.selectedOptions.length; i++) {\n            dataSetIds.push(this.dataSetsSelect.selectedOptions[i].value)\n        }\n\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: LOADING,\n                message: i18n.t(\n                    i18nKeys.minMaxValueGeneration.performingMessage\n                ),\n            },\n            pageState: {\n                ...this.state,\n                loading: true,\n            },\n        })\n\n        api.post(MIX_MAX_VALUE_ENDPOINT, {\n            organisationUnit: selectedOrganisationUnit,\n            dataSets: dataSetIds,\n        })\n            .then(() => {\n                if (this.isPageMounted()) {\n                    this.context.updateAppState({\n                        showSnackbar: true,\n                        snackbarConf: {\n                            type: SUCCESS,\n                            message: i18n.t(\n                                i18nKeys.minMaxValueGeneration\n                                    .minMaxGenerationDone\n                            ),\n                        },\n                        pageState: {\n                            ...this.state,\n                            loading: false,\n                        },\n                    })\n                }\n            })\n            .catch(() => {\n                if (this.isPageMounted()) {\n                    this.context.updateAppState({\n                        showSnackbar: true,\n                        snackbarConf: {\n                            type: ERROR,\n                            message: i18n.t(i18nKeys.messages.unexpectedError),\n                        },\n                        pageState: {\n                            ...this.state,\n                            loading: false,\n                        },\n                    })\n                }\n            })\n    }\n\n    removeMinMaxValueClick() {\n        if (\n            this.dataSetsSelect.selectedOptions.length === 0 ||\n            this.state.selected.length === 0\n        ) {\n            this.context.updateAppState({\n                showSnackbar: true,\n                snackbarConf: {\n                    type: WARNING,\n                    message: i18n.t(\n                        i18nKeys.minMaxValueGeneration.warningMessage\n                    ),\n                },\n                pageState: {\n                    ...this.state,\n                    loading: false,\n                },\n            })\n            return\n        }\n\n        const api = this.context.d2.Api.getApi()\n        const selectedOrganisationUnitSplitted = this.state.selected[0].split(\n            '/'\n        )\n        const selectedOrgnisationUnit =\n            selectedOrganisationUnitSplitted[\n                selectedOrganisationUnitSplitted.length - 1\n            ]\n        const dataSetIds = []\n        for (let i = 0; i < this.dataSetsSelect.selectedOptions.length; i++) {\n            dataSetIds.push(this.dataSetsSelect.selectedOptions[i].value)\n        }\n\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: LOADING,\n                message: i18n.t(i18nKeys.minMaxValueGeneration.removingMessage),\n            },\n            pageState: {\n                ...this.state,\n                loading: true,\n            },\n        })\n\n        api.delete(\n            `${MIX_MAX_VALUE_ENDPOINT}/${selectedOrgnisationUnit}?ds=${dataSetIds}`\n        )\n            .then(() => {\n                if (this.isPageMounted()) {\n                    this.context.updateAppState({\n                        showSnackbar: true,\n                        snackbarConf: {\n                            type: SUCCESS,\n                            message: i18n.t(\n                                i18nKeys.minMaxValueGeneration.minMaxRemovalDone\n                            ),\n                        },\n                        pageState: {\n                            ...this.state,\n                            loading: false,\n                        },\n                    })\n                }\n            })\n            .catch(() => {\n                if (this.isPageMounted()) {\n                    this.context.updateAppState({\n                        showSnackbar: true,\n                        snackbarConf: {\n                            type: ERROR,\n                            message: i18n.t(i18nKeys.messages.unexpectedError),\n                        },\n                        pageState: {\n                            ...this.state,\n                            loading: false,\n                        },\n                    })\n                }\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className={styles.header}>\n                    {i18n.t(i18nKeys.minMaxValueGeneration.title)}\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                <Card>\n                    <CardText>\n                        <div className={styles.container}>\n                            {this.state.dataSets ? (\n                                <div className={styles.left}>\n                                    <div className={styles.label}>\n                                        {i18n.t(\n                                            i18nKeys.minMaxValueGeneration\n                                                .dataSet\n                                        )}\n                                    </div>\n                                    <select\n                                        multiple\n                                        onClick={this.dataSetsSelectClick}\n                                        disabled={this.isUserInteractionDisabled()}\n                                        className={styles.select}\n                                        ref={this.dataSetsSelectRef}\n                                    >\n                                        {this.state.dataSets.map(item => (\n                                            <option\n                                                key={item.id}\n                                                value={item.id}\n                                                className={styles.options}\n                                            >\n                                                {item.displayName}\n                                            </option>\n                                        ))}\n                                    </select>\n                                </div>\n                            ) : (\n                                <div className={styles.left}>\n                                    <span>\n                                        {i18n.t(\n                                            i18nKeys.minMaxValueGeneration\n                                                .loadingDataSetsMessage\n                                        )}\n                                    </span>\n                                </div>\n                            )}\n                            {this.state.rootWithMembers ? (\n                                <div className={styles.right}>\n                                    <div className={styles.label}>\n                                        {i18n.t(\n                                            i18nKeys.minMaxValueGeneration\n                                                .organisationUnitSelect\n                                        )}\n                                    </div>\n                                    <div className={styles.tree}>\n                                        <OrgUnitTree\n                                            className={styles.tree}\n                                            hideMemberCount\n                                            root={this.state.rootWithMembers}\n                                            selected={this.state.selected}\n                                            initiallyExpanded={[\n                                                `/${\n                                                    this.state.rootWithMembers\n                                                        .id\n                                                }`,\n                                            ]}\n                                            onSelectClick={\n                                                this.handleOrgUnitClick\n                                            }\n                                        />\n                                    </div>\n                                </div>\n                            ) : (\n                                <div className={styles.right}>\n                                    <span>\n                                        {i18n.t(\n                                            i18nKeys.minMaxValueGeneration\n                                                .updatingTree\n                                        )}\n                                    </span>\n                                </div>\n                            )}\n                        </div>\n                        <RaisedButton\n                            id={'generateMinMaxBtnId'}\n                            className={styles.actionButton}\n                            primary\n                            label={i18n.t(\n                                i18nKeys.minMaxValueGeneration.actionButton\n                            )}\n                            onClick={this.generateMinMaxValueClick}\n                            disabled={\n                                this.isUserInteractionDisabled() ||\n                                this.isDataSetSelected()\n                            }\n                        />\n                        <FlatButton\n                            id={'removeMinMaxBtnId'}\n                            className={styles.actionButton}\n                            secondary\n                            label={i18n.t(\n                                i18nKeys.minMaxValueGeneration.removeButton\n                            )}\n                            onClick={this.removeMinMaxValueClick}\n                            disabled={\n                                this.isUserInteractionDisabled() ||\n                                this.isDataSetSelected()\n                            }\n                        />\n                    </CardText>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default MinMaxValueGeneration\n","import { i18nKeys } from '../../i18n'\n\nexport const ANALYTICS_TABLES_ENDPOINT = 'resourceTables/analytics'\nexport const PULL_INTERVAL = 5000\nexport const ANALYTIC_TABLES_TASK_SUMMARY_ENDPOINT =\n    'system/tasks/ANALYTICS_TABLE'\nexport const DEFAULT_LAST_YEARS = -1\nexport const LAST_YEARS_INPUT_KEY = 'lastYears'\n\nconst LAST_YEAR = 10\nconst FIRST_YEAR = 1\n\nconst lastYearValues = [\n    {\n        key: DEFAULT_LAST_YEARS,\n        value: DEFAULT_LAST_YEARS,\n        displayName: i18nKeys.analytics.allLastYears,\n    },\n]\n\n/* Last years dropdown options */\nfor (let i = FIRST_YEAR; i <= LAST_YEAR; i++) {\n    lastYearValues.push({\n        key: i,\n        value: i,\n        displayName: i,\n    })\n}\n\nexport const lastYearElements = lastYearValues\n\n/* Form checkboxes */\nexport const analyticsCheckboxes = [\n    {\n        key: 'skipAggregate',\n        label: i18nKeys.analytics.skipAggregate,\n    },\n    {\n        key: 'skipResourceTables',\n        label: i18nKeys.analytics.skipResourceTables,\n    },\n    {\n        key: 'skipEvents',\n        label: i18nKeys.analytics.skipEvents,\n    },\n    {\n        key: 'skipEnrollment',\n        label: i18nKeys.analytics.skipEnrollment,\n    },\n]\n","import React from 'react'\nimport {\n    Card,\n    CardText,\n    GridTile,\n    Checkbox,\n    SelectField,\n    MenuItem,\n    RaisedButton,\n} from 'material-ui'\nimport classNames from 'classnames'\nimport {\n    ERROR,\n    LOADING,\n} from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport Page from '../Page'\nimport NotificationsTable from '../../components/notifications-table/NotificationsTable'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport {\n    PULL_INTERVAL,\n    ANALYTICS_TABLES_ENDPOINT,\n    ANALYTIC_TABLES_TASK_SUMMARY_ENDPOINT,\n    DEFAULT_LAST_YEARS,\n    LAST_YEARS_INPUT_KEY,\n    analyticsCheckboxes,\n    lastYearElements,\n} from '../analytics/analytics.conf'\nimport i18n from '../../locales'\nimport { i18nKeys } from '../../i18n'\nimport styles from '../Page.module.css'\n\nclass Analytics extends Page {\n    static STATE_PROPERTIES = [\n        'checkboxes',\n        'loading',\n        'lastYears',\n        'notifications',\n        'intervalId',\n    ]\n\n    constructor() {\n        super()\n\n        const checkboxes = {}\n        for (let i = 0; i < analyticsCheckboxes.length; i++) {\n            const checkbox = analyticsCheckboxes[i]\n            checkboxes[checkbox.key] = { checked: false }\n        }\n\n        this.state = {\n            checkboxes,\n            loading: false,\n            lastYears: DEFAULT_LAST_YEARS,\n            notifications: [],\n            intervalId: null,\n        }\n\n        this.initAnalyticsTablesGeneration = this.initAnalyticsTablesGeneration.bind(\n            this\n        )\n        this.onChangeLastYears = this.onChangeLastYears.bind(this)\n    }\n\n    componentDidMount() {\n        this.requestTaskSummary()\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                Analytics.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    componentWillUnmount() {\n        super.componentWillUnmount()\n\n        this.cancelPoollingRequests()\n    }\n\n    cancelPoollingRequests() {\n        clearInterval(this.state.intervalId)\n    }\n\n    setLoadingPageState() {\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: LOADING,\n            },\n            pageState: {\n                loading: true,\n                notifications: [],\n            },\n        })\n    }\n\n    setLoadedPageWithErrorState(error) {\n        const messageError =\n            error && error.message\n                ? error.message\n                : i18n.t(i18nKeys.analytics.unexpectedError)\n        this.cancelPoollingRequests()\n        this.context.updateAppState({\n            showSnackbar: true,\n            snackbarConf: {\n                type: ERROR,\n                message: messageError,\n            },\n            pageState: {\n                loading: false,\n            },\n        })\n    }\n\n    areActionsDisabled() {\n        return this.state.loading\n    }\n\n    buildFormData() {\n        let formData = null\n        const checkboxKeys = Object.keys(this.state.checkboxes)\n        for (let i = 0; i < checkboxKeys.length; i++) {\n            const key = checkboxKeys[i]\n            const checked = this.state.checkboxes[key].checked\n            formData = formData || new FormData()\n            formData.append(key, checked)\n        }\n\n        if (this.state.lastYears !== DEFAULT_LAST_YEARS) {\n            formData.append(LAST_YEARS_INPUT_KEY, this.state.lastYears)\n        }\n\n        return formData\n    }\n\n    isAnalyzingTables = () => !!this.state.intervalId\n\n    startsPooling = () =>\n        setInterval(() => {\n            this.requestTaskSummary()\n        }, PULL_INTERVAL)\n\n    isJobInProgress = jobNotifications =>\n        // When the most recent job comes back as completed the whole process is done\n        jobNotifications.every(notification => !notification.completed)\n\n    initAnalyticsTablesGeneration() {\n        const api = this.context.d2.Api.getApi()\n        const formData = this.buildFormData()\n\n        this.setLoadingPageState()\n        api.post(ANALYTICS_TABLES_ENDPOINT, formData)\n            .then(response => {\n                if (this.isPageMounted() && response) {\n                    const intervalId = this.startsPooling()\n\n                    this.setState({\n                        intervalId,\n                    })\n                }\n            })\n            .catch(e => {\n                if (this.isPageMounted()) {\n                    this.setLoadedPageWithErrorState(e)\n                }\n            })\n    }\n\n    updateStateForInProgressJobAccordingTaskSummaryResponse = taskSummaryResponse => {\n        const taskSummary = taskSummaryResponse || []\n        const completed = !this.isJobInProgress(taskSummary)\n\n        if (completed) {\n            this.cancelPoollingRequests()\n        }\n\n        this.context.updateAppState({\n            showSnackbar: !completed,\n            pageState: {\n                notifications: this.getUpdatedNotifications(taskSummary),\n                loading: !completed,\n            },\n        })\n    }\n\n    getUpdatedNotifications(taskSummary = []) {\n        // Notification table needs to be updated when new tasks are added\n        if (taskSummary.length <= this.state.notifications.length) {\n            return this.state.notifications\n        }\n\n        const lastIndex = taskSummary.length - 1\n\n        // Reverse to sort oldest-newest\n        // Assumption: all tasks are completed, apart from the last one,\n        // which is the in-progress task.\n        // Exception is when the most recent task comes back as completed\n        // this indicates the entire process is done, so we respect that completed status.\n        return taskSummary.reverse().map((x, i) => ({\n            ...x,\n            completed: x.completed || i < lastIndex,\n        }))\n    }\n\n    verifyInProgressJobsForTaskSummaryResponseAndUpdateState = taskSummaryResponse => {\n        if (\n            taskSummaryResponse &&\n            taskSummaryResponse.length &&\n            this.isJobInProgress(taskSummaryResponse)\n        ) {\n            const intervalId = this.startsPooling()\n\n            this.context.updateAppState({\n                showSnackbar: true,\n                snackbarConf: {\n                    type: LOADING,\n                },\n                pageState: {\n                    notifications: this.getUpdatedNotifications(\n                        taskSummaryResponse\n                    ),\n                    loading: true,\n                    intervalId,\n                },\n            })\n        }\n    }\n\n    requestTaskSummary() {\n        const api = this.context.d2.Api.getApi()\n\n        api.get(ANALYTIC_TABLES_TASK_SUMMARY_ENDPOINT)\n            .then(taskSummaryResponse => {\n                /* not mounted finishes */\n                if (!this.isPageMounted()) {\n                    return\n                }\n\n                // showing current job\n                if (this.isAnalyzingTables()) {\n                    this.updateStateForInProgressJobAccordingTaskSummaryResponse(\n                        taskSummaryResponse\n                    )\n                    // so far no jobs is being processed, lets check if server is has any in progress job\n                } else {\n                    this.verifyInProgressJobsForTaskSummaryResponseAndUpdateState(\n                        taskSummaryResponse\n                    )\n                }\n            })\n            .catch(e => {\n                if (this.isPageMounted()) {\n                    this.setLoadedPageWithErrorState(e)\n                }\n            })\n    }\n\n    onChangeLastYears(event, index, value) {\n        this.setState({\n            lastYears: value,\n        })\n    }\n\n    toggleCheckbox = (initialCheckboxes, key) => () => {\n        const checkboxes = Object.assign({}, initialCheckboxes)\n        const checkboxState = checkboxes[key].checked\n        checkboxes[key].checked = !checkboxState\n        this.setState({ checkboxes })\n    }\n\n    renderCheckbox = checkbox => (\n        <GridTile\n            key={checkbox.key}\n            className={classNames('col-xs-12 col-md-6', styles.formControl)}\n        >\n            <Checkbox\n                label={i18n.t(checkbox.label)}\n                checked={this.state.checkboxes[checkbox.key].checked}\n                onCheck={this.toggleCheckbox(\n                    this.state.checkboxes,\n                    checkbox.key\n                )}\n                labelStyle={{ color: '#000000' }}\n                iconStyle={{ fill: '#000000' }}\n                disabled={this.areActionsDisabled()}\n            />\n        </GridTile>\n    )\n\n    render() {\n        const gridElements = analyticsCheckboxes.map(this.renderCheckbox)\n        return (\n            <div>\n                <h1>\n                    {i18n.t(i18nKeys.analytics.title)}\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                <Card className={styles.cardContainer}>\n                    <CardText>\n                        <h4 className={styles.uppercase}>\n                            {i18nKeys.analytics.analyticsTablesUpdateHeader}\n                        </h4>\n                        <div\n                            className={classNames(styles.gridContainer, 'row')}\n                        >\n                            {gridElements}\n                            <SelectField\n                                disabled={this.areActionsDisabled()}\n                                className=\"col-xs-12 col-md-6\"\n                                floatingLabelText={i18n.t(\n                                    i18nKeys.analytics.lastYearsLabel\n                                )}\n                                onChange={this.onChangeLastYears}\n                                value={this.state.lastYears}\n                                fullWidth\n                            >\n                                {lastYearElements.map(item => (\n                                    <MenuItem\n                                        key={item.key}\n                                        value={item.value}\n                                        primaryText={i18n.t(item.displayName)}\n                                    />\n                                ))}\n                            </SelectField>\n                        </div>\n                        <RaisedButton\n                            id={'startExportBtnId'}\n                            primary\n                            label={i18n.t(i18nKeys.analytics.actionButton)}\n                            onClick={this.initAnalyticsTablesGeneration}\n                            disabled={this.areActionsDisabled()}\n                        />\n                    </CardText>\n                </Card>\n                {this.state.notifications.length > 0 && (\n                    <Card className={styles.cardContainer}>\n                        <CardText>\n                            <NotificationsTable\n                                notifications={this.state.notifications}\n                                animateIncomplete\n                            />\n                        </CardText>\n                    </Card>\n                )}\n            </div>\n        )\n    }\n}\n\nexport default Analytics\n","import DataIntegrity from './data-integrity/DataIntegrity'\nimport Maintenance from './maintenance/Maintenance'\nimport ResourceTables from './resource-tables/ResourceTables'\nimport DataStatistics from './data-statistics/DataStatistics'\nimport LockException from './lock-exception/LockException'\nimport MinMaxValueGeneration from './min-max-value-generation/MinMaxValueGeneration'\nimport Analytics from './analytics/Analytics'\nimport { i18nKeys } from '../i18n'\n\nexport const DATA_INTEGRITY_SECTION_KEY = 'dataIntegrity'\nexport const MAINTENANCE_SECTION_KEY = 'maintenance'\nexport const RESOURCE_TABLES_SECTION_KEY = 'resourceTables'\nexport const DATA_STATISTICS_SECTION_KEY = 'statistics'\nexport const LOCK_EXCEPTION_SECTION_KEY = 'lock'\nexport const MIN_MAX_VALUE_GENERATION_SECTION_KEY = 'minMax'\nexport const ANALYTICS_SECTION_KEY = 'analytics'\n\nexport const sections = [\n    {\n        key: DATA_INTEGRITY_SECTION_KEY,\n        path: '/data-integrity',\n        component: DataIntegrity,\n        info: {\n            label: i18nKeys.dataIntegrity.label,\n            icon: 'link',\n            description: i18nKeys.dataIntegrity.description,\n            actionText: i18nKeys.dataIntegrity.actionText,\n            docs: 'dataAdmin_dataIntegrity',\n        },\n    },\n    {\n        key: MAINTENANCE_SECTION_KEY,\n        path: '/maintenance',\n        component: Maintenance,\n        info: {\n            label: i18nKeys.maintenance.label,\n            icon: 'settings',\n            description: i18nKeys.maintenance.description,\n            actionText: i18nKeys.maintenance.actionText,\n            docs: 'data_admin_maintenance',\n        },\n    },\n    {\n        key: RESOURCE_TABLES_SECTION_KEY,\n        path: '/resourceTables',\n        component: ResourceTables,\n        info: {\n            label: i18nKeys.resourceTables.label,\n            icon: 'view_list',\n            description: i18nKeys.resourceTables.description,\n            actionText: i18nKeys.resourceTables.actionText,\n            docs: 'dataAdmin_resourceTables',\n        },\n    },\n    {\n        key: ANALYTICS_SECTION_KEY,\n        path: '/analytics',\n        component: Analytics,\n        info: {\n            label: i18nKeys.analytics.label,\n            icon: 'multiline_chart',\n            description: i18nKeys.analytics.description,\n            actionText: i18nKeys.analytics.actionText,\n            docs: 'generate_analytics_tables',\n        },\n    },\n    {\n        key: DATA_STATISTICS_SECTION_KEY,\n        path: '/data-statistics',\n        component: DataStatistics,\n        info: {\n            label: i18nKeys.dataStatistics.label,\n            icon: 'timeline',\n            description: i18nKeys.dataStatistics.description,\n            actionText: i18nKeys.dataStatistics.actionText,\n            docs: 'dataAdmin_dataStatistics',\n        },\n    },\n    {\n        key: LOCK_EXCEPTION_SECTION_KEY,\n        path: '/lock-exception',\n        component: LockException,\n        info: {\n            label: i18nKeys.lockException.label,\n            icon: 'lock',\n            description: i18nKeys.lockException.description,\n            actionText: i18nKeys.lockException.actionText,\n            docs: 'dataAdmin_lockException',\n        },\n    },\n    {\n        key: MIN_MAX_VALUE_GENERATION_SECTION_KEY,\n        path: '/min-max-value-generation',\n        component: MinMaxValueGeneration,\n        info: {\n            label: i18nKeys.minMaxValueGeneration.label,\n            icon: 'compare_arrows',\n            description: i18nKeys.minMaxValueGeneration.description,\n            actionText: i18nKeys.minMaxValueGeneration.actionText,\n            docs: 'dataAdmin_minMaxValueGeneration',\n        },\n    },\n]\n\nexport const getDocsKeyForSection = sectionKey => {\n    for (let i = 0; i < sections.length; i++) {\n        const section = sections[i]\n        if (section.key === sectionKey) {\n            return section.info.docs\n        }\n    }\n\n    return ''\n}\n","import React from 'react'\nimport classNames from 'classnames'\nimport GridSection from './grid-section/GridSection'\nimport { sections } from '../sections.conf'\nimport styles from './Home.module.css'\n\nconst Home = () => {\n    const gridElements = sections.map(section => (\n        <div\n            key={section.key}\n            className={classNames(\n                'col-sm-12 col-md-6 col-lg-4',\n                styles.gridContainer\n            )}\n        >\n            <GridSection key={section.key} section={section} />\n        </div>\n    ))\n\n    return (\n        <div id=\"grid-list-id\" className=\"row\">\n            {gridElements}\n        </div>\n    )\n}\n\nexport default Home\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nclass NoMatch extends PureComponent {\n    static propTypes = {\n        location: PropTypes.object.isRequired,\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>\n                    No match for <code>{this.props.location.pathname}</code>\n                </h3>\n            </div>\n        )\n    }\n}\n\nexport default NoMatch\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Route, Switch } from 'react-router-dom'\nimport Home from '../../pages/home/Home'\nimport NoMatch from './NoMatch'\nimport { sections } from '../../pages/sections.conf'\n\nconst AppRouter = ({ pageState }) => {\n    const routes = sections.map(section => {\n        const routeRender = () => {\n            const Page = section.component\n            return <Page sectionKey={section.key} {...pageState} />\n        }\n        return (\n            <Route\n                key={section.key}\n                exact\n                path={section.path}\n                render={routeRender}\n            />\n        )\n    })\n\n    /* Home route */\n    const homeRouteRender = () => <Home sectionKey=\"home\" />\n\n    routes.push(<Route key=\"home\" exact path=\"/\" render={homeRouteRender} />)\n\n    /* No Match Route */\n    routes.push(<Route key=\"no-match-route\" component={NoMatch} />)\n\n    return (\n        <main>\n            <Switch>{routes}</Switch>\n        </main>\n    )\n}\n\nAppRouter.propTypes = {\n    pageState: PropTypes.object,\n}\n\nAppRouter.defaultProps = {\n    pageState: {},\n}\n\nexport default AppRouter\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { withRouter } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\nimport Sidebar from 'd2-ui/lib/sidebar/Sidebar.component'\nimport FeedbackSnackbar from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbar.component'\nimport { LOADING } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport CircularProgress from 'd2-ui/lib/circular-progress/CircularProgress'\nimport i18n from './locales'\nimport { injectTranslationsToD2 } from './configI18n'\nimport AppRouter from './components/app-router/AppRouter'\nimport { sections } from './pages/sections.conf'\nimport './custom-css/D2UISidebarOverrides.css'\nimport { HeaderBar } from '@dhis2/ui-widgets'\n\nimport styles from './App.module.css'\n\nexport class DumbApp extends PureComponent {\n    static childContextTypes = {\n        showSnackbar: PropTypes.bool,\n        snackbarConf: PropTypes.shape({\n            type: PropTypes.string,\n            message: PropTypes.string,\n            duration: PropTypes.number,\n        }),\n        currentSection: PropTypes.string,\n        updateAppState: PropTypes.func,\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    constructor(props, context) {\n        super(props)\n\n        injectTranslationsToD2(context.d2)\n\n        this.state = {\n            currentSection: '',\n            showSnackbar: false,\n            snackbarConf: {\n                type: '',\n                message: '',\n            },\n        }\n\n        this.updateAppState = this.updateAppState.bind(this)\n    }\n\n    getChildContext() {\n        return {\n            showSnackbar: this.state.showSnackbar,\n            snackbarConf: this.state.snackbarConf,\n            currentSection: this.state.currentSection,\n            updateAppState: this.updateAppState,\n        }\n    }\n\n    updateAppState(appState) {\n        if (\n            appState.currentSection &&\n            !appState.pageState &&\n            this.state.currentSection !== appState.currentSection\n        ) {\n            // clear page state because we are updating page\n            this.setState({\n                ...appState,\n                pageState: undefined,\n                showSnackbar: false,\n            })\n        } else {\n            this.setState(appState)\n        }\n    }\n\n    showLoadingProgress() {\n        // FIXME: remove loading snackbar info and replace with loading state\n        return (\n            this.state.snackbarConf.type === LOADING && this.state.showSnackbar\n        )\n    }\n\n    render() {\n        const nonOnChangeSection = () => null\n        const translatedSections = sections.map(section =>\n            Object.assign(section, {\n                icon: section.info.icon,\n                label: i18n.t(section.info.label),\n                containerElement: <Link to={section.path} />,\n            })\n        )\n\n        const feedbackElement = this.showLoadingProgress() ? (\n            <div id={'circularLoadingId'} className={styles.centered}>\n                <CircularProgress />\n            </div>\n        ) : (\n            <span id={'feedbackSnackbarId'}>\n                <FeedbackSnackbar\n                    show={this.state.showSnackbar}\n                    conf={this.state.snackbarConf}\n                />\n            </span>\n        )\n\n        return (\n            <div>\n                <HeaderBar appName={i18n.t('Data Administration')} />\n                <Sidebar\n                    sections={translatedSections}\n                    currentSection={this.state.currentSection}\n                    onChangeSection={nonOnChangeSection}\n                />\n                <div className={styles.contentWrapper}>\n                    <div className={styles.contentArea}>\n                        <AppRouter pageState={this.state.pageState} />\n                    </div>\n                </div>\n                {feedbackElement}\n            </div>\n        )\n    }\n}\n\nexport default withRouter(DumbApp)\n","import Spacing from 'material-ui/styles/spacing'\nimport getMuiTheme from 'material-ui/styles/getMuiTheme'\nimport {\n    blue100,\n    blue700,\n    grey100,\n    grey400,\n    orange500,\n    orangeA200,\n    darkBlack,\n    white,\n} from 'material-ui/styles/colors'\nimport { fade } from 'material-ui/utils/colorManipulator'\n\nconst theme = {\n    spacing: Spacing,\n    fontFamily: 'Roboto, sans-serif',\n    palette: {\n        primary1Color: '#004ba0',\n        primary2Color: blue700,\n        primary3Color: blue100,\n        accent1Color: orange500,\n        accent2Color: grey100,\n        accent3Color: orangeA200,\n        textColor: darkBlack,\n        alternateTextColor: white,\n        canvasColor: white,\n        borderColor: grey400,\n        disabledColor: fade(darkBlack, 0.3),\n    },\n}\n\nconst muiTheme = getMuiTheme(theme)\n\nexport default muiTheme\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n)\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter } from 'react-router-dom'\nimport { getUserSettings } from 'd2/lib/d2'\nimport D2UIApp from 'd2-ui/lib/app/D2UIApp'\nimport log from 'loglevel'\nimport { configI18n } from './configI18n'\nimport App from './App'\nimport appTheme from './theme'\nimport * as serviceWorker from './serviceWorker'\nimport './index.css'\n\nimport 'typeface-roboto'\nimport 'material-design-icons-iconfont'\n\nimport { Provider } from '@dhis2/app-runtime'\nimport { CssReset } from '@dhis2/ui-core'\n\nconst { NODE_ENV, REACT_APP_DHIS2_BASE_URL } = process.env\nconst isProduction = NODE_ENV === 'production'\n\n/**\n * Configure logging\n */\n\nlog.setLevel(isProduction ? log.levels.INFO : log.levels.DEBUG)\n\n/**\n * Render app\n */\n\nconst config = {\n    baseUrl: REACT_APP_DHIS2_BASE_URL,\n    apiVersion: '33',\n}\n\nReactDOM.render(\n    <Provider config={config}>\n        <D2UIApp\n            muiTheme={appTheme}\n            initConfig={{\n                baseUrl: `${REACT_APP_DHIS2_BASE_URL}/api`,\n                schemas: [\n                    'organisationUnitLevel',\n                    'organisationUnitGroup',\n                    'organisationUnit',\n                    'dataSet',\n                ],\n            }}\n        >\n            <HashRouter>\n                <CssReset />\n                <App />\n            </HashRouter>\n        </D2UIApp>\n    </Provider>,\n    document.getElementById('root')\n)\n\ngetUserSettings().then(userSettings => {\n    const { keyUiLocale } = userSettings\n    sessionStorage.setItem('uiLocale', keyUiLocale || 'en')\n\n    configI18n(userSettings)\n})\n\n/**\n * If you want your app to work offline and load faster, you can change\n * unregister() to register() below. Note this comes with some pitfalls.\n * Learn more about service workers: https://bit.ly/CRA-PWA\n */\n\nserviceWorker.register()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridElement\":\"GridSection_gridElement__3DOqL\",\"gridTitleBar\":\"GridSection_gridTitleBar__2-OEV\",\"gridTitleDescription\":\"GridSection_gridTitleDescription__1jy96\",\"gridIcon\":\"GridSection_gridIcon__1INTx\",\"gridDescription\":\"GridSection_gridDescription__1NNso\",\"gridActionText\":\"GridSection_gridActionText__1S-Gc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectsContainer\":\"AddLockExceptionForm_selectsContainer__oGoGJ\",\"organisationUnitTreeContainer\":\"AddLockExceptionForm_organisationUnitTreeContainer__1ihnJ\",\"left\":\"AddLockExceptionForm_left__Bdizi\",\"right\":\"AddLockExceptionForm_right__1Fbau\",\"ouLabel\":\"AddLockExceptionForm_ouLabel__85FLn\",\"organisationUnitTreeCard\":\"AddLockExceptionForm_organisationUnitTreeCard__2UJ2-\"};"],"sourceRoot":""}